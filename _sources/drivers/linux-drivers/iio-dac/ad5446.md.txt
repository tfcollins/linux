---
wiki-source: https://wiki.analog.com/resources/tools-software/linux-drivers/iio-dac/ad5446
title: AD5662: 2.7-5.5V, 16-Bit nanoDACÂ® Converter in a Sot-23
---

AD5446 IIO DAC Linux Driver
===========================

# Supported Devices

-   [AD5300](https://www.google.com/search?q=AD5300&btnI=lucky)
-   [AD5301](https://www.google.com/search?q=AD5301&btnI=lucky)
-   [AD5310](https://www.google.com/search?q=AD5310&btnI=lucky)
-   [AD5311](https://www.google.com/search?q=AD5311&btnI=lucky)
-   [AD5320](https://www.google.com/search?q=AD5320&btnI=lucky)
-   [AD5321](https://www.google.com/search?q=AD5321&btnI=lucky)
-   [AD5444](https://www.google.com/search?q=AD5444&btnI=lucky)
-   [AD5446](https://www.google.com/search?q=AD5446&btnI=lucky)
-   [AD5450](https://www.google.com/search?q=AD5450&btnI=lucky)
-   [AD5451](https://www.google.com/search?q=AD5451&btnI=lucky)
-   [AD5452](https://www.google.com/search?q=AD5452&btnI=lucky)
-   [AD5453](https://www.google.com/search?q=AD5453&btnI=lucky)
-   [AD5512A](https://www.google.com/search?q=AD5512A&btnI=lucky)
-   [AD5541A](https://www.google.com/search?q=AD5541A&btnI=lucky)
-   [AD5542](https://www.google.com/search?q=AD5542&btnI=lucky)
-   [AD5542A](https://www.google.com/search?q=AD5542A&btnI=lucky)
-   [AD5543](https://www.google.com/search?q=AD5543&btnI=lucky)
-   [AD5553](https://www.google.com/search?q=AD5553&btnI=lucky)
-   [AD5600](https://www.google.com/search?q=AD5600&btnI=lucky)
-   [AD5601](https://www.google.com/search?q=AD5601&btnI=lucky)
-   [AD5602](https://www.google.com/search?q=AD5602&btnI=lucky)
-   [AD5611](https://www.google.com/search?q=AD5611&btnI=lucky)
-   [AD5612](https://www.google.com/search?q=AD5612&btnI=lucky)
-   [AD5620](https://www.google.com/search?q=AD5620&btnI=lucky)
-   [AD5620-1](https://www.google.com/search?q=AD5620&btnI=lucky)
-   [AD5620-2](https://www.google.com/search?q=AD5620&btnI=lucky)
-   [AD5620-3](https://www.google.com/search?q=AD5620&btnI=lucky)
-   [AD5621](https://www.google.com/search?q=AD5621&btnI=lucky)
-   [AD5622](https://www.google.com/search?q=AD5622&btnI=lucky)
-   [AD5640](https://www.google.com/search?q=AD5640&btnI=lucky)
-   [AD5640-1](https://www.google.com/search?q=AD5640&btnI=lucky)
-   [AD5640-2](https://www.google.com/search?q=AD5640&btnI=lucky)
-   [AD5640-3](https://www.google.com/search?q=AD5640&btnI=lucky)
-   [AD5641](https://www.google.com/search?q=AD5641&btnI=lucky)
-   [AD5660](https://www.google.com/search?q=AD5660&btnI=lucky)
-   [AD5660-1](https://www.google.com/search?q=AD5660&btnI=lucky)
-   [AD5660-2](https://www.google.com/search?q=AD5660&btnI=lucky)
-   [AD5660-3](https://www.google.com/search?q=AD5660&btnI=lucky)
-   [AD5662](https://www.google.com/search?q=AD5662&btnI=lucky)

#### Reference Circuits

-   [CN0009](https://www.google.com/search?q=CN0009&btnI=lucky)
-   [CN0143](https://www.google.com/search?q=CN0143&btnI=lucky)
-   [CN0151](https://www.google.com/search?q=CN0151&btnI=lucky)
-   [CN0156](https://www.google.com/search?q=CN0156&btnI=lucky)
-   [CN0169](https://www.google.com/search?q=CN0169&btnI=lucky)
-   [CN0179](https://www.google.com/search?q=CN0179&btnI=lucky)
-   [CN0181](https://www.google.com/search?q=CN0181&btnI=lucky)
-   [CN0202](https://www.google.com/search?q=CN0202&btnI=lucky)
-   [CN0203](https://www.google.com/search?q=CN0203&btnI=lucky)
-   [CN0204](https://www.google.com/search?q=CN0204&btnI=lucky)
-   [CN0348](https://www.google.com/search?q=CN0348&btnI=lucky)

#### Evaluation Boards

-   [EVAL-AD5446SDZ](https://www.google.com/search?q=EVAL-AD5446&btnI=lucky)
-   [EVAL-AD5453SDZ](https://www.google.com/search?q=EVAL-AD5453&btnI=lucky)
-   [EVAL-AD5541ASDZ](https://www.google.com/search?q=EVAL-AD5541ASDZ&btnI=lucky)
-   [EVAL-AD5542ASDZ](https://www.google.com/search?q=EVAL-AD5542ASDZ&btnI=lucky)
-   [EVAL-AD5543SDZ](https://www.google.com/search?q=EVAL-AD5543SDZ&btnI=lucky)
-   [EVAL-AD5600PMDZ](https://www.google.com/search?q=EVAL-AD5600PMDZ&btnI=lucky)
-   [EVAL-AD5621EBZ](https://www.google.com/search?q=EVAL-AD5621EBZ&btnI=lucky)
-   [EVAL-AD5620EBZ](https://www.google.com/search?q=EVAL-AD5620EBZ&btnI=lucky)
-   [EVAL-AD5660EBZ](https://www.google.com/search?q=EVAL-AD5660EBZ&btnI=lucky)
-   [EVAL-AD5662EBZ](https://www.google.com/search?q=EVAL-AD5662EBZ&btnI=lucky)

#### Description

This is a Linux industrial I/O ([IIO](/software/linux/docs/iio/iio)) subsystem driver, targeting single channel serial interface DACs.
The industrial I/O subsystem provides a unified framework for drivers for many different types of converters and sensors using a number of different physical interfaces (i2c, spi, etc).
See [IIO](/software/linux/docs/iio/iio) for more information.

Source Code
-----------

#### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://www.google.com/search?q=drivers/iio/dac/ad5446.c&amp;btnI=lucky">git</a></td>
<td><a href="https://www.google.com/search?q=drivers/iio/dac/ad5446.c&amp;btnI=lucky">Yes</a></td>
</tr>
</tbody>
</table>

#### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="https://www.google.com/search?q=drivers/iio/dac/ad5446.c&amp;btnI=lucky">drivers/iio/dac/ad5446.c</a></td>
</tr>
<tr class="even">
<td>include</td>
<td><a href="https://www.google.com/search?q=drivers/iio/dac/ad5446.h&amp;btnI=lucky">drivers/iio/dac/ad5446.h</a></td>
</tr>
</tbody>
</table>

Example platform device initialization
--------------------------------------

#### Specifying reference voltage via the regulator framework

:::{NOTE} <!-- ATTRS: tip="" -->

For chip variants with build in references such as the:
ad5620-2500
ad5620-1250
ad5640-2500
ad5640-1250
ad5660-2500
ad5660-1250
specifying the reference voltage via the regulator framework is not mandatory.

:::


Below example specifies a 2.5 Volt reference for the SPI device 3 on SPI-Bus 0. (**spi0.3**)

``` {.c}
## if defined(CONFIG_REGULATOR_FIXED_VOLTAGE) || defined(CONFIG_REGULATOR_FIXED_VOLTAGE_MODULE)
static struct regulator_consumer_supply ad5446_consumer_supplies[] = {
    REGULATOR_SUPPLY("vcc", "spi0.3"),
};

static struct regulator_init_data stamp_avdd_reg_init_data = {
    .constraints    = {
        .name   = "2V5",
        .valid_ops_mask = REGULATOR_CHANGE_STATUS,
    },
    .consumer_supplies = ad5446_consumer_supplies,
    .num_consumer_supplies = ARRAY_SIZE(ad5446_consumer_supplies),
};

static struct fixed_voltage_config stamp_vdd_pdata = {
    .supply_name    = "board-2V5",
    .microvolts = 2500000,
    .gpio       = -EINVAL,
    .enabled_at_boot = 0,
    .init_data  = &stamp_avdd_reg_init_data,
};
static struct platform_device brd_voltage_regulator = {
    .name       = "reg-fixed-voltage",
    .id     = -1,
    .num_resources  = 0,
    .dev        = {
        .platform_data  = &stamp_vdd_pdata,
    },
};
## endif
```

``` {.c}
static struct platform_device *board_devices[] __initdata = {
## if defined(CONFIG_REGULATOR_FIXED_VOLTAGE) || defined(CONFIG_REGULATOR_FIXED_VOLTAGE_MODULE)
    &brd_voltage_regulator
## endif
};
```

``` {.c}
static int __init board_init(void)
{
    [--snip--]

    platform_add_devices(board_devices, ARRAY_SIZE(board_devices));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

![](page>software/linux/docs/platform_and_bus_model#Declaring SPI slave devices&firstseconly&noeditbtn)

Depending on the converter IC used, you may need to set the modalias accordingly, matching your part name.

It may also required to adjust max_speed_hz. Please consult the datasheet, for maximum spi clock supported by the device in question.

``` {.c}
static struct spi_board_info board_spi_board_info[] __initdata = {
## if defined(CONFIG_AD5446) || 
    defined(CONFIG_AD5446_MODULE)
    {
        /* the modalias must be the same as spi device driver name */
        .modalias = "ad5446", /* Name of spi_driver for this device */
        .max_speed_hz = 1000000,     /* max spi clock (SCK) speed in HZ */
        .bus_num = 0, /* Framework bus number */
        .chip_select = 3, /* Framework chip select */
        .mode = SPI_MODE_3,
    },
## endif
};
```

``` {.c}
static int __init board_init(void)
{
    [--snip--]

    spi_register_board_info(board_spi_boar
d_info, ARRAY_SIZE(board_spi_board_info));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

![](page>software/linux/docs/platform_and_bus_model#Declaring I2C devices&firstseconly&noeditbtn)

#### Devicetree

Required devicetree properties SPI:

-   compatible: Needs to be "adi," followed by the name of the device. E.g. "adi,ad5446"
-   reg: The chipselect number used for the device
-   spi-max-frequency: Maximum SPI clock frequency
-   vcc-supply: VCC voltage supply regulator

```{=html}
<!-- -->
```
           dac_vcc: fixedregulator@1 {
                  compatible = "regulator-fixed";
                  regulator-name = "fixed-supply";
                  regulator-min-microvolt = <2500000>;
                  regulator-max-microvolt = <2500000>;
                  regulator-boot-on;
           };

           axi_spi_1: spi@42040000 {
                  #address-cells = <1>;
                  #size-cells = <0>;
                  compatible = "xlnx,axi-spi-1.02.a", "xlnx,xps-spi-2.00.a";
                   ...
                  ad5446@0 {
                         compatible = "adi,ad5446";
                         reg = <0>;
                         spi-max-frequency = <1000000>;
                         spi-cpha;
                         spi-cpol;
                         vcc-supply = <&dac_vcc>;
                  };
            };

Required devicetree properties I2C:

-   compatible: Name of the device. E.g. "ad5301"
-   reg: i2c address of the device
-   vcc-supply: VCC voltage supply regulator

```{=html}
<!-- -->
```
           dac_vcc: fixedregulator@1 {
                  compatible = "regulator-fixed";
                  regulator-name = "fixed-supply";
                  regulator-min-microvolt = <2500000>;
                  regulator-max-microvolt = <2500000>;
                  regulator-boot-on;
           };


           i2c {
                  #address-cells = <1>;
                  #size-cells = <0>;

                   ...
                  ad5301@15 {
                         compatible = "ad5301";
                         reg = <15>;
                         vcc-supply = <&dac_vcc>;
                  };
            };
            

Adding Linux driver support
---------------------------

Configure kernel with "make menuconfig" (alternatively use "make xconfig" or
"make qconfig")

:::{NOTE} <!-- ATTRS: round="" help="" -->

The AD5446 Driver depends on **CONFIG_SPI**

:::


    Linux Kernel Configuration
        Device Drivers  --->
            <*> Industrial I/O support --->
                --- Industrial I/O support
                [--snip--]
                *** Digital to analog convertors ***
                    [--snip--]
                    <*> Analog Devices AD5446 and similar single channel DACs driver
                    [--snip--]

Hardware configuration
----------------------

Driver testing
--------------

![iio_snippets#iio device files&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio device files&noheader&firstseconly&noeditbtn)

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices> ls
iio:device0 iio:device0:buffer0:access0 iio:trigger0
iio:device0:buffer0 iio:device0:buffer0:event0

root:/sys/bus/iio/devices> **cd iio:device0**

root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> **ls -l**
-r--r--r-- 1 root root 4096 Jan 2 21:23 dev
-r--r--r-- 1 root root 4096 Jan 2 21:23 name
-rw-r--r-- 1 root root 4096 Jan 2 21:23 out_voltage0_powerdown
--w------- 1 root root 4096 Jan 2 21:23 out_voltage0_raw
-rw-r--r-- 1 root root 4096 Jan 2 21:23 out_voltage_powerdown_mode
-r--r--r-- 1 root root 4096 Jan 2 21:23 out_voltage_powerdown_mode_available
-r--r--r-- 1 root root 4096 Jan 2 21:23 out_voltage_scale
drwxr-xr-x 2 root root 0 Jan 2 21:23 power
lrwxrwxrwx 1 root root 0 Jan 2 21:23 subsystem -> ../../../../../bus/iio
-rw-r--r-- 1 root root 4096 Jan 2 21:23 uevent
```
:::


###### Show device name

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> **cat name**
ad5446
```
:::


###### Show scale

**Description:**
scale to be applied to out_voltage0_raw in order to obtain the measured voltage in millivolts.

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> **cat out_voltage_scale**
0.152
```
:::


###### Set channel 0

**Description:**
/sys/bus/iio/devices/iio:deviceX/out_voltageY_raw
Raw (unscaled, no bias etc.) output voltage for
channel Y.

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> echo 1234 > out_voltage0_raw
```
:::


**U** = *out_voltage0_raw * out_voltage_scale* = 1234 * 0.152 mV = **187.568 *mV***

------------------------------------------------------------------------

:::{NOTE} <!-- ATTRS: important="" -->

Output power down modes described below only exist on:
* [AD5601](https://www.google.com/search?q=AD5601&btnI=lucky)

-   [AD5611](https://www.google.com/search?q=AD5611&btnI=lucky)
-   [AD5620](https://www.google.com/search?q=AD5620&btnI=lucky)
-   [AD5621](https://www.google.com/search?q=AD5621&btnI=lucky)
-   [AD5640](https://www.google.com/search?q=AD5640&btnI=lucky)
-   [AD5660](https://www.google.com/search?q=AD5660&btnI=lucky)


:::


###### List available power down modes

/sys/bus/iio/devices/iio:deviceX/out_voltage_powerdown_mode_available

**Description:**
Lists all available output power down modes.

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> **cat out_voltage_powerdown_mode_available**
1kohm_to_gnd 100kohm_to_gnd three_state
```
:::


###### Set power down mode

/sys/bus/iio/devices/iio:deviceX/out_voltage_powerdown_mode

**Description:**
Specifies the output power down mode.
DAC output stage is disconnected from the amplifier and

<table>
<tbody>
<tr class="odd">
<td>1kohm_to_gnd</td>
<td>connected to ground via an 1kOhm resistor</td>
</tr>
<tr class="even">
<td>100kohm_to_gnd</td>
<td>connected to ground via an 100kOhm resistor</td>
</tr>
<tr class="odd">
<td>three_state</td>
<td>left floating</td>
</tr>
</tbody>
</table>

For a list of available output power down options read
outX_powerdown_mode_available.

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> **echo three_state > out_voltage_powerdown_mode**
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> **cat out_voltage_powerdown_mode**
three_state
```
:::


###### Enable power down mode on output Y

/sys/bus/iio/devices/iio:deviceX/out_voltageY_powerdown

**Description:**
Writing 1 causes output Y to enter the power down mode specified
by the corresponding out_voltageY_powerdown_mode. Clearing returns to
normal operation. Y may be suppressed if all outputs are
controlled together.

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> **echo 1 > out_voltage0_powerdown**
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> **cat out_voltage0_powerdown**
1
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> **echo 0 > out_voltage0_powerdown**
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0> **cat out_voltage0_powerdown**
0
```
:::


More Information
----------------

![iio_snippets#iio pointers&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio pointers&noheader&firstseconly&noeditbtn)
