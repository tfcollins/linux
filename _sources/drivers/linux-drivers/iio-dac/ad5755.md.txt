# AD5755 IIO Multi-Channel DAC Linux Driver

### Supported Devices

-   [AD5735](adi>AD5735)
-   [AD5737](adi>AD5737)
-   [AD5755](adi>AD5755)
-   [AD5755-1](adi>AD5755-1)
-   [AD5757](adi>AD5757)

### Reference Circuits

-   [CN0198](adi>CN0198)
-   [CN0328](adi>CN0328)

### Evaluation Boards

-   [EVAL-AD5755SDZ](adi>EVAL-AD5755SDZ)
-   [EVAL-AD5755-1SDZ](adi>EVAL-AD5755-1SDZ)
-   [EVAL-AD5757SDZ](adi>EVAL-AD5757SDZ)

### Description

This is a Linux industrial I/O ([IIO](/software/linux/docs/iio/iio)) subsystem driver, targeting multi-channel serial interface DACs.
The industrial I/O subsystem provides a unified framework for drivers for many different types of converters and sensors using a number of different physical interfaces (i2c, spi, etc).
See [IIO](/software/linux/docs/iio/iio) for more information.

## Source Code

### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="git.linux.org&gt;drivers/iio/dac/ad5755.c">git</a></td>
<td><a href="git.linux.org&gt;drivers/iio/dac/ad5755.c">Yes</a></td>
</tr>
</tbody>
</table>

### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="git.linux.org&gt;drivers/iio/dac/ad5755.c">drivers/iio/dac/ad5755.c</a></td>
</tr>
</tbody>
</table>

## Example platform device initialization

![](page>software/linux/docs/platform_and_bus_model#Declaring SPI slave devices&firstseconly&noeditbtn)

Depending on the converter IC used, you may need to set the modalias accordingly, matching your part name.
It may also required to adjust max_speed_hz. Please consult the datasheet, for maximum spi clock supported by the device in question.

``` c
static struct spi_board_info board_spi_board_info[] __initdata = {
#if defined(CONFIG_AD5755_SPI) || \
    defined(CONFIG_AD5755_SPI_MODULE)
    {
        /* the modalias must be the same as spi device driver name */
        .modalias = "ad5755", /* Name of spi_driver for this device */
        .max_speed_hz = 1000000,     /* max spi clock (SCK) speed in HZ */
        .bus_num = 0, /* Framework bus number */
        .chip_select = 3, /* Framework chip select */
        .mode = SPI_MODE_2,
    },
#endif
};
```

``` c
static int __init board_init(void)
{
    [--snip--]

    spi_register_board_info(board_spi_board_info, ARRAY_SIZE(board_spi_board_info));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

## Adding Linux driver support

Configure kernel with \"make menuconfig\" (alternatively use \"make xconfig\" or
\"make qconfig\")

\<WRAP round help\>
The AD5755 Driver depends on **CONFIG_SPI**
\</WRAP\>

    Linux Kernel Configuration
        Device Drivers  --->
            ...
            <*>     Industrial I/O support --->
                --- Industrial I/O support
                ...
                Digital to analog converters  ---> 
                    ...
                    <*>  Analog Devices AD5755/AD5755-1/AD5757/AD5735/AD5737 DAC driver
                    ...
                ...
            ...

## Hardware configuration

## Driver testing

![iio_snippets#iio device files&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio device files&noheader&firstseconly&noeditbtn)

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/\> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices\> ls
iio:device0

root:/sys/bus/iio/devices\> **cd iio:device0**

root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **ls -l**
-r\--r\--r\-- 1 root root 4096 Jan 2 21:54 dev
-r\--r\--r\-- 1 root root 4096 Jan 2 21:54 name

-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current0_calibbias
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current0_calibscale
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current0_offset
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current0_raw
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current0_scale
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current0_powerdown
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current1_calibbias
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current1_calibscale
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current1_offset
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current1_raw
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current1_scale
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_current1_powerdown
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage2_calibbias
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage2_calibscale
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage2_offset
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage2_raw
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage2_scale
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage2_powerdown
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage3_calibbias
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage3_calibscale
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage3_offset
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage3_raw
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage3_scale
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 out_voltage3_powerdown
drwxr-xr-x 2 root root 0 Jan 2 21:54 power
lrwxrwxrwx 1 root root 0 Jan 2 21:54 subsystem -\> ../../../../../bus/iio
-rw-r\--r\-- 1 root root 4096 Jan 2 21:54 uevent
\</xterm\>\</WRAP\>

##### Show device name

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **cat name**
ad5755
\</xterm\>\</WRAP\>

##### Show scale

**Description:**\
/sys/bus/iio/devices/iio:deviceX/out_voltageY_scale\
/sys/bus/iio/devices/iio:deviceX/out_currentY_scale\
scale to be applied to out_voltageY_raw/out_currentY_raw in order to obtain the measured voltage in millivolts.

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **cat out_voltage2_scale**
TBD
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **cat out_current0_scale**
0.000244100
\</xterm\>\</WRAP\>

##### Show offset

**Description:**\
/sys/bus/iio/devices/iio:deviceX/out_offsetY_raw\
Raw offset to be applied to out_voltageY_raw in order to obtain the measured voltage in millivolts.
The offset is applied before scale is applied.

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **cat out_voltage2_offset**
-TBD
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **cat out_current0_offset**
16384
\</xterm\>\</WRAP\>

##### Set channel Y output voltage

**Description:**\
/sys/bus/iio/devices/iio:deviceX/out_voltageY_raw\
/sys/bus/iio/devices/iio:deviceX/out_currentY_raw\
Raw (unscaled, no bias etc.) output voltage/current for
channel Y.

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **echo 10000 \> out_voltage2_raw**
\</xterm\>\</WRAP\>

**U** = *(out_voltage2_raw + out_voltage2_offset) \* out_voltage2_scale* = (10000 - TBD) \* 0,038140 *mV* = **TBD *mV***\
**I** = *(out_current0_raw + out_current0_offset) \* out_current0_scale* = (10000 + 16384) \* 0,000244100 *mV* = **6.4403344 *mA***

##### Calibrate channel Y gain

**Description:**\
/sys/bus/iio/devices/iio:deviceX/out_voltageY_calibscale\
/sys/bus/iio/devices/iio:deviceX/out_currentY_calibscale\
Each channel has an adjustable gain which can be used to calibrate the channel\'s scale and compensate for full-scale errors.
The default value is 65535, minium value is 0, maximum value is 65535.

If scale calibration is used the following formula can be used calculate the output voltage:
**U** = *( ( ( out_voltageY_raw + out_voltageY_offset ) \* ( out_voltageY_calibscale + 1 ) ) / 2\^16 + out_voltageY_calibbias ) \* out_voltageY_scale*

##### Calibrate channel Y offset

**Description:**\
/sys/bus/iio/devices/iio:deviceX/out_voltageY_calibbias\
/sys/bus/iio/devices/iio:deviceX/out_currentY_calibbias\
Each channel has an adjustable offset which can be used to calibrate the channel\'s offset and compensate for zero-scale errors.
The default value is 0, minium value is -32768, maximum value is 32767.

If offset calibration is used the following formula can be used calculate the output voltage:
**U** = *( ( ( out_voltageY_raw + out_voltageY_offset ) \* ( out_voltageY_calibscale + 1 ) ) / 2\^16 + out_voltageY_calibbias ) \* out_voltageY_scale*

##### Enable power down mode for the device

/sys/bus/iio/devices/iio:deviceX/out_voltageY_powerdown
/sys/bus/iio/devices/iio:deviceX/out_currentY_powerdown

**Description:**\
Writing 1 causes channel Y to enter power down mode. Clearing returns to
normal operation.

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **echo 1 \> out_voltage2_powerdown**
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **cat out_voltage2_powerdown**
1
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **echo 0 \> out_voltage2_powerdown**
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **cat out_voltage2_powerdown**
0
\</xterm\>\</WRAP\>

## More Information

![iio_snippets#iio pointers&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio pointers&noheader&firstseconly&noeditbtn)
