---
wiki-source: https://wiki.analog.com/resources/tools-software/linux-drivers/regulator/adp150
title: ADP5022: Dual 3 MHz, 600 mA Buck Regulator with 150 mA LDO
---

# ADP150 Regulator Fixed Voltage Linux Driver

### Supported Devices

-   [ADP122](adi>ADP122)
-   [ADP123](adi>ADP123)
-   [ADP124](adi>ADP124)
-   [ADP125](adi>ADP125)
-   [ADP150](adi>ADP150)
-   [ADP5022](adi>ADP5022)

### Evaluation Boards

-   [ADP122-3.3-EVALZ](adi>EVAL-ADP122)
-   [ADP123-EVALZ](adi>ADP123-EVALZ)
-   [ADP124-3.3-EVALZ](adi>EVAL-ADP124)
-   [ADP125CP-EVALZ](adi>ADP125CP-EVALZ)
-   [ADP150CB-3.3-EVALZ](adi>EVAL-ADP150)

#### Reference Circuits

-   [CN0134](adi>CN0134)
-   [CN0144](adi>CN0144)
-   [CN0147](adi>CN0147)
-   [CN0285](adi>CN0285)
-   [CN0228](adi>CN0228)
-   [CN0290](adi>CN0290)
-   [CN0311](adi>CN0311)

### Description

The fixed regulator voltage driver can be used to control these chips.
Please connect the **EN**able switch pin to any available GPIO port on your CPU.
This driver adapts to voltage and current regulator framework in Linux kernel.

### Configuration

### Software configurable features

## Source Code

### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="git.linux.org&gt;drivers/regulator/fixed.c">git</a></td>
<td><a href="git.linux.org&gt;drivers/regulator/fixed.c">Yes</a></td>
</tr>
</tbody>
</table>

### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="git.linux.org&gt;drivers/regulator/fixed.c">drivers/regulator/fixed.c</a></td>
</tr>
<tr class="even">
<td>include</td>
<td><a href="git.linux.org&gt;include/linux/regulator/fixed.h">include/linux/regulator/fixed.h</a></td>
</tr>
</tbody>
</table>

## Example platform device initialization

The default platform info defined in bf537-stamp board file is for ad122. If you want to customize this driver for other switch only regulator, you should revise the platform information accordingly.

-   Define device supply name exported by the adp_switch driver.

<source trunk/arch/blackfin/mach-bf537/boards/stamp.c:adp122_consumers{} c linux-kernel>

-   Define regulator init data of this supply.

<source trunk/arch/blackfin/mach-bf537/boards/stamp.c:adp_switch_regulator_data{} c linux-kernel>

-   Add new userspace consumer platform device for this supply.

<source trunk/arch/blackfin/mach-bf537/boards/stamp.c:adp122_bulk_data{} c linux-kernel>
<source trunk/arch/blackfin/mach-bf537/boards/stamp.c:adp122_userspace_comsumer_data{} c linux-kernel>
<source trunk/arch/blackfin/mach-bf537/boards/stamp.c:adp122_userspace_consumer_device{} c linux-kernel>

## Adding Linux driver support

Enable generic GPIO lib in kernel option.

    Device Drivers  --->
    [*] GPIO Support  --->

Select voltage and current regulator framework support and enable adp_switch driver. Don't forget to select userspace regulator consumer driver as a module. adp_switch driver is initialized after userspace consumer driver, if both are built into kernel.

    Device Drivers  --->
    [*] Voltage and Current Regulator Support  --->
        <*>   Fixed voltage regulator support
        <*>   Userspace regulator consumer support

## Hardware configuration

## Driver testing

Check regulator driver initialization information at kernel booting.

    regulator: core version 0.5
    regulator: adp122: 2500 mV                                                                     

Check if adp122 is probed properly.

    root:/> ls sys/class/regulator/
    regulator.0
    root:/> ls sys/class/regulator/regulator.0/
    device      name        power       subsystem   uevent
    microvolts  num_users   state       type
    root:/> cat sys/class/regulator/regulator.0/name
    adp122
    root:/> cat sys/class/regulator/regulator.0/type
    voltage
    root:/> cat sys/class/regulator/regulator.0/microvolts
    2500000
    root:/> cat sys/class/regulator/regulator.0/state
    disabled
    root:/> cat sys/class/regulator/regulator.0/num_users
    0

Insert user space consumer driver module and check usability.

    root:/> modprobe userspace-consumer
    root:/> ls sys/devices/platform/reg-userspace-consumer.0/
    driver                      power
    microamps_requested_adp122  state
    modalias                    subsystem
    name                        uevent
    root:/> cat sys/devices/platform/reg-userspace-consumer.0/name
    adp122
    root:/> cat sys/devices/platform/reg-userspace-consumer.0/state
    disabled
    root:/> echo enabled > sys/devices/platform/reg-userspace-consumer.0/state
    root:/> cat sys/devices/platform/reg-userspace-consumer.0/state
    enabled

## More Information
