---
wiki-source: https://wiki.analog.com/resources/tools-software/linux-drivers/iio-gyroscope/adxrs450
title: ADXRS450: ±300°/sec High Vibration Immunity Digital Gyro
source: /home/runner/work/linux/linux/drivers/iio/gyro/adxrs450.c
compatibles: adxrs450
---
# ADXRS450 IIO Gyroscope Linux Driver

#### Supported Devices

-   [ADXRS450](https://analog.com/ADXRS450)
-   [ADXRS453](https://analog.com/ADXRS453)

#### Evaluation Boards

-   [EVAL-ADXL313-Z-M](https://analog.com/EVAL-ADXL313-Z-M)
-   [EVAL-ADXRS450Z](https://analog.com/EVAL-ADXRS450Z)
-   [EVAL-ADXRS453Z](https://analog.com/EVAL-ADXRS453Z)
-   [PmodGYRO2](http://www.digilentinc.com/Products/Detail.cfm?Prod=PMOD-GYRO2)

##### ADXRS450: ±300°/sec High Vibration Immunity Digital Gyro

![](scrape>adi>ADXRS450#description)

-   [Product Page](https://analog.com/ADXRS450)
-   ![](scrape>adi>ADXRS450#datasheet-details)

##### ADXRS453: ±300°/sec High Vibration Immunity Digital Gyro

![](scrape>adi>ADXRS453#description)

-   [Product Page](https://analog.com/ADXRS453)
-   ![](scrape>adi>ADXRS453#datasheet-details)

### Adding ADXRS450 to the Kernel

To add support for the ADXRS450 to the kernel build system, a few things must be enabled properly for things to work.The configuration is as following:

Configure kernel with "make menuconfig" (alternatively use "make xconfig" or
"make qconfig")

:::{NOTE} <!-- ATTRS: round="" help="" -->

The ADXRS450 Driver depends on **CONFIG_SPI**

:::


    Linux Kernel Configuration
      Device Drivers  --->
            <*>     Industrial I/O support  --->
              <M>   Analog Devices ADXRS450/3 Digital Output Gyroscope SPI driver

### Source Code

#### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="git.linux.org&gt;drivers/iio/gyro/adxrs450.c">git</a></td>
<td><a href="git.linux.org&gt;drivers/iio/gyro/adxrs450.c">Yes</a></td>
</tr>
</tbody>
</table>

#### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="git.linux.org&gt;drivers/iio/gyro/adxrs450.c">drivers/iio/gyro/adxrs450.c</a></td>
</tr>
</tbody>
</table>

### Example platform device initialization

Below is an example which is used on Blackfin board file.

<!-- CMDS: firstseconly noeditbtn -->
```{include} software_linux_docs_platform_and_bus_model_SUB_Declaring_SPI_slave_devices.md
```

``` c
static struct spi_board_info board_spi_board_info[] __initdata = {
## if defined(CONFIG_ADXRS450) 
    || defined(CONFIG_ADXRS450_MODULE)
    {
        .modalias = "adxrs450",
        .bus_num = 0,
        .chip_select = GPIO_PF10 + MAX_CTRL_CS, /* GPIO controlled SSEL */
        .max_speed_hz = 2000000,
        .mode = SPI_MODE_0,
    },
## endif
};
```

``` c
static int __init board_init(void)
{
    [--snip--]

    spi_register_board_info(board_spi_board_info, ARRAY_SIZE(board_spi_board_info));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

### Hardware configuration

```{image} images/adxrs450_eval_lr.jpg
:alt: EVAL-ADXRS450
:.align-left
:width: "600"
:query: "?600"
```

```{image} images/pmodgyro2_lr.jpg
:alt: PmodGYRO2
:.align-left
:width: "600"
:query: "?600"
```

### Driver testing

###### Module loading

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/> **modprobe adxrs450**
adxrs450 spi0.18: The Part ID is 0x5201
adxrs450 spi0.18: The Serial Number is 0xbaf2
```
:::


<!-- CMDS: noheader firstseconly noeditbtn -->
```{include} software_linux_docs_iio_iio_snippets_SUB_iio_device_files.md
```

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices> ls
iio:device0
root:/sys/bus/iio/devices> **cd iio:device0 **

root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0 > **ls -l**
-r--r--r-- 1 root root 4096 Jan 3 16:24 dev
-rw-r--r-- 1 root root 4096 Jan 3 16:24 in_anglvel_z_calibbias
-rw-r--r-- 1 root root 4096 Jan 3 16:24 in_anglvel_z_quadrature_correction_raw
-r--r--r-- 1 root root 4096 Jan 3 16:24 in_anglvel_z_raw
-rw-r--r-- 1 root root 4096 Jan 3 16:24 in_anglvel_z_scale
-r--r--r-- 1 root root 4096 Jan 3 16:24 in_temp0_raw
-rw-r--r-- 1 root root 4096 Jan 3 16:24 in_temp0_scale
-r--r--r-- 1 root root 4096 Jan 3 16:24 name
drwxr-xr-x 2 root root 0 Jan 3 16:24 power
lrwxrwxrwx 1 root root 0 Jan 3 16:24 subsystem -> ../../../../../bus/iio
-rw-r--r-- 1 root root 4096 Jan 3 16:24 uevent
```
:::


###### Show device name

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0> **cat name**
adxrs450
```
:::


####### Show angular rate scale

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0> **cat in_anglvel_z_scale**
0.000218166
```
:::


###### Show angular rate

Rotate the device and read angular rate sampling values from sysfs nodes like this:

####### Rotate in positive direction

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0 > **cat in_anglvel_z_raw**
42
root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0 > **cat in_anglvel_z_raw**
1456
```
:::


####### Rotate in negative direction

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0 > **cat in_anglvel_z_raw**
-1657
root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0 > **cat in_anglvel_z_raw**
-17215
```
:::


###### Show quadrature correction

This attribute is used to read the amount of quadrature error present in the device at a given time.

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0 > **cat in_anglvel_z_quadrature_correction_raw**
9
```
:::


###### Set dynamic null correction

This attribute is used to make small adjustments to the rateout of the device.
This 10-bit value allows the user to adjust the static rateout of the device by up to ±6.4°/sec.

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0 > **cat in_gyro_z_raw**
40

root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0 > **echo 40 > in_anglvel_z_calibbias**

root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0 > **cat in_anglvel_z_raw**
1
```
:::


###### Show temperature

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0> **cat in_temp0_scale**
200
root:/sys/devices/platform/bfin-spi.0/spi0.18/iio:device0> **cat in_temp0_raw**
105
```
:::


**T** = *in_temp0_raw* * *in_temp0_scale* = 105 * 200 = 21000 milli degree Celsius

### More Information

<!-- CMDS: noheader firstseconly noeditbtn -->
```{include} software_linux_docs_iio_iio_snippets_SUB_iio_pointers.md
```
