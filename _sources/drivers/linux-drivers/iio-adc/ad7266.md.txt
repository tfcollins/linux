# AD7266 Differential/Single-Ended Input, Dual, Simultaneous Sampling, 2 MSPS, 12-Bit, 3-Channel SAR A/D Converter Linux Driver

### Supported Devices

-   [AD7265](adi>AD7265)
-   [AD7266](adi>AD7266)

### Reference Circuits

-   [CN0187](adi>CN0187)

### Evaluation Boards

-   [EVAL-AD7265EDZ](adi>EVAL-AD7265EDZ)
-   [EVAL-AD7266EDZ](adi>EVAL-AD7266EDZ)

### Description

This is a Linux industrial I/O ([IIO](/software/linux/docs/iio/iio)) subsystem driver, targeting multi channel serial interface ADCs.
The industrial I/O subsystem provides a unified framework for drivers for many different types of converters and sensors using a number of different physical interfaces (i2c, spi, etc).
See [IIO](/software/linux/docs/iio/iio) for more information.

## Source Code

### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="git.linux.org&gt;drivers/iio/adc/ad7266.c">git</a></td>
<td><a href="git.linux.org&gt;drivers/iio/adc/ad7266.c">Yes</a></td>
</tr>
</tbody>
</table>

### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="git.linux.org&gt;drivers/iio/adc/ad7266.c">drivers/iio/adc/ad7266.c</a></td>
</tr>
<tr class="even">
<td>include</td>
<td><a href="git.linux.org&gt;include/linux/platform_data/ad7266.h">include/linux/platform_data/ad7266.h</a></td>
</tr>
</tbody>
</table>

## Example platform device initialization

![](page>software/linux/docs/platform_and_bus_model#Platform Data&noheader&firstseconly&noeditbtn)

The AD7265/AD7266 supports different operating modes, which can be configured via external pins. To properly interpret the data from the chip the driver has to know which mode it is configured for. This is done using platform data. If the AD (address) pins of the chip are hook up to GPIOs to be able to change the sampled inputs at runtime the GPIOs can be specified via the platform data as well. If GPIOs are used the \`fixed_addr\` field must be set to false.

``` c

/*
 * ad7266_range - AD7266 reference voltage range
 * @AD7266_RANGE_VREF: Device is configured for input range 0V - VREF
 *          (RANGE pin set to low)
 * @AD7266_RANGE_2VREF: Device is configured for input range 0V - 2VREF
 *          (RANGE pin set to high)
 */
enum ad7266_range {
    AD7266_RANGE_VREF,
    AD7266_RANGE_2VREF,
};

/*
 * ad7266_mode - AD7266 sample mode
 * @AD7266_MODE_SINGLE_ENDED: Device is configured for single-ended mode
 *              (SGL/DIFF pin set to high)
 * @AD7266_MODE_PSEUDO_DIFF: Device is configured for pseudo differential mode
 *              (SGL/DIFF pin set to low, AD0 pin set to high)
 * @AD7266_MODE_PSEUDO_DIFF: Device is configured for full differential mode
 *              (SGL/DIFF pin set to low, AD0 pin set to low)
 */
enum ad7266_mode {
    AD7266_MODE_SINGLE_ENDED,
    AD7266_MODE_PSEUDO_DIFF,
    AD7266_MODE_DIFF,
};

/* 
 * ad7266_platform_data - Platform data for the AD7266 driver
 * @range: Reference voltage range the device is configured for
 * @mode: Sample mode the device is configured for
 * @fixed_addr: Whether the AD pins are hard-wired
 * @addr_gpios: GPIOs used for controlling the AD pins, only valid if fixed_addr
 *      is set to false.
 */
struct ad7266_platform_data {
    enum ad7266_range range;
    enum ad7266_mode mode;
    bool fixed_addr;
    unsigned int addr_gpios[3];
};
```

``` c
static struct ad7266_platform_data pdata = {
    .range = AD7266_RANGE_2VREF,
    .mode = AD7266_MODE_SINGLE_ENDED,
    .fixed_addr = false,
    .addr_gpios = { GPIO_PF6, GPIO_PF7, GPIO_PF8 },
};
```

If no platform data is provided the driver assumes differential 0V-VREF operation with a fixed address. This corresponds to the following platform data.

``` c
static struct ad7266_platform_data ad7266_pdata_default = {
    .range = AD7266_RANGE_VREF,
    .mode = AD7266_MODE_DIFF,
    .fixed_addr = true,
};
```

![](page>software/linux/docs/platform_and_bus_model#Declaring SPI slave devices&firstseconly&noeditbtn)

Depending on the converter IC used, you may need to set the modalias accordingly, matching your part name.
It may also required to adjust max_speed_hz. Please consult the datasheet, for maximum spi clock supported by the device in question.

``` c
static struct spi_board_info board_spi_board_info[] __initdata = {
    {
        .modalias = "ad7266",
        .max_speed_hz = 1000000,     /* max spi clock (SCK) speed in HZ */
        .bus_num = 0,
        .chip_select = GPIO_PF10 + MAX_CTRL_CS, /* CS, change it for your board */
        .platform_data = &ad7266_pdata, /* No spi_driver specific config */
        .mode = SPI_MODE_2,
    },
};
```

``` c
static int __init board_init(void)
{
    [--snip--]

    spi_register_board_info(board_spi_board_info, ARRAY_SIZE(board_spi_board_info));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

## Adding Linux driver support

Configure kernel with \"make menuconfig\" (alternatively use \"make xconfig\" or
\"make qconfig\")

\<WRAP round help\>
The AD7266 Driver depends on **CONFIG_SPI**
\</WRAP\>

    Linux Kernel Configuration
        Device Drivers  --->
            ...
            <*>     Industrial I/O support --->
                --- Industrial I/O support
                ...
                Analog to digital converters  ---> 
                    ...
                    <*>  Analog Devices AD7265/AD7266 ADC driver
                    ...
                ...
            ...

## Hardware configuration

## Driver testing

![iio_snippets#iio device files&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio device files&noheader&firstseconly&noeditbtn)

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/\> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices\> ls
iio:device0 trigger0

root:/sys/bus/iio/devices\> **cd iio:device0**

root:/sys/devices/platform/bfin-spi.0/spi0.12/iio:device0\> **ls -l**
drwxr-xr-x 2 root root 0 Jan 1 04:03 buffer
-r\--r\--r\-- 1 root root 4096 Jan 1 04:03 dev
-rw-r\--r\-- 1 root root 4096 Jan 1 04:03 in_voltage-voltage_scale
-r\--r\--r\-- 1 root root 4096 Jan 1 04:03 in_voltage0-voltage1_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 04:03 in_voltage2-voltage3_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 04:03 in_voltage4-voltage5_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 04:03 in_voltage6-voltage7_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 04:03 in_voltage8-voltage9_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 04:03 in_voltage10-voltage11_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 04:03 name
drwxr-xr-x 2 root root 0 Jan 1 04:03 power
drwxr-xr-x 2 root root 0 Jan 1 04:03 scan_elements
lrwxrwxrwx 1 root root 0 Jan 1 04:03 subsystem -\> ../../../../../bus/iio
drwxr-xr-x 2 root root 0 Jan 1 04:03 trigger
-rw-r\--r\-- 1 root root 4096 Jan 1 04:03 uevent

root:/sys/devices/platform/bfin-spi.0/spi0.12/iio:device0\>
\</xterm\>\</WRAP\>

##### Show device name

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.12/iio:device0\> **cat name**
ad7266
\</xterm\>\</WRAP\>

##### Show scale for differential input channels

**Description:**\
in_voltage-voltage_scale

Scale to be applied to in_voltageY-voltageZ_raw in order to obtain the measured voltage in millivolts.

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0\> **cat in_voltage-voltage_scale**
0.610350
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0\>
\</xterm\>\</WRAP\>

##### Show differential channel measurement

**Description:**\
in_voltageY-voltageZ_raw

Raw unscaled voltage measurement on channel pair X-Z in differential mode

<table>
<thead>
<tr class="header">
<th>ADC Input Pair</th>
<th>Channel name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>V<sub>A1</sub> - V<sub>A2</sub></td>
<td>in_voltage0-voltage1_raw</td>
</tr>
<tr class="even">
<td>V<sub>B1</sub> - V<sub>B2</sub></td>
<td>in_voltage2-voltage3_raw</td>
</tr>
<tr class="odd">
<td>V<sub>A2</sub> - V<sub>A3</sub></td>
<td>in_voltage4-voltage5_raw</td>
</tr>
<tr class="even">
<td>V<sub>B2</sub> - V<sub>B3</sub></td>
<td>in_voltage7-voltage7_raw</td>
</tr>
<tr class="odd">
<td>V<sub>A4</sub> - V<sub>A5</sub></td>
<td>in_voltage8-voltage9_raw</td>
</tr>
<tr class="even">
<td>V<sub>B4</sub> - V<sub>B5</sub></td>
<td>in_voltage10-voltage11_raw</td>
</tr>
</tbody>
</table>

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.12/iio:device0\> **cat in_voltage0-voltage1_raw**
100
\</xterm\>\</WRAP\>

**U** = *in_voltage0-voltage1_raw \* in_voltage-voltage_scale* = 100 \* 0.610350 = **61.035 *mV***

##### Show scale for single-ended input channels

**Description:**\
in_voltage_scale

Scale to be applied to in_voltageY in order to obtain the measured voltage in millivolts.

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **cat in_voltage_scale**
0.610350
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\>
\</xterm\>\</WRAP\>

##### Show single-ended channel measurement

**Description:**\
in_voltageY_raw

Raw unscaled voltage measurement on channel in single ended mode

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.12/iio:device0\> **cat in_voltage0_raw**
100
\</xterm\>\</WRAP\>

**U** = *in_voltage0 \* in_voltage_scale* = 100 \* 0.610350 = **61.035 *mV***

### Trigger management

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0\> **cat trigger/current_trigger**
bfintmr3
\</xterm\>\</WRAP\>

![iio_snippets#Buffer management&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#Buffer management&noheader&firstseconly&noeditbtn)

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0/scan_elements\> **ls**
in_voltage0-voltage1_en in_voltage2-voltage3_en
in_voltage0-voltage1_index in_voltage2-voltage3_index
in_voltage0-voltage1_type in_voltage2-voltage3_type
root:/sys/devices/platform/bfin-spi.0/spi0.3/iio:device0/scan_elements\>
\</xterm\>\</WRAP\>

![iio_snippets#Typical ADC scan elements&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#Typical ADC scan elements&noheader&firstseconly&noeditbtn)

## More Information

![iio_snippets#iio pointers&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio pointers&noheader&firstseconly&noeditbtn)
