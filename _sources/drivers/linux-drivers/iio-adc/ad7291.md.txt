---
wiki-source: https://wiki.analog.com/resources/tools-software/linux-drivers/iio-adc/ad7291
title: AD7291: 8-Channel, I2C, 12-Bit SAR ADC with Temperature Sensor
source: /home/runner/work/linux/linux/drivers/iio/adc/ad7291.c
compatibles: adi,ad7291
---
# AD7291 IIO ADC Linux Driver

#### Supported Devices

-   [AD7291](https://analog.com/AD7291)

#### Evaluation Boards

-   [EVAL-AD7291SDZ](https://analog.com/EVAL-AD7291SDZ)

#### Description

This is a Linux industrial I/O ([IIO](/software/linux/docs/iio/iio)) subsystem driver, targeting multi channel serial interface ADCs.
The industrial I/O subsystem provides a unified framework for drivers for many different types of converters and sensors using a number of different physical interfaces (i2c, spi, etc).
See [IIO](/software/linux/docs/iio/iio) for more information.

### Source Code

#### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="git.linux.org&gt;drivers/iio/adc/ad7291.c">git</a></td>
<td><a href="git.linux.org&gt;drivers/iio/adc/ad7291.c">Yes</a></td>
</tr>
</tbody>
</table>

#### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="git.linux.org&gt;drivers/iio/adc/ad7291.c">drivers/iio/adc/ad7291.c</a></td>
</tr>
</tbody>
</table>

### Example platform device initialization

#### Specifying reference voltage via the regulator framework

:::{NOTE} <!-- ATTRS: tip="" -->

In case the AD7291 on-chip 2.5V reference is not used,
this driver requires specifying the reference voltage, by using the Linux regulator framework.

:::


Below example specifies a 3.3 Volt reference for the I2C device 0-002a on I2C-Bus 0. (**0-002a**)

``` c
## if defined(CONFIG_REGULATOR_FIXED_VOLTAGE) || defined(CONFIG_REGULATOR_FIXED_VOLTAGE_MODULE)
static struct regulator_consumer_supply ad7291_consumer_supplies[] = {
    REGULATOR_SUPPLY("vcc", "0-002a"),
};

static struct regulator_init_data board_avdd_reg_init_data = {
    .constraints    = {
        .name   = "3V3",
        .valid_ops_mask = REGULATOR_CHANGE_STATUS,
    },
    .consumer_supplies = ad7291_consumer_supplies,
    .num_consumer_supplies = ARRAY_SIZE(ad7291_consumer_supplies),
};

static struct fixed_voltage_config board_vdd_pdata = {
    .supply_name    = "board-3V3",
    .microvolts = 3300000,
    .gpio       = -EINVAL,
    .enabled_at_boot = 0,
    .init_data  = &board_avdd_reg_init_data,
};
static struct platform_device brd_voltage_regulator = {
    .name       = "reg-fixed-voltage",
    .id     = -1,
    .num_resources  = 0,
    .dev        = {
        .platform_data  = &board_vdd_pdata,
    },
};
## endif
```

``` c
static struct platform_device *board_devices[] __initdata = {
## if defined(CONFIG_REGULATOR_FIXED_VOLTAGE) || defined(CONFIG_REGULATOR_FIXED_VOLTAGE_MODULE)
    &brd_voltage_regulator
## endif
};
```

``` c
static int __init board_init(void)
{
    [--snip--]

    platform_add_devices(board_devices, ARRAY_SIZE(board_devices));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

<!-- CMDS: firstseconly noeditbtn -->
```{include} software_linux_docs_platform_and_bus_model_SUB_Declaring_I2C_devices.md
```

Depending on the converter IC used, you may need to set the I2C_BOARD_INFO name accordingly, matching your part name.

``` c
static struct i2c_board_info __initdata board_i2c_board_info[] = {
## if defined(CONFIG_AD7291) || defined(CONFIG_AD7291_MODULE)
    {
        I2C_BOARD_INFO("ad7291", 0x2A),
        .irq = IRQ_PG14,
    },
## endif
};
```

``` c
static int __init board_init(void)
{
    [--snip--]

    i2c_register_board_info(0, board_i2c_board_info,
                ARRAY_SIZE(board_i2c_board_info));
    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

### Adding Linux driver support

Configure kernel with "make menuconfig" (alternatively use "make xconfig" or
"make qconfig")

:::{NOTE} <!-- ATTRS: round="" help="" -->

The driver depends on **CONFIG_I2C**

:::


    Linux Kernel Configuration
        Device Drivers  --->
            [*] Staging drivers  --->
                <*>     Industrial I/O support --->
                    --- Industrial I/O support
                    -*-   Enable ring buffer support within IIO
                    -*-     Industrial I/O lock free software ring
                    -*-   Enable triggered sampling support

                          *** Analog to digital converters ***
                    [--snip--]

                    <*>   Analog Devices AD7291 ADC driver

                    [--snip--]

### Hardware configuration

```{image} images/ad7291_eval_lr.jpg
:alt: ad7291_eval_lr.jpg
:width: "600"
:query: "?600"
```

### Driver testing

<!-- CMDS: noheader firstseconly noeditbtn -->
```{include} software_linux_docs_iio_iio_snippets_SUB_iio_device_files.md
```

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices> **ls**
iio:device0

root:/sys/bus/iio/devices> **cd iio:device0**

root:/sys/devices/platform/i2c-bfin-twi.0/i2c-0/0-002a/iio:device0> **ls -l**
-r--r--r-- 1 root root 4096 Jan 1 00:38 dev
drwxr-xr-x 2 root root 0 Jan 1 00:38 events
-rw-r--r-- 1 root root 4096 Jan 1 00:38 in_temp0_mean_raw
-r--r--r-- 1 root root 4096 Jan 1 00:38 in_temp0_raw
-rw-r--r-- 1 root root 4096 Jan 1 00:38 in_temp0_scale
-r--r--r-- 1 root root 4096 Jan 1 00:38 in_voltage0_raw
-r--r--r-- 1 root root 4096 Jan 1 00:38 in_voltage1_raw
-r--r--r-- 1 root root 4096 Jan 1 00:38 in_voltage2_raw
-r--r--r-- 1 root root 4096 Jan 1 00:38 in_voltage3_raw
-r--r--r-- 1 root root 4096 Jan 1 00:38 in_voltage4_raw
-r--r--r-- 1 root root 4096 Jan 1 00:38 in_voltage5_raw
-r--r--r-- 1 root root 4096 Jan 1 00:38 in_voltage6_raw
-r--r--r-- 1 root root 4096 Jan 1 00:38 in_voltage7_raw
-rw-r--r-- 1 root root 4096 Jan 1 00:38 in_voltage_scale
-r--r--r-- 1 root root 4096 Jan 1 00:38 name
drwxr-xr-x 2 root root 0 Jan 1 00:38 power
--w------- 1 root root 4096 Jan 1 00:38 reset
lrwxrwxrwx 1 root root 0 Jan 1 00:38 subsystem -> ../../../../../../bus/iio
-rw-r--r-- 1 root root 4096 Jan 1 00:38 uevent
```
:::


###### Show device name

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/i2c-bfin-twi.0/i2c-0/0-002a/iio:device0> **cat name**
ad7291
```
:::


###### Show scale

**_Description:_**
scale to be applied to in_voltageX_raw in order to obtain the measured voltage in millivolts.

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/i2c-bfin-twi.0/i2c-0/0-002a/iio:device0> **cat in_voltage_scale**
0.610000
```
:::


###### Show channel 0 measurement

**_Description:_**
Raw unscaled voltage measurement on channel 0

<table>
<thead>
<tr class="header">
<th>ADC Input</th>
<th>Channel name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>VIN0</td>
<td>in_voltage0_raw</td>
</tr>
<tr class="even">
<td>VIN1</td>
<td>in_voltage1_raw</td>
</tr>
<tr class="odd">
<td>VIN2</td>
<td>in_voltage2_raw</td>
</tr>
<tr class="even">
<td>VIN3</td>
<td>in_voltage3_raw</td>
</tr>
<tr class="odd">
<td>VIN4</td>
<td>in_voltage4_raw</td>
</tr>
<tr class="even">
<td>VIN5</td>
<td>in_voltage5_raw</td>
</tr>
<tr class="odd">
<td>VIN6</td>
<td>in_voltage6_raw</td>
</tr>
<tr class="even">
<td>VIN7</td>
<td>in_voltage7_raw</td>
</tr>
</tbody>
</table>

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/i2c-bfin-twi.0/i2c-0/0-002a/iio:device0> **cat in_voltage0_raw**
1641
```
:::


**U** = *in_voltage0_raw * in_voltage_scale* = 1641 * 0.610000 = **1001,01 *mV***

###### Show internal temperature

**_Description:_** /sys/bus/iio/devices/iio:deviceX/in_temp0_raw
Shows raw unscaled temperature.

<table>
<thead>
<tr class="header">
<th>Channel name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>in_temp0_raw</td>
<td>Current temperature</td>
</tr>
<tr class="even">
<td>in_temp0_mean_raw</td>
<td>Averaged temperature</td>
</tr>
</tbody>
</table>

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/i2c-bfin-twi.0/i2c-0/0-002a/iio:device0> **cat in_temp0_raw**
107
root:/sys/devices/platform/i2c-bfin-twi.0/i2c-0/0-002a/iio:device0> **cat in_temp0_scale**
250
```
:::


**T** = in_temp0_raw * in_temp0_scale = 107 * 250 = 26750 = **26.75 *Â°C***

### Hardware Events

<!-- CMDS: firstseconly noeditbtn -->
```{include} software_linux_docs_iio_iio_snippets_SUB_Event_Management.md
```

<!-- CMDS: firstseconly noeditbtn -->
```{include} software_linux_docs_iio_iio_snippets_SUB_Typical_event_attributes.md
```

#### Supported Events

<table>
<thead>
<tr class="header">
<th>Event Attributes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Channel Temp</td>
</tr>
<tr class="even">
<td>in_temp0_thresh_both_hyst_raw</td>
</tr>
<tr class="odd">
<td>in_temp0_thresh_falling_en</td>
</tr>
<tr class="even">
<td>in_temp0_thresh_falling_value</td>
</tr>
<tr class="odd">
<td>in_temp0_thresh_rising_en</td>
</tr>
<tr class="even">
<td>in_temp0_thresh_rising_value</td>
</tr>
<tr class="odd">
<td>Channel VIN0</td>
</tr>
<tr class="even">
<td>in_voltage0_thresh_both_hyst_raw</td>
</tr>
<tr class="odd">
<td>in_voltage0_thresh_falling_en</td>
</tr>
<tr class="even">
<td>in_voltage0_thresh_falling_value</td>
</tr>
<tr class="odd">
<td>in_voltage0_thresh_rising_en</td>
</tr>
<tr class="even">
<td>in_voltage0_thresh_rising_value</td>
</tr>
<tr class="odd">
<td>Channel VIN1</td>
</tr>
<tr class="even">
<td>in_voltage1_thresh_both_hyst_raw</td>
</tr>
<tr class="odd">
<td>in_voltage1_thresh_falling_en</td>
</tr>
<tr class="even">
<td>in_voltage1_thresh_falling_value</td>
</tr>
<tr class="odd">
<td>in_voltage1_thresh_rising_en</td>
</tr>
<tr class="even">
<td>in_voltage1_thresh_rising_value</td>
</tr>
<tr class="odd">
<td>Channel VIN2</td>
</tr>
<tr class="even">
<td>in_voltage2_thresh_both_hyst_raw</td>
</tr>
<tr class="odd">
<td>in_voltage2_thresh_falling_en</td>
</tr>
<tr class="even">
<td>in_voltage2_thresh_falling_value</td>
</tr>
<tr class="odd">
<td>in_voltage2_thresh_rising_en</td>
</tr>
<tr class="even">
<td>in_voltage2_thresh_rising_value</td>
</tr>
<tr class="odd">
<td>Channel VIN3</td>
</tr>
<tr class="even">
<td>in_voltage3_thresh_both_hyst_raw</td>
</tr>
<tr class="odd">
<td>in_voltage3_thresh_falling_en</td>
</tr>
<tr class="even">
<td>in_voltage3_thresh_falling_value</td>
</tr>
<tr class="odd">
<td>in_voltage3_thresh_rising_en</td>
</tr>
<tr class="even">
<td>in_voltage3_thresh_rising_value</td>
</tr>
<tr class="odd">
<td>Channel VIN4</td>
</tr>
<tr class="even">
<td>in_voltage4_thresh_both_hyst_raw</td>
</tr>
<tr class="odd">
<td>in_voltage4_thresh_falling_en</td>
</tr>
<tr class="even">
<td>in_voltage4_thresh_falling_value</td>
</tr>
<tr class="odd">
<td>in_voltage4_thresh_rising_en</td>
</tr>
<tr class="even">
<td>in_voltage4_thresh_rising_value</td>
</tr>
<tr class="odd">
<td>Channel VIN5</td>
</tr>
<tr class="even">
<td>in_voltage5_thresh_both_hyst_raw</td>
</tr>
<tr class="odd">
<td>in_voltage5_thresh_falling_en</td>
</tr>
<tr class="even">
<td>in_voltage5_thresh_falling_value</td>
</tr>
<tr class="odd">
<td>in_voltage5_thresh_rising_en</td>
</tr>
<tr class="even">
<td>in_voltage5_thresh_rising_value</td>
</tr>
<tr class="odd">
<td>Channel VIN6</td>
</tr>
<tr class="even">
<td>in_voltage6_thresh_both_hyst_raw</td>
</tr>
<tr class="odd">
<td>in_voltage6_thresh_falling_en</td>
</tr>
<tr class="even">
<td>in_voltage6_thresh_falling_value</td>
</tr>
<tr class="odd">
<td>in_voltage6_thresh_rising_en</td>
</tr>
<tr class="even">
<td>in_voltage6_thresh_rising_value</td>
</tr>
<tr class="odd">
<td>Channel VIN7</td>
</tr>
<tr class="even">
<td>in_voltage7_thresh_both_hyst_raw</td>
</tr>
<tr class="odd">
<td>in_voltage7_thresh_falling_en</td>
</tr>
<tr class="even">
<td>in_voltage7_thresh_falling_value</td>
</tr>
<tr class="odd">
<td>in_voltage7_thresh_rising_en</td>
</tr>
<tr class="even">
<td>in_voltage7_thresh_rising_value</td>
</tr>
</tbody>
</table>

### More Information

<!-- CMDS: noheader firstseconly noeditbtn -->
```{include} software_linux_docs_iio_iio_snippets_SUB_iio_pointers.md
```
