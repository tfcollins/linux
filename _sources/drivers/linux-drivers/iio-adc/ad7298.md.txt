# AD7298 IIO Multi-Channel ADC Linux Driver

### Supported Devices

-   [AD7298](adi>AD7298)

### Evaluation Boards

-   [EVAL-AD7298SDZ](adi>EVAL-AD7298SDZ)

### Description

This is a Linux industrial I/O ([IIO](/software/linux/docs/iio/iio)) subsystem driver, targeting multi channel serial interface ADCs.
The industrial I/O subsystem provides a unified framework for drivers for many different types of converters and sensors using a number of different physical interfaces (i2c, spi, etc).
See [IIO](/software/linux/docs/iio/iio) for more information.

## Source Code

### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="git.linux.org&gt;drivers/iio/adc/ad7298.c">git</a></td>
<td><a href="git.linux.org&gt;drivers/iio/adc/ad7298.c">Yes</a></td>
</tr>
</tbody>
</table>

### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="git.linux.org&gt;drivers/iio/adc/ad7298.c">drivers/iio/adc/ad7298.c</a></td>
</tr>
<tr class="even">
<td>include</td>
<td><a href="git.linux.org&gt;include/linux/platform_data/ad7298.h">include/linux/platform_data/ad7298.h</a></td>
</tr>
</tbody>
</table>

## Example platform device initialization

![](page>software/linux/docs/platform_and_bus_model#Platform Data&noheader&firstseconly&noeditbtn)

The reference voltage may vary between boards and models. The platform_data for the device\'s \"struct device\" holds this information.

``` c
/**
 * struct ad7298_platform_data - Platform data for the ad7298 ADC driver
 * @ext_ref: Whether to use an external reference voltage.
 **/
struct ad7298_platform_data {
    bool ext_ref;
};
```

``` c
static struct ad7298_platform_data ad7298_pdata = {
    .ext_ref = true,
};
```

\<WRAP tip\>
In case platform_data is not present or set to NULL, the driver will use the AD7298 internal reference.
\</WRAP\>

![](page>software/linux/docs/platform_and_bus_model#Declaring SPI slave devices&firstseconly&noeditbtn)

Depending on the converter IC used, you may need to set the modalias accordingly, matching your part name.
It may also required to adjust max_speed_hz. Please consult the datasheet, for maximum spi clock supported by the device in question.

``` c
static struct spi_board_info board_spi_board_info[] __initdata = {
#if defined(CONFIG_AD7298) || \
    defined(CONFIG_AD7298_MODULE)
    {
        .modalias = "ad7298",
        .max_speed_hz = 1000000,     /* max spi clock (SCK) speed in HZ */
        .bus_num = 0,
        .chip_select = 3, /* CS, change it for your board */
        .controller_data = &spi_ad7298_chip_info,
        .mode = SPI_MODE_1,
    },
#endif
};
```

``` c
static int __init board_init(void)
{
    [--snip--]

    spi_register_board_info(board_spi_board_info, ARRAY_SIZE(board_spi_board_info));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

## Adding Linux driver support

Configure kernel with \"make menuconfig\" (alternatively use \"make xconfig\" or
\"make qconfig\")

\<WRAP round help\>
The AD7298 Driver depends on **CONFIG_SPI**
\</WRAP\>

    Linux Kernel Configuration
        Device Drivers  --->
            <*>     Industrial I/O support --->
                --- Industrial I/O support
                *** Analog to digital converters ***
                [--snip--]
                <*>   Analog Devices AD7298 ADC driver
                [--snip--]

## Hardware configuration

## Driver testing

![iio_snippets#iio device files&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio device files&noheader&firstseconly&noeditbtn)

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/\> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices\> ls
device0 device0:buffer0:access0 trigger0
device0:buffer0 device0:buffer0:event0

root:/sys/bus/iio/devices\> **cd device0**

root:/sys/devices/platform/bfin-spi.0/spi0.3/device0\> **ls -l**
drwxr-xr-x 5 root root 0 Jan 1 00:00 device0:buffer0
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 in0_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 in1_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 in2_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 in3_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 in4_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 in5_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 in6_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 in7_raw
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 in_scale
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 name
lrwxrwxrwx 1 root root 0 Jan 1 00:00 subsystem -\> ../../../../../bus/iio
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 temp0_input
drwxr-xr-x 2 root root 0 Jan 1 00:00 trigger
-rw-r\--r\-- 1 root root 4096 Jan 1 00:00 uevent
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0\>
\</xterm\>\</WRAP\>

##### Show device name

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0\> **cat name**
ad7298
\</xterm\>\</WRAP\>

##### Show internal temperature

**Description:**\
Shows high accuracy band gap temperature sensor temperature in milli degrees Celsius.

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0\> **cat temp0_input**
29750
\</xterm\>\</WRAP\>

**T** = **29.75 *Â°C***

##### Show scale

**Description:**\
scale to be applied to in0_raw in order to obtain the measured voltage in millivolts.

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0\> **cat in_scale**
0.610
\</xterm\>\</WRAP\>

##### Show channel 0 measurement

**Description:**\
Raw unscaled voltage measurement on channel 0

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0\> **cat in0_raw**
2158
\</xterm\>\</WRAP\>

**U** = *in0_raw \* in_scale* = 2158 \* 0.610 = **1316,38 *mV***

### Trigger management

![iio_snippets#iio devices with trigger consumer interface&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio devices with trigger consumer interface&noheader&firstseconly&noeditbtn)

#### Available standalone trigger drivers

![iio_snippets#Standalone trigger drivers&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#Standalone trigger drivers&noheader&firstseconly&noeditbtn)

### Buffer management

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0/device0:buffer0\> ls
**bytes_per_datum** **enable** subsystem
device0:buffer0:access0 **length** uevent
device0:buffer0:event0 **scan_elements**
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0/device0:buffer0\>
\</xterm\>\</WRAP\>

![iio_snippets#Buffer management&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#Buffer management&noheader&firstseconly&noeditbtn)

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0/device0:buffer0/scan_elements\> **ls**
in0_en in2_index in5_en in7_index
in0_index in3_en in5_index in_type
in1_en in3_index in6_en timestamp_en
in1_index in4_en in6_index timestamp_index
in2_en in4_index in7_en timestamp_type
root:/sys/devices/platform/bfin-spi.0/spi0.3/device0/device0:buffer0/scan_elements\>
\</xterm\>\</WRAP\>

![iio_snippets#Typical ADC scan elements&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#Typical ADC scan elements&noheader&firstseconly&noeditbtn)

## More Information

![iio_snippets#iio pointers&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio pointers&noheader&firstseconly&noeditbtn)
