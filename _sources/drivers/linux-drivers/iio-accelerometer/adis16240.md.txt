---
wiki-source: https://wiki.analog.com/resources/tools-software/linux-drivers/iio-accelerometer/adis16240
title: ADIS16240: Low Power Programmable Impact Sensor and Recorder
---

ADIS16240 IIO Programmable Impact Sensor and Recorder Linux Driver
==================================================================

Supported Devices
-----------------

-   [ADIS16240](https://www.google.com/search?q=ADIS16240&btnI=lucky)

Evaluation Boards
-----------------

-   [ADIS16240/PCBZ](https://www.google.com/search?q=EVAL-ADIS16240&btnI=lucky)

Description
-----------

This is a Linux industrial I/O ([IIO](/software/linux/docs/iio/iio)) subsystem driver, targeting serial interface Accelerometer.
The industrial I/O subsystem provides a unified framework for drivers for many different types of converters and sensors using a number of different physical interfaces (i2c, spi, etc).
See [IIO](/software/linux/docs/iio/iio) for more information.

Source Code
===========

Status
------

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://www.google.com/search?q=drivers/staging/iio/accel/adis16240_core.c&amp;btnI=lucky">git</a></td>
<td><a href="https://www.google.com/search?q=drivers/staging/iio/accel/adis16240_core.c&amp;btnI=lucky">Yes</a></td>
</tr>
</tbody>
</table>

Files
-----

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="https://www.google.com/search?q=drivers/staging/iio/accel/adis16240_core.c&amp;btnI=lucky">drivers/staging/iio/accel/adis16240_core.c</a></td>
</tr>
<tr class="even">
<td>driver</td>
<td><a href="https://www.google.com/search?q=drivers/staging/iio/accel/adis16240_ring.c&amp;btnI=lucky">drivers/staging/iio/accel/adis16240_ring.c</a></td>
</tr>
<tr class="odd">
<td>driver</td>
<td><a href="https://www.google.com/search?q=drivers/staging/iio/accel/adis16240_trigger.c&amp;btnI=lucky">drivers/staging/iio/accel/adis16240_trigger.c</a></td>
</tr>
<tr class="even">
<td>include</td>
<td><a href="https://www.google.com/search?q=drivers/staging/iio/accel/adis16240.h&amp;btnI=lucky">drivers/staging/iio/accel/adis16240.h</a></td>
</tr>
</tbody>
</table>

![](page>software/linux/docs/platform_and_bus_model#Declaring SPI slave devices&firstseconly&noeditbtn)

Depending on the converter IC used, you may need to set the modalias accordingly, matching your part name.
It may also required to adjust max\_speed\_hz. Please consult the datasheet, for maximum spi clock supported by the device in question.

``` {.c}
static struct spi_board_info board_spi_board_info[] __initdata = {
# if defined(CONFIG_ADIS16240) \
    || defined(CONFIG_ADIS16240_MODULE)
    {
        .modalias = "adis16240",
        .max_speed_hz = 1500000,     /* max spi clock (SCK) speed in HZ */
        .bus_num = 0,
        .chip_select = 5, /* CS, change it for your board */
        .platform_data = NULL, /* No spi_driver specific config */
        .mode = SPI_MODE_3,
        .irq = IRQ_PF4,
    },
## endif
};
```

``` {.c}
static int __init board_init(void)
{
    [--snip--]

    spi_register_board_info(board_spi_board_info, ARRAY_SIZE(board_spi_board_info));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

Adding Linux driver support
===========================

Configure kernel with \"make menuconfig\" (alternatively use \"make xconfig\" or
\"make qconfig\")

:::{NOTE} <!-- ATTRS: round="" help\="" -->

The ADIS16240 Driver depends on **CONFIG\_SPI**

:::


```{=markdown}
```
Linux Kernel Configuration
    Device Drivers  --->
        [*] Staging drivers  --->
            <*>     Industrial I/O support --->
                --- Industrial I/O support
                -*-   Enable ring buffer support within IIO
                -*-     Industrial I/O lock free software ring
                -*-   Enable triggered sampling support

                      *** Accelerometers ***
                [--snip--]

                <*>   Analog Devices ADIS16240 Programmable Impact Sensor and Recorder

                [--snip--]


```
```
Hardware configuration
======================

Driver testing
==============

![iio\_snippets\#iio device files&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio device files&noheader&firstseconly&noeditbtn)

:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/\> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices\> **ls**
iio:device0 trigger0

root:/sys/bus/iio/devices\> **cd iio:device0**
root:/sys/devices/platform/bfin-spi.0/spi0.5/iio:device0\> **ls -l**
-r\--r\--r\-- 1 root root 4096 Jan 4 04:15 accel\_xyz\_squared\_peak\_raw
drwxr-xr-x 2 root root 0 Jan 4 04:15 buffer
-r\--r\--r\-- 1 root root 4096 Jan 4 04:15 dev
-rw-r\--r\-- 1 root root 4096 Jan 4 04:15 in\_accel\_x\_calibbias
-r\--r\--r\-- 1 root root 4096 Jan 4 04:15 in\_accel\_x\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 04:15 in\_accel\_x\_scale
-rw-r\--r\-- 1 root root 4096 Jan 4 04:15 in\_accel\_y\_calibbias
-r\--r\--r\-- 1 root root 4096 Jan 4 04:15 in\_accel\_y\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 04:15 in\_accel\_y\_scale
-rw-r\--r\-- 1 root root 4096 Jan 4 04:15 in\_accel\_z\_calibbias
-r\--r\--r\-- 1 root root 4096 Jan 4 04:15 in\_accel\_z\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 04:15 in\_accel\_z\_scale
-r\--r\--r\-- 1 root root 4096 Jan 4 04:15 in\_temp0\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 04:15 in\_temp0\_scale
-r\--r\--r\-- 1 root root 4096 Jan 4 04:15 in\_voltage0\_supply\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 04:15 in\_voltage0\_supply\_scale
-r\--r\--r\-- 1 root root 4096 Jan 4 04:15 in\_voltage1\_raw
-r\--r\--r\-- 1 root root 4096 Jan 4 04:15 name
drwxr-xr-x 2 root root 0 Jan 4 04:15 power
\--w\-\-\-\-\-\-- 1 root root 4096 Jan 4 04:15 reset
-r\--r\--r\-- 1 root root 4096 Jan 4 04:15 sampling\_frequency\_available
drwxr-xr-x 2 root root 0 Jan 4 04:15 scan\_elements
lrwxrwxrwx 1 root root 0 Jan 4 04:15 subsystem -\> ../../../../../bus/iio
drwxr-xr-x 2 root root 0 Jan 4 04:15 trigger
-rw-r\--r\-- 1 root root 4096 Jan 4 04:15 uevent
```
:::


##### Show device name

:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.5/iio:device0\> **cat name**
adis16240
```
:::


##### ADIS16240 device attributes

For a detailed description please see:
[drivers/staging/iio/Documentation/sysfs-bus-iio](https://www.google.com/search?q=drivers/staging/iio/Documentation/sysfs-bus-iio&btnI=lucky)

<table>
<thead>
<tr class="header">
<th>Device files</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>accel_xyz_squared_peak_raw</td>
</tr>
<tr class="even">
<td>in_accel_x_calibbias</td>
</tr>
<tr class="odd">
<td>in_accel_x_raw</td>
</tr>
<tr class="even">
<td>in_accel_x_scale</td>
</tr>
<tr class="odd">
<td>in_accel_y_calibbias</td>
</tr>
<tr class="even">
<td>in_accel_y_raw</td>
</tr>
<tr class="odd">
<td>in_accel_y_scale</td>
</tr>
<tr class="even">
<td>in_accel_z_calibbias</td>
</tr>
<tr class="odd">
<td>in_accel_z_raw</td>
</tr>
<tr class="even">
<td>in_accel_z_scale</td>
</tr>
<tr class="odd">
<td>in_temp0_raw</td>
</tr>
<tr class="even">
<td>in_temp0_scale</td>
</tr>
<tr class="odd">
<td>in_voltage0_supply_raw</td>
</tr>
<tr class="even">
<td>in_voltage0_supply_scale</td>
</tr>
<tr class="odd">
<td>in_voltage1_raw</td>
</tr>
<tr class="even">
<td>name</td>
</tr>
<tr class="odd">
<td>reset</td>
</tr>
<tr class="even">
<td>sampling_frequency_available</td>
</tr>
</tbody>
</table>

Trigger management
------------------

:::{NOTE} <!-- ATTRS: round="" help\="" -->

This driver only supports it\'s own default trigger source **adis16240-dev0**

:::


:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.5/iio:device0\> **cat trigger/current\_trigger**
adis16240-dev0
```
:::


Buffer management
-----------------

:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.5/iio:device0/buffer\> **ls**
**bytes\_per\_datum** **enable** **length**
```
:::


![iio\_snippets\#Buffer management&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#Buffer management&noheader&firstseconly&noeditbtn)

:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.5/iio:device0/scan\_elements\>**ls**
in\_accel\_x\_en in\_accel\_z\_index in\_timestamp\_type
in\_accel\_x\_index in\_accel\_z\_type in\_voltage0\_supply\_en
in\_accel\_x\_type in\_temp0\_en in\_voltage0\_supply\_index
in\_accel\_y\_en in\_temp0\_index in\_voltage0\_supply\_type
in\_accel\_y\_index in\_temp0\_type in\_voltage1\_en
in\_accel\_y\_type in\_timestamp\_en in\_voltage1\_index
in\_accel\_z\_en in\_timestamp\_index in\_voltage1\_type
```
:::


![iio\_snippets\#Typical ADC scan elements&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#Typical ADC scan elements&noheader&firstseconly&noeditbtn)

More Information
================

![iio\_snippets\#iio pointers&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio pointers&noheader&firstseconly&noeditbtn)
