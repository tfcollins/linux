# AD8366 Dual-Digital Variable Gain Amplifier Linux Driver

### Supported Devices

-   [AD8366](adi>AD8366)
-   [ADA4961](adi>ADA4961)
-   [ADL5240](adi>ADL5240)
-   [ADRF5720](adi>ADRF5720)
-   [ADRF5730](adi>ADRF5730)
-   [ADRF5731](adi>ADRF5731)
-   [HMC271](adi>HMC271)
-   [HMC1018A](adi>HMC1018A)
-   [HMC1019A](adi>HMC1019A)
-   [HMC1119](adi>HMC1119)

### Evaluation Boards

-   [AD8366-EVALZ](adi>AD8366-EVALZ)

### Description

This is a Linux industrial I/O ([IIO](/software/linux/docs/iio/iio)) subsystem driver, targeting serial interface VGA/PGA amplifiers.
The industrial I/O subsystem provides a unified framework for drivers for many different types of converters and sensors using a number of different physical interfaces (i2c, spi, etc).
See [IIO](/software/linux/docs/iio/iio) for more information.

## Source Code

### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="git.linux.org&gt;drivers/iio/amplifiers/ad8366.c">git</a></td>
<td><a href="git.linux.org&gt;drivers/iio/amplifiers/ad8366.c">Yes</a></td>
</tr>
</tbody>
</table>

### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="git.linux.org&gt;drivers/iio/amplifiers/ad8366.c">drivers/iio/amplifiers/ad8366.c</a></td>
</tr>
<tr class="even">
<td>Documentation</td>
<td><a href="git.linux.org&gt;Documentation/ABI/testing/sysfs-bus-iio">Documentation/ABI/testing/sysfs-bus-iio</a></td>
</tr>
</tbody>
</table>

![](page>software/linux/docs/platform_and_bus_model#Declaring SPI slave devices&firstseconly&noeditbtn)

Depending on the IC used, you may need to set the modalias accordingly, matching your part name.
It may also required to adjust max_speed_hz. Please consult the datasheet, for maximum spi clock supported by the device in question.

``` c
static struct spi_board_info board_spi_board_info[] __initdata = {
#if defined(CONFIG_AD8366) || defined(CONFIG_AD8366_MODULE)
    {
        .modalias = "ad8366",
        .max_speed_hz = 1000000,     /* max spi clock (SCK) speed in HZ */
        .bus_num = 0,
        .chip_select = 6,
        .platform_data = &ad8366_pdata_lpc, /* spi_driver specific config */
        .mode = SPI_MODE_0, /* optional set SPI_3WIRE */
    },
};
```

``` c
static int __init board_init(void)
{
    [--snip--]

    spi_register_board_info(board_spi_board_info, ARRAY_SIZE(board_spi_board_info));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

## Example SPI device devicetree initialization

\*\*Analog Devices AD8366 (and similar) VGAs and DSAs \*\*

**Required properties:**

-   **compatible**: Must be one of:
    -   \"adi,ad8366\",
    -   \"adi,ada4961\",
    -   \"adi,adrf5720\",
    -   \"adi,adrf5730\",
    -   \"adi,adrf5731\",
    -   \"adi,adl5240\",
    -   \"adi,hmc271\",
    -   \"adi,hmc1018a\",
    -   \"adi,hmc1019a\",
    -   \"adi,hmc1119\",
-   **reg**: SPI chip select number for the device
-   **#address-cells**: Must be set to 1
-   **#size-cells**: Must be set to 0
-   **spi-max-frequency**: See Documentation/devicetree/bindings/spi/spi-bus.txt
-   **spi-cpha**: See Documentation/devicetree/bindings/spi/spi-bus.txt
-   **spi-cpol**: See Documentation/devicetree/bindings/spi/spi-bus.txt

**Optional properties:**

-   **reset-gpio**: a GPIO spec for the RESET pin (if available).
-   **enable-gpio**: a GPIO spec for the ENABLE or serial interface select pin (S/A) (if available).

**Example:**

``` c
&spi0 {
    status = "okay";

        hmc1018a: hmc1018a@0 {
        #address-cells = <1>;
        #size-cells = <0>;
        compatible = "adi,hmc1018a";
        reg = <0>;
                spi-cpol;
        spi-max-frequency = <1000000>;
    };

        adrf5720: adrf5731@1 {
        #address-cells = <1>;
        #size-cells = <0>;
        compatible = "adi,adrf5731";
        reg = <1>;
                spi-cpol;
        spi-max-frequency = <1000000>;
    };

    vga0_ad8366: ad8366@6 {
        #address-cells = <1>;
        #size-cells = <0>;
        compatible = "adi,ad8366";
        reg = <6>;
        spi-max-frequency = <10000000>;
    };
};
```

## Adding Linux driver support

Configure kernel with \"make menuconfig\" (alternatively use \"make xconfig\" or
\"make qconfig\")

\<WRAP round help\>
The AD8366 Driver depends on **CONFIG_SPI**
\</WRAP\>

    Linux Kernel Configuration
        Device Drivers  --->
            <*>     Industrial I/O support --->
                --- Industrial I/O support
                    Amplifiers  --->
                        <*> Analog Devices AD8366 VGA

## Hardware configuration

## Driver testing

![iio_snippets#iio device files&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio device files&noheader&firstseconly&noeditbtn)

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/\> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices\> ls
iio:device0
root:/sys/bus/iio/devices\> **iio:device0**

root:/\> **ls -l**
drwxr-xr-x 2 root root 0 Jan 1 00:00 .
drwxr-xr-x 3 root root 0 Jan 1 00:00 ..
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 dev
-r\--r\--r\-- 1 root root 4096 Jan 1 00:00 name
-rw-r\--r\-- 1 root root 4096 Jan 1 00:00 out_voltage0_hardwaregain
-rw-r\--r\-- 1 root root 4096 Jan 1 00:00 out_voltage1_hardwaregain
lrwxrwxrwx 1 root root 0 Jan 1 00:00 subsystem -\> ../../../../../../../../../bus/iio
-rw-r\--r\-- 1 root root 4096 Jan 1 00:00 uevent
\</xterm\>\</WRAP\>

##### Show device name

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/\> **cd /sys/bus/iio/devices/iio\\:device0/**
root:/\> **cat name**
ad8366
\</xterm\>\</WRAP\>

##### Set ChannelY Gain

/sys/bus/iio/devices/iio:deviceX/out_voltageY_hardwaregain\
Hardware applied gain factor. If shared across all channels,
\<type\>\_hardwaregain is used.

\<WRAP box bggreen\>\<wrap info\>This specifies any shell prompt running on the target\</wrap\>
\<xterm\>
root:/\> **cat out_voltage0_hardwaregain**
4.500000 dB

root:/\> **echo 10 \> out_voltage0_hardwaregain**
root:/\> **cat out_voltage0_hardwaregain**
9.813000 dB
\</xterm\>\</WRAP\>

## More Information

![iio_snippets#iio pointers&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio pointers&noheader&firstseconly&noeditbtn)
