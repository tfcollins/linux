---
wiki-source: https://wiki.analog.com/resources/tools-software/linux-drivers/input-touchscreen/ad7873
title: AD7843: Touch Screen Digitizer
---

# AD7873 Input Touch Screen Digitizer Linux Driver

#### Supported Devices

-   [AD7873](adi>AD7873)
-   [AD7843](adi>AD7843)

#### Description

![ad7873.png](/software/driver/linux/ad7873.png){width="300" query="?300"} ![ad7843.png](/software/driver/linux/ad7843.png){width="300" query="?300"}

The **AD7843/AD7873** is a 12-bit successive-approximation ADC with a synchronous serial interface and low on resistance switches for driving touch screens. The parts operates from a single 2.2 V to 5.25 V power supply and features throughput rates greater than 125 kSPS.
The external reference applied to the **AD7843** can be varied from 1 V to +VCC, while the analog input range is from 0 V to VREF. The device includes a shutdown mode that reduces the current consumption to less than 1 µA.

The **AD7873** is similar to the **AD7843** but has added functionality such as an on-chip temperature sensor (-40°C to + 85°C), on-chip 2.5 V reference and direct battery and touch-pressure measurement.

[**See also:**]{.underline} [AD7877 Touchscreen Device Driver](ad7877)
[**See also:**]{.underline} [AD7879 Touchscreen Device Driver](ad7879)

#### Configuration

#### Software configurable features

### Source Code

#### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="git.linux.org&gt;drivers/input/touchscreen/ads7846.c">git</a></td>
<td><a href="git.linux.org&gt;drivers/input/touchscreen/ads7846.c">Yes</a></td>
</tr>
</tbody>
</table>

#### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="git.linux.org&gt;drivers/input/touchscreen/ads7846.c">drivers/input/touchscreen/ads7846.c</a></td>
</tr>
<tr class="even">
<td>include</td>
<td><a href="git.linux.org&gt;include/linux/spi/ads7846.h">include/linux/spi/ads7846.h</a></td>
</tr>
</tbody>
</table>

### Example platform device initialization

![](page>software/linux/docs/platform_and_bus_model#Platform Data&noheader&firstseconly&noeditbtn)

Touchscreen characteristics vary between boards and models. The platform_data for the device's "struct device" holds this information.

<source trunk/include/linux/spi/ads7846.h c linux-kernel>

These snippets are all from the same file. `arch/blackfin/mach-bf537/boards/stamp.c`:

``` C
## if defined(CONFIG_TOUCHSCREEN_ADS7846) || defined(CONFIG_TOUCHSCREEN_ADS7846_MODULE)
## include <linux/spi/ads7846.h>
static struct bfin5xx_spi_chip ad7873_spi_chip_info = {
    .bits_per_word  = 8,
};

static int ads7873_get_pendown_state(void)
{
    return gpio_get_value(GPIO_PF6);
}

static struct ads7846_platform_data __initdata ad7873_pdata = {
    .model      = 7873,     /* AD7873 */
    .x_max      = 0xfff,
    .y_max      = 0xfff,
    .x_plate_ohms   = 620,
    .debounce_max   = 1,
    .debounce_rep   = 0,
    .debounce_tol   = (~0),
    .get_pendown_state = ads7873_get_pendown_state,
};
## endif
```

![](page>software/linux/docs/platform_and_bus_model#Declaring SPI slave devices&firstseconly&noeditbtn)

``` C
static struct spi_board_info bfin_spi_board_info[] __initdata = {
## if defined(CONFIG_TOUCHSCREEN_ADS7846) || defined(CONFIG_TOUCHSCREEN_ADS7846_MODULE)
    {
        .modalias = "ads7846",
        .max_speed_hz = 2000000,     /* max spi clock (SCK) speed in HZ */
        .bus_num = 0,
        .irq = IRQ_PF6,
        .chip_select = GPIO_PF10 + MAX_CTRL_CS, /* GPIO controlled SSEL */
        .controller_data = &ad7873_spi_chip_info, /* needed only on Blackfin */
        .platform_data = &ad7873_pdata,
        .mode = SPI_MODE_0,
    },
## endif
};
```

### Adding Linux driver support

Configure kernel with "make menuconfig" (alternatively use "make xconfig" or
"make qconfig")

:::{NOTE} <!-- ATTRS: round="" help="" -->

The AD7873 Driver depends on **CONFIG_SPI**

:::


    Input device support
      -*- Generic input layer (needed for keyboard, mouse, ...)
      < >   Support for memoryless force-feedback devices
      < >   Polled input device skeleton
      < >   Sparse keymap support library
            *** Userland interfaces ***
      < >   Mouse interface
      < >   Joystick interface
      <*>   Event interface
      < >   Event debugging
            *** Input Device Drivers ***
      [ ]   Keyboards  --->
      [ ]   Mice  --->
      [ ]   Joysticks/Gamepads  --->
      [ ]   Tablets  --->
      [*]   Touchscreens  --->
     
         --- Touchscreens
         <*>   ADS7846/TSC2046/AD7873 and AD(S)7843 based touchscreens (NEW)
         < >   AD7877 based touchscreens
         < >   Analog Devices AD7879-1/AD7889-1 touchscreen interface (NEW)
     
      [ ]   Miscellaneous devices  --->
          Hardware I/O ports  --->

### Hardware configuration

### Driver testing

#### Driver compiled as a module

```bashroot:~> **modprobe evdev**
root:~> **modprobe ads7846**
ads7846 spi0.18: touchscreen, irq 56
input: ADS7873 Touchscreen as /devices/platform/bfin-spi.0/spi0.18/input/input0
```

#### Driver compiled into the kernel

Your kernel startup messages should include something like this

    ads7846 spi0.18: touchscreen, irq 56
    input: ADS7873 Touchscreen as /devices/platform/bfin-spi.0/spi0.18/input/input0

#### Checking for proper installation

After the kernel boot your device folder should include at least one device node for the touchscreen

```bashroot:/> **ls -al /dev/input/**
drw-r--r-- 2 root root 0 Jan 1 00:03 .
drwxr-xr-x 5 root root 0 Jan 1 00:03 ..
crw-rw-r-- 1 root root 13, 64 Jan 1 00:03 event0
root:/>
```

Check that the interrupt is registered.

```bashroot:~> **cat /proc/interrupts | grep ads7846**
56: 16 GPIO ads7846
```

```bashroot:~> **cat /sys/class/input/input0/name**
ADS7873 Touchscreen
```

#### Use the event_test utility to test proper function

    root:/> event_test /dev/input/event0                                                                           
    Input driver version is 1.0.0                                                                                  
    Input device ID: bus 0x0 vendor 0x0 product 0x0 version 0x0                                                    
    Input device name: "ADS7873 Touchscreen"                                                                       
    Supported events:                                                                                              
      Event type 0 (Reset)                                                                                         
        Event code 0 (Reset)                                                                                       
        Event code 1 (Key)                                                                                         
        Event code 3 (Absolute)                                                                                    
      Event type 1 (Key)                                                                                           
      Event type 3 (Absolute)                                                                                      
        Event code 0 (X)                                                                                           
          Value    760                                                                                             
          Min        0                                                                                             
          Max     4095                                                                                             
        Event code 1 (Y)                                                                                           
          Value   1973                                                                                             
          Min        0                                                                                             
          Max     4095                                                                                             
        Event code 24 (Pressure)                                                                                   
          Value      0                                                                                             
          Min        0                                                                                             
          Max        0                                                                                             
    Testing ... (interrupt to exit)                                                                                
    Event: time 258292.823196, type 1 (Key), code 330 (Touch), value 1
    Event: time 258292.823209, type 3 (Absolute), code 0 (X), value 776
    Event: time 258292.823214, type 3 (Absolute), code 1 (Y), value 505
    Event: time 258292.823220, type 3 (Absolute), code 24 (Pressure), value 491
    Event: time 258292.823225, type 0 (Reset), code 0 (Reset), value 0
    Event: time 258292.828643, type 3 (Absolute), code 0 (X), value 789
    Event: time 258292.828653, type 3 (Absolute), code 1 (Y), value 489
    Event: time 258292.828659, type 3 (Absolute), code 24 (Pressure), value 485
    Event: time 258292.828664, type 0 (Reset), code 0 (Reset), value 0
    Event: time 258292.834085, type 3 (Absolute), code 0 (X), value 790
    Event: time 258292.834095, type 3 (Absolute), code 1 (Y), value 499
    Event: time 258292.834101, type 3 (Absolute), code 24 (Pressure), value 482
    Event: time 258292.834106, type 0 (Reset), code 0 (Reset), value 0
    Event: time 258292.839527, type 3 (Absolute), code 0 (X), value 789
    Event: time 258292.839538, type 3 (Absolute), code 1 (Y), value 502
    Event: time 258292.839544, type 3 (Absolute), code 24 (Pressure), value 481
    Event: time 258292.839549, type 0 (Reset), code 0 (Reset), value 0

:::{NOTE} <!-- ATTRS: tip="" -->

In case you touch the surface and don't receive events, it's likely that something with your /PENIRQ Interrupt is wrong.
**check irq number in your platform device file**

:::


### More Information

![](page>resources/tools-software/linux-drivers/snippets#input_pointers&noheader&firstseconly&noeditbtn)
