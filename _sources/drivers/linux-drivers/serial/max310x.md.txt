---
wiki-source: https://wiki.analog.com/resources/tools-software/linux-drivers/serial/max310x
title: MAX14830: Quad Serial UART with 128-Word FIFOs
source: /home/runner/work/linux/linux/drivers/tty/serial/max310x.c
compatibles: MAX14830, maxim,max3107, maxim,max3108, maxim,max3109, maxim,max14830
---
# MAX310x Driver

### Supported devices

[MAX3107](https://maximintegrated.com/en/products/interface/controllers-expanders/MAX3107.html)

[MAX3108](https://maximintegrated.com/en/products/interface/controllers-expanders/MAX3108.html)

[MAX3109](https://maximintegrated.com/en/products/interface/controllers-expanders/MAX3109.html)

[MAX14830](https://maximintegrated.com/en/products/interface/controllers-expanders/MAX14830.html)

### Evaluation boards

[MAX3107EVKIT](https://maximintegrated.com/en/products/interface/controllers-expanders/MAX3107EVKIT.html)

[MAX14830EVKIT](https://maximintegrated.com/en/products/interface/controllers-expanders/MAX14830EVKIT.html)

### Overview

The MAX310x devices are advanced UART with 128 words each of receive and transmit FIFO that can be controlled through I²C or high-speed SPI™. Baud rates up to 24Mbps make them suitable for today's high data rate applications.

A PLL, predivider, and fractional baud-rate generator allow high-resolution baud-rate programming and minimize the dependency of baud rate on reference clock frequency.

The
[MAX3109](https://maximintegrated.com/en/products/interface/controllers-expanders/MAX3109.html)
is a dual-channel device, while the
[MAX14830](https://maximintegrated.com/en/products/interface/controllers-expanders/MAX14830.html)
is quad-channel.

## Source Code

### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="git.linux.org&gt;drivers/tty/serial/max310x.c">git</a></td>
<td>Yes</td>
</tr>
</tbody>
</table>

### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="git.linux.org&gt;drivers/tty/serial/max310x.c">drivers/tty/serial/max310x.c</a></td>
</tr>
<tr class="even">
<td>Documentation</td>
<td><a href="git.linux.org&gt;Documentation/devicetree/bindings/serial/maxim,max310x.txt">Documentation/devicetree/bindings/serial/maxim,max310x.txt</a></td>
</tr>
</tbody>
</table>

Example device tree

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>i2c dts</td>
<td><a href="https://github.com/analogdevicesinc/linux/rpi-5.10.y?arch/arm/boot/dts/overlays/rpi-max14830-i2c-overlay.dts">rpi-max14830-i2c-overlay.dts</a></td>
</tr>
<tr class="even">
<td>spi dts</td>
<td><a href="https://github.com/analogdevicesinc/linux/rpi-5.10.y?arch/arm/boot/dts/overlays/rpi-max14830-spi-overlay.dts">rpi-max14830-spi-overlay.dts</a></td>
</tr>
</tbody>
</table>

## Driver testing

The driver exposes character devices starting with the ttyMAX name.

To connect to these devices, use a Serial Terminal Emulaor (like GTKTerm, Picocom, Minicom, Tera Term).

For example, to use Picocom to connect to UART port 0 of a MAX14830 device using a 9600 baud-rate, use the following command.

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
picocom -b 9600 /dev/ttyMAX0
```
:::

