---
wiki-source: https://wiki.analog.com/resources/tools-software/linux-drivers/iio-inertial-measurement-units/adis16400
title: ADIS16448: Low Noise, High Stability Ten Degree of Freedom MEMS Inertial Sensor
---

ADIS16400 IIO Inertial Measurement Unit Linux Driver
====================================================

Supported Devices
-----------------

-   [ADIS16300](https://www.google.com/search?q=ADIS16300&btnI=lucky)
-   [ADIS16305](https://www.google.com/search?q=ADIS16305&btnI=lucky) (Linux v4.3+)
-   [ADIS16334](https://www.google.com/search?q=ADIS16334&btnI=lucky)
-   [ADIS16350](https://www.google.com/search?q=ADIS16350&btnI=lucky)
-   [ADIS16354](https://www.google.com/search?q=ADIS16354&btnI=lucky)
-   [ADIS16355](https://www.google.com/search?q=ADIS16355&btnI=lucky)
-   [ADIS16360](https://www.google.com/search?q=ADIS16360&btnI=lucky)
-   [ADIS16362](https://www.google.com/search?q=ADIS16362&btnI=lucky)
-   [ADIS16364](https://www.google.com/search?q=ADIS16364&btnI=lucky)
-   [ADIS16365](https://www.google.com/search?q=ADIS16365&btnI=lucky)
-   [ADIS16367](https://www.google.com/search?q=ADIS16367&btnI=lucky) (Linux v4.3+)
-   [ADIS16400](https://www.google.com/search?q=ADIS16400&btnI=lucky)
-   [ADIS16405](https://www.google.com/search?q=ADIS16405&btnI=lucky)
-   [ADIS16445](https://www.google.com/search?q=ADIS16445&btnI=lucky) (Linux v4.3+)
-   [ADIS16448](https://www.google.com/search?q=ADIS16448&btnI=lucky)

Evaluation Boards
-----------------

-   [ADIS16300/PCBZ](https://www.google.com/search?q=EVAL-ADIS16300&btnI=lucky)
-   [ADIS16305/PCBZ](https://www.google.com/search?q=EVAL-ADIS16300&btnI=lucky)
-   [ADIS16334/PCBZ](https://www.google.com/search?q=EVAL-ADIS16334&btnI=lucky)
-   [ADIS16360/PCBZ](https://www.google.com/search?q=EVAL-ADIS16360&btnI=lucky)
-   [ADIS16362/PCBZ](https://www.google.com/search?q=EVAL-ADIS16362&btnI=lucky)
-   [ADIS16364/PCBZ](https://www.google.com/search?q=EVAL-ADIS16364&btnI=lucky)
-   [ADIS16365/PCBZ](https://www.google.com/search?q=EVAL-ADIS16365&btnI=lucky)
-   [ADIS16367/PCBZ](https://www.google.com/search?q=EVAL-ADIS16367&btnI=lucky)
-   [ADIS16400/PCBZ](https://www.google.com/search?q=EVAL-ADIS16400&btnI=lucky)
-   [ADIS16405/PCBZ](https://www.google.com/search?q=EVAL-ADIS16405&btnI=lucky)
-   [ADIS16445/PCBZ](https://www.google.com/search?q=EVAL-ADIS16445&btnI=lucky)
-   [ADIS16448/PCBZ](https://www.google.com/search?q=EVAL-ADIS16448&btnI=lucky)

Description
-----------

This is a Linux industrial I/O ([IIO](/software/linux/docs/iio/iio)) subsystem driver, targeting serial interface Inertial Measurement Units (IMU).
The industrial I/O subsystem provides a unified framework for drivers for many different types of converters and sensors using a number of different physical interfaces (i2c, spi, etc).
See [IIO](/software/linux/docs/iio/iio) for more information.

Source Code
===========

Status
------

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://www.google.com/search?q=drivers/iio/imu/adis16400_core.c&amp;btnI=lucky">git</a></td>
<td><a href="https://www.google.com/search?q=drivers/iio/imu/adis16400_core.c&amp;btnI=lucky">Yes</a></td>
</tr>
</tbody>
</table>

Files
-----

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="https://www.google.com/search?q=drivers/iio/imu/adis16400_core.c&amp;btnI=lucky">drivers/iio/imu/adis16400_core.c</a></td>
</tr>
<tr class="even">
<td>driver</td>
<td><a href="https://www.google.com/search?q=drivers/iio/imu/adis16400_ring.c&amp;btnI=lucky">drivers/iio/imu/adis16400_ring.c</a></td>
</tr>
<tr class="odd">
<td>driver</td>
<td><a href="https://www.google.com/search?q=drivers/iio/imu/adis16400_trigger.c&amp;btnI=lucky">drivers/iio/imu/adis16400_trigger.c</a></td>
</tr>
<tr class="even">
<td>include</td>
<td><a href="https://www.google.com/search?q=drivers/iio/imu/adis16400.h&amp;btnI=lucky">drivers/iio/imu/adis16400.h</a></td>
</tr>
</tbody>
</table>

![](page>software/linux/docs/platform_and_bus_model#Declaring SPI slave devices&firstseconly&noeditbtn)

Depending on the converter IC used, you may need to set the modalias accordingly, matching your part name.
It may also required to adjust max\_speed\_hz. Please consult the datasheet, for maximum spi clock supported by the device in question.

``` {.c}
static struct spi_board_info board_spi_board_info[] __initdata = {
# if defined(CONFIG_ADIS16400) \
    || defined(CONFIG_ADIS16400_MODULE)
    {
        .modalias = "adis16400",
        .max_speed_hz = 1000000,     /* max spi clock (SCK) speed in HZ */
        .bus_num = 0,
        .chip_select = 1, /* CS, change it for your board */
        .platform_data = NULL, /* No spi_driver specific config */
        .mode = SPI_MODE_3,
        .irq = IRQ_PF5,
    },
## endif

};
```

``` {.c}
static int __init board_init(void)
{
    [--snip--]

    spi_register_board_info(board_spi_board_info, ARRAY_SIZE(board_spi_board_info));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

Adding Linux driver support
===========================

Configure kernel with \"make menuconfig\" (alternatively use \"make xconfig\" or
\"make qconfig\")

:::{NOTE} <!-- ATTRS: round="" help\="" -->

The ADIS16400 Driver depends on **CONFIG\_SPI**

:::


```{=markdown}
```
Linux Kernel Configuration
    Device Drivers  --->
        <*>     Industrial I/O support --->
            --- Industrial I/O support
            *** Inertial measurement units ***
            [--snip--]
                <*>   Analog Devices ADIS16400 and similar IMU SPI driver
            [--snip--]


```
```
Hardware configuration
======================

Driver testing
==============

![iio\_snippets\#iio device files&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio device files&noheader&firstseconly&noeditbtn)

:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/\> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices\> **ls**
iio:device0 trigger0

root:/sys/bus/iio/devices\> **cd iio:device0**
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **ls -l**
drwxr-xr-x 2 root root 0 Jan 4 00:03 buffer
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 dev
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_accel\_filter\_low\_pass\_3db\_frequency
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_accel\_scale
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_accel\_x\_calibbias
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_accel\_x\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_accel\_y\_calibbias
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_accel\_y\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_accel\_z\_calibbias
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_accel\_z\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_anglvel\_filter\_low\_pass\_3db\_frequency
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_anglvel\_scale
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_anglvel\_x\_calibbias
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_anglvel\_x\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_anglvel\_y\_calibbias
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_anglvel\_y\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_anglvel\_z\_calibbias
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_anglvel\_z\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_magn\_filter\_low\_pass\_3db\_frequency
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_magn\_scale
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_magn\_x\_raw
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_magn\_y\_raw
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_magn\_z\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_temp0\_offset
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_temp0\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_temp0\_scale
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_voltage0\_supply\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_voltage0\_supply\_scale
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 in\_voltage1\_raw
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 in\_voltage1\_scale
-r\--r\--r\-- 1 root root 4096 Jan 4 00:03 name
drwxr-xr-x 2 root root 0 Jan 4 00:03 power
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 sampling\_frequency
drwxr-xr-x 2 root root 0 Jan 4 00:03 scan\_elements
lrwxrwxrwx 1 root root 0 Jan 4 00:03 subsystem -\> ../../../../../bus/iio
drwxr-xr-x 2 root root 0 Jan 4 00:03 trigger
-rw-r\--r\-- 1 root root 4096 Jan 4 00:03 uevent
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\>
```
:::


ADIS16400 device attributes
---------------------------

For a detailed description please see:
[Documentation/ABI/testing/sysfs-bus-iio](https://www.google.com/search?q=Documentation/ABI/testing/sysfs-bus-iio&btnI=lucky)

<table>
<thead>
<tr class="header">
<th>3-Axis Accelerometer related device files</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>in_accel_filter_low_pass_3db_frequency</td>
<td>Bandwidth for the accelerometer channels.</td>
</tr>
<tr class="even">
<td>in_accel_scale</td>
<td>Scale for the accelerometer channels.</td>
</tr>
<tr class="odd">
<td>in_accel_x_calibbias</td>
<td>Calibration offset for the X-axis accelerometer channel.</td>
</tr>
<tr class="even">
<td>in_accel_x_raw</td>
<td>Raw X-axis accelerometer channel value.</td>
</tr>
<tr class="odd">
<td>in_accel_y_calibbias</td>
<td>Calibration offset for the Y-axis accelerometer channel.</td>
</tr>
<tr class="even">
<td>in_accel_y_raw</td>
<td>Raw Y-axis accelerometer channel value.</td>
</tr>
<tr class="odd">
<td>in_accel_z_calibbias</td>
<td>Calibration offset for the Z-axis accelerometer channel.</td>
</tr>
<tr class="even">
<td>in_accel_z_raw</td>
<td>Raw Z-axis accelerometer channel value.</td>
</tr>
<tr class="odd">
<td>3-Axis Gyro related device files</td>
<td>Description</td>
</tr>
<tr class="even">
<td>in_anglvel_filter_low_pass_3db_frequency</td>
<td>Bandwidth for the gyroscope channels.</td>
</tr>
<tr class="odd">
<td>in_anglvel_scale</td>
<td>Scale for the gyroscope channels.</td>
</tr>
<tr class="even">
<td>in_anglvel_x_calibbias</td>
<td>Calibration offset for the X-axis gyroscope channel.</td>
</tr>
<tr class="odd">
<td>in_anglvel_x_raw</td>
<td>Raw X-axis gyroscope channel value.</td>
</tr>
<tr class="even">
<td>in_anglvel_y_calibbias</td>
<td>Calibration offset for the Y-axis gyroscope channel.</td>
</tr>
<tr class="odd">
<td>in_anglvel_y_raw</td>
<td>Raw Y-axis gyroscope channel value.</td>
</tr>
<tr class="even">
<td>in_anglvel_z_calibbias</td>
<td>Calibration offset for the Z-axis gyroscope channel.</td>
</tr>
<tr class="odd">
<td>in_anglvel_z_raw</td>
<td>Raw Z-axis gyroscope channel value.</td>
</tr>
<tr class="even">
<td>3-Axis Magnetometer related device files</td>
<td>Description</td>
</tr>
<tr class="odd">
<td>in_magn_filter_low_pass_3db_frequency</td>
<td>Bandwidth for the magnetometer channels.</td>
</tr>
<tr class="even">
<td>in_magn_scale</td>
<td>Scale for the magnetometer channels.</td>
</tr>
<tr class="odd">
<td>in_magn_x_raw</td>
<td>Raw X-axis magnetometer channel value.</td>
</tr>
<tr class="even">
<td>in_magn_y_raw</td>
<td>Raw Y-axis magnetometer channel value.</td>
</tr>
<tr class="odd">
<td>in_magn_z_raw</td>
<td>Raw Z-axis magnetometer channel value.</td>
</tr>
<tr class="even">
<td>Barometric pressure sensor related files</td>
<td>Description</td>
</tr>
<tr class="odd">
<td>in_pressure_raw</td>
<td>Raw barometric pressure sensor channel value.</td>
</tr>
<tr class="even">
<td>in_pressure_scale</td>
<td>Scale for the barometric pressure sensor channel.</td>
</tr>
<tr class="odd">
<td>Temperature sensor related files</td>
<td>Description</td>
</tr>
<tr class="even">
<td>in_temp0_offset</td>
<td>Offset for temperature sensor channel.</td>
</tr>
<tr class="odd">
<td>in_temp0_raw</td>
<td>Raw temperature channel value.</td>
</tr>
<tr class="even">
<td>in_temp0_scale</td>
<td>Scale for the temperature sensor channel.</td>
</tr>
<tr class="odd">
<td>Power supply monitor related files</td>
<td>Description</td>
</tr>
<tr class="even">
<td>in_voltage0_supply_raw</td>
<td>Raw power supply monitor channel value.</td>
</tr>
<tr class="odd">
<td>in_voltage0_supply_scale</td>
<td>Scale for the power supply monitor channel.</td>
</tr>
<tr class="even">
<td>Auxiliary ADC related files</td>
<td>Description</td>
</tr>
<tr class="odd">
<td>in_voltage1_raw</td>
<td>Raw auxiliary ADC channel value.</td>
</tr>
<tr class="even">
<td>in_voltage1_scale</td>
<td>Scale for the auxiliary ADC channel.</td>
</tr>
<tr class="odd">
<td>Miscellaneous device files</td>
<td>Description</td>
</tr>
<tr class="even">
<td>name</td>
<td>Name of the IIO device.</td>
</tr>
<tr class="odd">
<td>sampling_frequency</td>
<td>Currently selected sample rate.</td>
</tr>
</tbody>
</table>

#### Show device name

:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **cat name**
adis16400
```
:::


#### Set sampling frequency

The sampling frequency of the device can be set by writing the desired value to the `sampling_frequency` file. The driver will automatically round up to the nearest supported sampling frequency.

**Example:**
:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **cat sampling\_frequency**
819.202
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **echo 546 \> sampling\_frequency**
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **cat sampling\_frequency**
546.135
```
:::


#### Show channel value

A channel value can be read from its `_raw` attribute. The value returned by the `_raw` attribute is the raw value as reported by the device. To get the processed value of the channel in a standardized unit add the channels `_offset` attribute to the `_raw` value and multiply the result by `_scale` attribute. If no `_offset` attribute is present assume 0 for the offset.

`processed value = (raw + offset) * scale`

The units by the IIO framework are:

-   Acceleration: Meter per Second squared
-   Angular velocity: Rad per second
-   Pressure: kilo Pascal
-   Voltage: milli Volts
-   Temperature: milli-degree Celsius

**Example:**
:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **cat in\_accel\_z\_raw**
1202
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **cat in\_accel\_scale**
0.008168
```
:::


`Z-axis acceleration = in_accel_z_raw * in_accel_scale = 1202 * 0.008168 m/s^2 = 9.81 m/s^2`

#### Set channel bandwidth

The channels bandwidth can be set by writing the desired value to the channels `_filter_low_pass_3db_frequency` attribute. The driver will automatically round up to the nearest supported bandwidth.

Note that all channels share the same low pass filter frequency so changing it for one channel will change it for all other channels as well. Also note that the low pass filter frequency depends on the sampling frequency, so changing the sampling frequency will scale the low pass filter frequency accordingly. E.g. reducing the sampling frequency by a factor of two will also reduce the bandwidth by a factor of two.

**Example:**
:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **cat in\_anglvel\_filter\_low\_pass\_3db\_frequency**
409.600000
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **echo 150 \> in\_anglvel\_filter\_low\_pass\_3db\_frequency**
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **cat in\_anglvel\_filter\_low\_pass\_3db\_frequency**
163.840400
```
:::


Trigger management
------------------

:::{NOTE} <!-- ATTRS: round="" help\="" -->

This driver only supports it\'s own default trigger source **adis16400-dev0**

:::


:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0\> **cat trigger/current\_trigger**
adis16400-dev0
```
:::


Buffer management
-----------------

:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0/buffer\> **ls**
**enable** **length**
```
:::


![iio\_snippets\#Buffer management&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#Buffer management&noheader&firstseconly&noeditbtn)

:::{NOTE} <!-- ATTRS: box="" bggreen\="" -->
:::{HINT} <!-- ATTRS: info\="" -->
This specifies any shell prompt running on the target
:::

```bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0/scan\_elements\>**ls**
in\_accel\_x\_en in\_gyro\_y\_index in\_magn\_z\_type
in\_accel\_x\_index in\_gyro\_y\_type in\_temp0\_en
in\_accel\_x\_type in\_gyro\_z\_en in\_temp0\_index
in\_accel\_y\_en in\_gyro\_z\_index in\_temp0\_type
in\_accel\_y\_index in\_gyro\_z\_type in\_timestamp\_en
in\_accel\_y\_type in\_magn\_x\_en in\_timestamp\_index
in\_accel\_z\_en in\_magn\_x\_index in\_timestamp\_type
in\_accel\_z\_index in\_magn\_x\_type in\_voltage0\_supply\_en
in\_accel\_z\_type in\_magn\_y\_en in\_voltage0\_supply\_index
in\_gyro\_x\_en in\_magn\_y\_index in\_voltage0\_supply\_type
in\_gyro\_x\_index in\_magn\_y\_type in\_voltage1\_en
in\_gyro\_x\_type in\_magn\_z\_en in\_voltage1\_index
in\_gyro\_y\_en in\_magn\_z\_index in\_voltage1\_type
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0/scan\_elements\>
```
:::


![iio\_snippets\#Typical ADC scan elements&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#Typical ADC scan elements&noheader&firstseconly&noeditbtn)

More Information
================

![iio\_snippets\#iio pointers&noheader&firstseconly&noeditbtn](/page>software/linux/docs/iio/iio_snippets#iio pointers&noheader&firstseconly&noeditbtn)

IMU Evaluation Board User Guides
--------------------------------

-   [ADIS1630X Evaluation on the EVAL-ADIS](/resources/eval/user-guides/inertial-mems/imu/adis1630x)
-   [ADIS16334 Evaluation on the EVAL-ADIS](/resources/eval/user-guides/inertial-mems/imu/adis16334)
-   [ADIS1636X Evaluation on the EVAL-ADIS](/resources/eval/user-guides/inertial-mems/imu/adis1636x)
-   [ADIS1644X Evaluation on the EVAL-ADIS](/resources/eval/user-guides/inertial-mems/imu/adis16448)
