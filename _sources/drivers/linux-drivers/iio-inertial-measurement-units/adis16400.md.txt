---
wiki-source: https://wiki.analog.com/resources/tools-software/linux-drivers/iio-inertial-measurement-units/adis16400
title: ADIS16300: Four Degrees of Freedom Inertial Sensor
---

# ADIS16400 IIO Inertial Measurement Unit Linux Driver

#### Supported Devices

-   [ADIS16300](https://analog.com/ADIS16300)
-   [ADIS16305](https://analog.com/ADIS16305) (Linux v4.3+)
-   [ADIS16334](https://analog.com/ADIS16334)
-   [ADIS16350](https://analog.com/ADIS16350)
-   [ADIS16354](https://analog.com/ADIS16354)
-   [ADIS16355](https://analog.com/ADIS16355)
-   [ADIS16360](https://analog.com/ADIS16360)
-   [ADIS16362](https://analog.com/ADIS16362)
-   [ADIS16364](https://analog.com/ADIS16364)
-   [ADIS16365](https://analog.com/ADIS16365)
-   [ADIS16367](https://analog.com/ADIS16367) (Linux v4.3+)
-   [ADIS16400](https://analog.com/ADIS16400)
-   [ADIS16405](https://analog.com/ADIS16405)
-   [ADIS16445](https://analog.com/ADIS16445) (Linux v4.3+)
-   [ADIS16448](https://analog.com/ADIS16448)

#### Evaluation Boards

-   [ADIS16300/PCBZ](https://analog.com/EVAL-ADIS16300)
-   [ADIS16305/PCBZ](https://analog.com/EVAL-ADIS16300)
-   [ADIS16334/PCBZ](https://analog.com/EVAL-ADIS16334)
-   [ADIS16360/PCBZ](https://analog.com/EVAL-ADIS16360)
-   [ADIS16362/PCBZ](https://analog.com/EVAL-ADIS16362)
-   [ADIS16364/PCBZ](https://analog.com/EVAL-ADIS16364)
-   [ADIS16365/PCBZ](https://analog.com/EVAL-ADIS16365)
-   [ADIS16367/PCBZ](https://analog.com/EVAL-ADIS16367)
-   [ADIS16400/PCBZ](https://analog.com/EVAL-ADIS16400)
-   [ADIS16405/PCBZ](https://analog.com/EVAL-ADIS16405)
-   [ADIS16445/PCBZ](https://analog.com/EVAL-ADIS16445)
-   [ADIS16448/PCBZ](https://analog.com/EVAL-ADIS16448)

#### Description

This is a Linux industrial I/O ([IIO](/software/linux/docs/iio/iio)) subsystem driver, targeting serial interface Inertial Measurement Units (IMU).
The industrial I/O subsystem provides a unified framework for drivers for many different types of converters and sensors using a number of different physical interfaces (i2c, spi, etc).
See [IIO](/software/linux/docs/iio/iio) for more information.

### Source Code

#### Status

<table>
<thead>
<tr class="header">
<th>Source</th>
<th>Mainlined?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="git.linux.org&gt;drivers/iio/imu/adis16400_core.c">git</a></td>
<td><a href="git.linux.org&gt;drivers/iio/imu/adis16400_core.c">Yes</a></td>
</tr>
</tbody>
</table>

#### Files

<table>
<thead>
<tr class="header">
<th>Function</th>
<th>File</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>driver</td>
<td><a href="staging.kernel.org&gt;drivers/iio/imu/adis16400_core.c">drivers/iio/imu/adis16400_core.c</a></td>
</tr>
<tr class="even">
<td>driver</td>
<td><a href="staging.kernel.org&gt;drivers/iio/imu/adis16400_ring.c">drivers/iio/imu/adis16400_ring.c</a></td>
</tr>
<tr class="odd">
<td>driver</td>
<td><a href="staging.kernel.org&gt;drivers/iio/imu/adis16400_trigger.c">drivers/iio/imu/adis16400_trigger.c</a></td>
</tr>
<tr class="even">
<td>include</td>
<td><a href="staging.kernel.org&gt;drivers/iio/imu/adis16400.h">drivers/iio/imu/adis16400.h</a></td>
</tr>
</tbody>
</table>

<!-- CMDS: firstseconly noeditbtn -->
```{include} software_linux_docs_platform_and_bus_model_SUB_Declaring_SPI_slave_devices.md
```

Depending on the converter IC used, you may need to set the modalias accordingly, matching your part name.
It may also required to adjust max_speed_hz. Please consult the datasheet, for maximum spi clock supported by the device in question.

``` c
static struct spi_board_info board_spi_board_info[] __initdata = {
## if defined(CONFIG_ADIS16400) 
    || defined(CONFIG_ADIS16400_MODULE)
    {
        .modalias = "adis16400",
        .max_speed_hz = 1000000,     /* max spi clock (SCK) speed in HZ */
        .bus_num = 0,
        .chip_select = 1, /* CS, change it for your board */
        .platform_data = NULL, /* No spi_driver specific config */
        .mode = SPI_MODE_3,
        .irq = IRQ_PF5,
    },
## endif

};
```

``` c
static int __init board_init(void)
{
    [--snip--]

    spi_register_board_info(board_spi_board_info, ARRAY_SIZE(board_spi_board_info));

    [--snip--]

    return 0;
}
arch_initcall(board_init);
```

### Adding Linux driver support

Configure kernel with "make menuconfig" (alternatively use "make xconfig" or
"make qconfig")

:::{NOTE} <!-- ATTRS: round="" help="" -->

The ADIS16400 Driver depends on **CONFIG_SPI**

:::


    Linux Kernel Configuration
        Device Drivers  --->
            <*>     Industrial I/O support --->
                --- Industrial I/O support
                *** Inertial measurement units ***
                [--snip--]
                    <*>   Analog Devices ADIS16400 and similar IMU SPI driver
                [--snip--]

### Hardware configuration

### Driver testing

<!-- CMDS: noheader firstseconly noeditbtn -->
```{include} software_linux_docs_iio_iio_snippets_SUB_iio_device_files.md
```

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices> **ls**
iio:device0 trigger0

root:/sys/bus/iio/devices> **cd iio:device0**
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **ls -l**
drwxr-xr-x 2 root root 0 Jan 4 00:03 buffer
-r--r--r-- 1 root root 4096 Jan 4 00:03 dev
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_accel_filter_low_pass_3db_frequency
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_accel_scale
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_accel_x_calibbias
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_accel_x_raw
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_accel_y_calibbias
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_accel_y_raw
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_accel_z_calibbias
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_accel_z_raw
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_anglvel_filter_low_pass_3db_frequency
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_anglvel_scale
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_anglvel_x_calibbias
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_anglvel_x_raw
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_anglvel_y_calibbias
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_anglvel_y_raw
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_anglvel_z_calibbias
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_anglvel_z_raw
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_magn_filter_low_pass_3db_frequency
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_magn_scale
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_magn_x_raw
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_magn_y_raw
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_magn_z_raw
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_temp0_offset
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_temp0_raw
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_temp0_scale
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_voltage0_supply_raw
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_voltage0_supply_scale
-r--r--r-- 1 root root 4096 Jan 4 00:03 in_voltage1_raw
-rw-r--r-- 1 root root 4096 Jan 4 00:03 in_voltage1_scale
-r--r--r-- 1 root root 4096 Jan 4 00:03 name
drwxr-xr-x 2 root root 0 Jan 4 00:03 power
-rw-r--r-- 1 root root 4096 Jan 4 00:03 sampling_frequency
drwxr-xr-x 2 root root 0 Jan 4 00:03 scan_elements
lrwxrwxrwx 1 root root 0 Jan 4 00:03 subsystem -> ../../../../../bus/iio
drwxr-xr-x 2 root root 0 Jan 4 00:03 trigger
-rw-r--r-- 1 root root 4096 Jan 4 00:03 uevent
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0>
```
:::


#### ADIS16400 device attributes

For a detailed description please see:
[Documentation/ABI/testing/sysfs-bus-iio](staging.kernel.org>Documentation/ABI/testing/sysfs-bus-iio)

<table>
<thead>
<tr class="header">
<th>3-Axis Accelerometer related device files</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>in_accel_filter_low_pass_3db_frequency</td>
<td>Bandwidth for the accelerometer channels.</td>
</tr>
<tr class="even">
<td>in_accel_scale</td>
<td>Scale for the accelerometer channels.</td>
</tr>
<tr class="odd">
<td>in_accel_x_calibbias</td>
<td>Calibration offset for the X-axis accelerometer channel.</td>
</tr>
<tr class="even">
<td>in_accel_x_raw</td>
<td>Raw X-axis accelerometer channel value.</td>
</tr>
<tr class="odd">
<td>in_accel_y_calibbias</td>
<td>Calibration offset for the Y-axis accelerometer channel.</td>
</tr>
<tr class="even">
<td>in_accel_y_raw</td>
<td>Raw Y-axis accelerometer channel value.</td>
</tr>
<tr class="odd">
<td>in_accel_z_calibbias</td>
<td>Calibration offset for the Z-axis accelerometer channel.</td>
</tr>
<tr class="even">
<td>in_accel_z_raw</td>
<td>Raw Z-axis accelerometer channel value.</td>
</tr>
<tr class="odd">
<td>3-Axis Gyro related device files</td>
<td>Description</td>
</tr>
<tr class="even">
<td>in_anglvel_filter_low_pass_3db_frequency</td>
<td>Bandwidth for the gyroscope channels.</td>
</tr>
<tr class="odd">
<td>in_anglvel_scale</td>
<td>Scale for the gyroscope channels.</td>
</tr>
<tr class="even">
<td>in_anglvel_x_calibbias</td>
<td>Calibration offset for the X-axis gyroscope channel.</td>
</tr>
<tr class="odd">
<td>in_anglvel_x_raw</td>
<td>Raw X-axis gyroscope channel value.</td>
</tr>
<tr class="even">
<td>in_anglvel_y_calibbias</td>
<td>Calibration offset for the Y-axis gyroscope channel.</td>
</tr>
<tr class="odd">
<td>in_anglvel_y_raw</td>
<td>Raw Y-axis gyroscope channel value.</td>
</tr>
<tr class="even">
<td>in_anglvel_z_calibbias</td>
<td>Calibration offset for the Z-axis gyroscope channel.</td>
</tr>
<tr class="odd">
<td>in_anglvel_z_raw</td>
<td>Raw Z-axis gyroscope channel value.</td>
</tr>
<tr class="even">
<td>3-Axis Magnetometer related device files</td>
<td>Description</td>
</tr>
<tr class="odd">
<td>in_magn_filter_low_pass_3db_frequency</td>
<td>Bandwidth for the magnetometer channels.</td>
</tr>
<tr class="even">
<td>in_magn_scale</td>
<td>Scale for the magnetometer channels.</td>
</tr>
<tr class="odd">
<td>in_magn_x_raw</td>
<td>Raw X-axis magnetometer channel value.</td>
</tr>
<tr class="even">
<td>in_magn_y_raw</td>
<td>Raw Y-axis magnetometer channel value.</td>
</tr>
<tr class="odd">
<td>in_magn_z_raw</td>
<td>Raw Z-axis magnetometer channel value.</td>
</tr>
<tr class="even">
<td>Barometric pressure sensor related files</td>
<td>Description</td>
</tr>
<tr class="odd">
<td>in_pressure_raw</td>
<td>Raw barometric pressure sensor channel value.</td>
</tr>
<tr class="even">
<td>in_pressure_scale</td>
<td>Scale for the barometric pressure sensor channel.</td>
</tr>
<tr class="odd">
<td>Temperature sensor related files</td>
<td>Description</td>
</tr>
<tr class="even">
<td>in_temp0_offset</td>
<td>Offset for temperature sensor channel.</td>
</tr>
<tr class="odd">
<td>in_temp0_raw</td>
<td>Raw temperature channel value.</td>
</tr>
<tr class="even">
<td>in_temp0_scale</td>
<td>Scale for the temperature sensor channel.</td>
</tr>
<tr class="odd">
<td>Power supply monitor related files</td>
<td>Description</td>
</tr>
<tr class="even">
<td>in_voltage0_supply_raw</td>
<td>Raw power supply monitor channel value.</td>
</tr>
<tr class="odd">
<td>in_voltage0_supply_scale</td>
<td>Scale for the power supply monitor channel.</td>
</tr>
<tr class="even">
<td>Auxiliary ADC related files</td>
<td>Description</td>
</tr>
<tr class="odd">
<td>in_voltage1_raw</td>
<td>Raw auxiliary ADC channel value.</td>
</tr>
<tr class="even">
<td>in_voltage1_scale</td>
<td>Scale for the auxiliary ADC channel.</td>
</tr>
<tr class="odd">
<td>Miscellaneous device files</td>
<td>Description</td>
</tr>
<tr class="even">
<td>name</td>
<td>Name of the IIO device.</td>
</tr>
<tr class="odd">
<td>sampling_frequency</td>
<td>Currently selected sample rate.</td>
</tr>
</tbody>
</table>

##### Show device name

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **cat name**
adis16400
```
:::


##### Set sampling frequency

The sampling frequency of the device can be set by writing the desired value to the `sampling_frequency` file. The driver will automatically round up to the nearest supported sampling frequency.

**Example:**
:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **cat sampling_frequency**
819.202
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **echo 546 > sampling_frequency**
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **cat sampling_frequency**
546.135
```
:::


##### Show channel value

A channel value can be read from its `_raw` attribute. The value returned by the `_raw` attribute is the raw value as reported by the device. To get the processed value of the channel in a standardized unit add the channels `_offset` attribute to the `_raw` value and multiply the result by `_scale` attribute. If no `_offset` attribute is present assume 0 for the offset.

`processed value = (raw + offset) * scale`

The units by the IIO framework are:

-   Acceleration: Meter per Second squared
-   Angular velocity: Rad per second
-   Pressure: kilo Pascal
-   Voltage: milli Volts
-   Temperature: milli-degree Celsius

**Example:**
:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **cat in_accel_z_raw**
1202
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **cat in_accel_scale**
0.008168
```
:::


`Z-axis acceleration = in_accel_z_raw * in_accel_scale = 1202 * 0.008168 m/s^2 = 9.81 m/s^2`

##### Set channel bandwidth

The channels bandwidth can be set by writing the desired value to the channels `_filter_low_pass_3db_frequency` attribute. The driver will automatically round up to the nearest supported bandwidth.

Note that all channels share the same low pass filter frequency so changing it for one channel will change it for all other channels as well. Also note that the low pass filter frequency depends on the sampling frequency, so changing the sampling frequency will scale the low pass filter frequency accordingly. E.g. reducing the sampling frequency by a factor of two will also reduce the bandwidth by a factor of two.

**Example:**
:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **cat in_anglvel_filter_low_pass_3db_frequency**
409.600000
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **echo 150 > in_anglvel_filter_low_pass_3db_frequency**
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **cat in_anglvel_filter_low_pass_3db_frequency**
163.840400
```
:::


#### Trigger management

:::{NOTE} <!-- ATTRS: round="" help="" -->

This driver only supports it's own default trigger source **adis16400-dev0**

:::


:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0> **cat trigger/current_trigger**
adis16400-dev0
```
:::


#### Buffer management

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0/buffer> **ls**
**enable** **length**
```
:::


<!-- CMDS: noheader firstseconly noeditbtn -->
```{include} software_linux_docs_iio_iio_snippets_SUB_Buffer_management.md
```

:::{NOTE} <!-- ATTRS: box="" bggreen="" -->
:::{HINT} <!-- ATTRS: info="" -->
This specifies any shell prompt running on the target
:::

```{code-block} bash
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0/scan_elements>**ls**
in_accel_x_en in_gyro_y_index in_magn_z_type
in_accel_x_index in_gyro_y_type in_temp0_en
in_accel_x_type in_gyro_z_en in_temp0_index
in_accel_y_en in_gyro_z_index in_temp0_type
in_accel_y_index in_gyro_z_type in_timestamp_en
in_accel_y_type in_magn_x_en in_timestamp_index
in_accel_z_en in_magn_x_index in_timestamp_type
in_accel_z_index in_magn_x_type in_voltage0_supply_en
in_accel_z_type in_magn_y_en in_voltage0_supply_index
in_gyro_x_en in_magn_y_index in_voltage0_supply_type
in_gyro_x_index in_magn_y_type in_voltage1_en
in_gyro_x_type in_magn_z_en in_voltage1_index
in_gyro_y_en in_magn_z_index in_voltage1_type
root:/sys/devices/platform/bfin-spi.0/spi0.1/iio:device0/scan_elements>
```
:::


<!-- CMDS: noheader firstseconly noeditbtn -->
```{include} software_linux_docs_iio_iio_snippets_SUB_Typical_ADC_scan_elements.md
```

### More Information

<!-- CMDS: noheader firstseconly noeditbtn -->
```{include} software_linux_docs_iio_iio_snippets_SUB_iio_pointers.md
```

#### IMU Evaluation Board User Guides

-   [ADIS1630X Evaluation on the EVAL-ADIS](/resources/eval/user-guides/inertial-mems/imu/adis1630x)
-   [ADIS16334 Evaluation on the EVAL-ADIS](/resources/eval/user-guides/inertial-mems/imu/adis16334)
-   [ADIS1636X Evaluation on the EVAL-ADIS](/resources/eval/user-guides/inertial-mems/imu/adis1636x)
-   [ADIS1644X Evaluation on the EVAL-ADIS](/resources/eval/user-guides/inertial-mems/imu/adis16448)
