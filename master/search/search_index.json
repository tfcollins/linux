{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Linux Documentation for the ADI Linux Kernel","title":"Home"},{"location":"#linux","text":"Documentation for the ADI Linux Kernel","title":"Linux"},{"location":"devs/ADI_AD5766/","text":"Analog Devices AD5766 DAC device driver Bindings for the Analog Devices AD5766 current DAC device. Datasheet can be found here: https://www.analog.com/media/en/technical-documentation/data-sheets/ad5766-5767.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad5766 adi,ad5767 output-range-microvolts yes Select converter output range. reg yes spi-max-frequency yes spi-cpol bool yes reset-gpios GPIO spec for the RESET pin. As the line is active low, it should be marked GPIO_ACTIVE_LOW. Examples spi { #address-cells = <1>; #size-cells = <0>; ad5766@0 { compatible = \"adi,ad5766\"; output-range-microvolts = <(-5000000) 5000000>; reg = <0>; spi-cpol; spi-max-frequency = <1000000>; reset-gpios = <&gpio 22 0>; }; };","title":"ADI AD5766"},{"location":"devs/ADI_AD5766/#analog-devices-ad5766-dac-device-driver","text":"Bindings for the Analog Devices AD5766 current DAC device. Datasheet can be found here: https://www.analog.com/media/en/technical-documentation/data-sheets/ad5766-5767.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad5766 adi,ad5767 output-range-microvolts yes Select converter output range. reg yes spi-max-frequency yes spi-cpol bool yes reset-gpios GPIO spec for the RESET pin. As the line is active low, it should be marked GPIO_ACTIVE_LOW. Examples spi { #address-cells = <1>; #size-cells = <0>; ad5766@0 { compatible = \"adi,ad5766\"; output-range-microvolts = <(-5000000) 5000000>; reg = <0>; spi-cpol; spi-max-frequency = <1000000>; reset-gpios = <&gpio 22 0>; }; };","title":"Analog Devices AD5766 DAC device driver"},{"location":"devs/ADI_AD5770R/","text":"Analog Devices AD5770R DAC device driver Bindings for the Analog Devices AD5770R current DAC device. Datasheet can be found here: https://www.analog.com/media/en/technical-documentation/data-sheets/AD5770R.pdf Properties Name Type Required Info compatible enum Options: adi,ad5770r reg yes avdd-supply AVdd voltage supply. Represents two different supplies in the datasheet that are in fact the same. iovdd-supply Voltage supply for the chip interface. vref-supply Specify the voltage of the external reference used. Available reference options are 1.25 V or 2.5 V. If no external reference declared then the device will use the internal reference of 1.25 V. adi,external-resistor boolean Specify if an external 2.5k ohm resistor is used. If not specified the device will use an internal 2.5k ohm resistor. The precision resistor is used for reference current generation. reset-gpios GPIO spec for the RESET pin. If specified, it will be asserted during driver probe. spi-max-frequency bool #address-cells #size-cells channel@0 object yes Represents an external channel which are connected to the DAC. Channel 0 can act both as a current source and sink. channel@1 object yes Represents an external channel which are connected to the DAC. channel@2 object yes Represents an external channel which are connected to the DAC. Examples spi { #address-cells = <1>; #size-cells = <0>; ad5770r@0 { compatible = \"adi,ad5770r\"; reg = <0>; spi-max-frequency = <1000000>; vref-supply = <&vref>; adi,external-resistor; reset-gpios = <&gpio 22 0>; #address-cells = <1>; #size-cells = <0>; channel@0 { reg = <0>; adi,range-microamp = <0 300000>; }; channel@1 { reg = <1>; adi,range-microamp = <0 140000>; }; channel@2 { reg = <2>; adi,range-microamp = <0 55000>; }; channel@3 { reg = <3>; adi,range-microamp = <0 45000>; }; channel@4 { reg = <4>; adi,range-microamp = <0 45000>; }; channel@5 { reg = <5>; adi,range-microamp = <0 45000>; }; }; };","title":"ADI AD5770R"},{"location":"devs/ADI_AD5770R/#analog-devices-ad5770r-dac-device-driver","text":"Bindings for the Analog Devices AD5770R current DAC device. Datasheet can be found here: https://www.analog.com/media/en/technical-documentation/data-sheets/AD5770R.pdf Properties Name Type Required Info compatible enum Options: adi,ad5770r reg yes avdd-supply AVdd voltage supply. Represents two different supplies in the datasheet that are in fact the same. iovdd-supply Voltage supply for the chip interface. vref-supply Specify the voltage of the external reference used. Available reference options are 1.25 V or 2.5 V. If no external reference declared then the device will use the internal reference of 1.25 V. adi,external-resistor boolean Specify if an external 2.5k ohm resistor is used. If not specified the device will use an internal 2.5k ohm resistor. The precision resistor is used for reference current generation. reset-gpios GPIO spec for the RESET pin. If specified, it will be asserted during driver probe. spi-max-frequency bool #address-cells #size-cells channel@0 object yes Represents an external channel which are connected to the DAC. Channel 0 can act both as a current source and sink. channel@1 object yes Represents an external channel which are connected to the DAC. channel@2 object yes Represents an external channel which are connected to the DAC. Examples spi { #address-cells = <1>; #size-cells = <0>; ad5770r@0 { compatible = \"adi,ad5770r\"; reg = <0>; spi-max-frequency = <1000000>; vref-supply = <&vref>; adi,external-resistor; reset-gpios = <&gpio 22 0>; #address-cells = <1>; #size-cells = <0>; channel@0 { reg = <0>; adi,range-microamp = <0 300000>; }; channel@1 { reg = <1>; adi,range-microamp = <0 140000>; }; channel@2 { reg = <2>; adi,range-microamp = <0 55000>; }; channel@3 { reg = <3>; adi,range-microamp = <0 45000>; }; channel@4 { reg = <4>; adi,range-microamp = <0 45000>; }; channel@5 { reg = <5>; adi,range-microamp = <0 45000>; }; }; };","title":"Analog Devices AD5770R DAC device driver"},{"location":"devs/ADI_AD7091R5/","text":"Analog Devices AD7091R5 4-Channel 12-Bit ADC Analog Devices AD7091R5 4-Channel 12-Bit ADC https://www.analog.com/media/en/technical-documentation/data-sheets/ad7091r-5.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7091r5 reg yes vref-supply Phandle to the vref power supply interrupts Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> i2c { #address-cells = <1>; #size-cells = <0>; adc@2f { compatible = \"adi,ad7091r5\"; reg = <0x2f>; interrupts = <25 IRQ_TYPE_EDGE_FALLING>; interrupt-parent = <&gpio>; }; };","title":"ADI AD7091R5"},{"location":"devs/ADI_AD7091R5/#analog-devices-ad7091r5-4-channel-12-bit-adc","text":"Analog Devices AD7091R5 4-Channel 12-Bit ADC https://www.analog.com/media/en/technical-documentation/data-sheets/ad7091r-5.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7091r5 reg yes vref-supply Phandle to the vref power supply interrupts Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> i2c { #address-cells = <1>; #size-cells = <0>; adc@2f { compatible = \"adi,ad7091r5\"; reg = <0x2f>; interrupts = <25 IRQ_TYPE_EDGE_FALLING>; interrupt-parent = <&gpio>; }; };","title":"Analog Devices AD7091R5 4-Channel 12-Bit ADC"},{"location":"devs/ADI_AD7124/","text":"Analog Devices AD7124 ADC device driver Bindings for the Analog Devices AD7124 ADC device. Datasheet can be found here: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7124-8.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7124-4 adi,ad7124-8 reg yes SPI chip select number for the device clocks yes phandle to the master clock (mclk) clock-names yes interrupts yes IRQ line for the ADC #address-cells #size-cells refin1-supply refin1 supply can be used as reference for conversion. refin2-supply refin2 supply can be used as reference for conversion. avdd-supply avdd supply can be used as reference for conversion. spi-max-frequency bool Examples spi { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7124-4\"; reg = <0>; spi-max-frequency = <5000000>; interrupts = <25 2>; interrupt-parent = <&gpio>; refin1-supply = <&adc_vref>; clocks = <&ad7124_mclk>; clock-names = \"mclk\"; #address-cells = <1>; #size-cells = <0>; channel@0 { reg = <0>; diff-channels = <0 1>; adi,reference-select = <0>; adi,buffered-positive; }; channel@1 { reg = <1>; bipolar; diff-channels = <2 3>; adi,reference-select = <0>; adi,buffered-positive; adi,buffered-negative; }; channel@2 { reg = <2>; diff-channels = <4 5>; }; channel@3 { reg = <3>; diff-channels = <6 7>; }; }; };","title":"ADI AD7124"},{"location":"devs/ADI_AD7124/#analog-devices-ad7124-adc-device-driver","text":"Bindings for the Analog Devices AD7124 ADC device. Datasheet can be found here: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7124-8.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7124-4 adi,ad7124-8 reg yes SPI chip select number for the device clocks yes phandle to the master clock (mclk) clock-names yes interrupts yes IRQ line for the ADC #address-cells #size-cells refin1-supply refin1 supply can be used as reference for conversion. refin2-supply refin2 supply can be used as reference for conversion. avdd-supply avdd supply can be used as reference for conversion. spi-max-frequency bool Examples spi { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7124-4\"; reg = <0>; spi-max-frequency = <5000000>; interrupts = <25 2>; interrupt-parent = <&gpio>; refin1-supply = <&adc_vref>; clocks = <&ad7124_mclk>; clock-names = \"mclk\"; #address-cells = <1>; #size-cells = <0>; channel@0 { reg = <0>; diff-channels = <0 1>; adi,reference-select = <0>; adi,buffered-positive; }; channel@1 { reg = <1>; bipolar; diff-channels = <2 3>; adi,reference-select = <0>; adi,buffered-positive; adi,buffered-negative; }; channel@2 { reg = <2>; diff-channels = <4 5>; }; channel@3 { reg = <3>; diff-channels = <6 7>; }; }; };","title":"Analog Devices AD7124 ADC device driver"},{"location":"devs/ADI_AD7192/","text":"Analog Devices AD7192 ADC device driver Bindings for the Analog Devices AD7192 ADC device. Datasheet can be found here: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7192.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7190 adi,ad7192 adi,ad7193 adi,ad7195 reg yes spi-cpol bool yes spi-cpha bool yes spi-max-frequency bool clocks yes phandle to the master clock (mclk) clock-names yes interrupts yes dvdd-supply yes DVdd voltage supply avdd-supply yes AVdd voltage supply adi,rejection-60-Hz-enable boolean This bit enables a notch at 60 Hz when the first notch of the sinc filter is at 50 Hz. When REJ60 is set, a filter notch is placed at 60 Hz when the sinc filter first notch is at 50 Hz. This allows simultaneous 50 Hz/ 60 Hz rejection. adi,refin2-pins-enable boolean External reference applied between the P1/REFIN2(+) and P0/REFIN2(\u2212) pins. adi,buffer-enable boolean Enables the buffer on the analog inputs. If cleared, the analog inputs are unbuffered, lowering the power consumption of the device. If this bit is set, the analog inputs are buffered, allowing the user to place source impedances on the front end without contributing gain errors to the system. adi,burnout-currents-enable boolean When this bit is set to 1, the 500 nA current sources in the signal path are enabled. When BURN = 0, the burnout currents are disabled. The burnout currents can be enabled only when the buffer is active and when chop is disabled. bipolar boolean see Documentation/devicetree/bindings/iio/adc/adc.txt Examples spi0 { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7192\"; reg = <0>; spi-max-frequency = <1000000>; spi-cpol; spi-cpha; clocks = <&ad7192_mclk>; clock-names = \"mclk\"; interrupts = <25 0x2>; interrupt-parent = <&gpio>; dvdd-supply = <&dvdd>; avdd-supply = <&avdd>; adi,refin2-pins-enable; adi,rejection-60-Hz-enable; adi,buffer-enable; adi,burnout-currents-enable; }; };","title":"ADI AD7192"},{"location":"devs/ADI_AD7192/#analog-devices-ad7192-adc-device-driver","text":"Bindings for the Analog Devices AD7192 ADC device. Datasheet can be found here: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7192.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7190 adi,ad7192 adi,ad7193 adi,ad7195 reg yes spi-cpol bool yes spi-cpha bool yes spi-max-frequency bool clocks yes phandle to the master clock (mclk) clock-names yes interrupts yes dvdd-supply yes DVdd voltage supply avdd-supply yes AVdd voltage supply adi,rejection-60-Hz-enable boolean This bit enables a notch at 60 Hz when the first notch of the sinc filter is at 50 Hz. When REJ60 is set, a filter notch is placed at 60 Hz when the sinc filter first notch is at 50 Hz. This allows simultaneous 50 Hz/ 60 Hz rejection. adi,refin2-pins-enable boolean External reference applied between the P1/REFIN2(+) and P0/REFIN2(\u2212) pins. adi,buffer-enable boolean Enables the buffer on the analog inputs. If cleared, the analog inputs are unbuffered, lowering the power consumption of the device. If this bit is set, the analog inputs are buffered, allowing the user to place source impedances on the front end without contributing gain errors to the system. adi,burnout-currents-enable boolean When this bit is set to 1, the 500 nA current sources in the signal path are enabled. When BURN = 0, the burnout currents are disabled. The burnout currents can be enabled only when the buffer is active and when chop is disabled. bipolar boolean see Documentation/devicetree/bindings/iio/adc/adc.txt Examples spi0 { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7192\"; reg = <0>; spi-max-frequency = <1000000>; spi-cpol; spi-cpha; clocks = <&ad7192_mclk>; clock-names = \"mclk\"; interrupts = <25 0x2>; interrupt-parent = <&gpio>; dvdd-supply = <&dvdd>; avdd-supply = <&avdd>; adi,refin2-pins-enable; adi,rejection-60-Hz-enable; adi,buffer-enable; adi,burnout-currents-enable; }; };","title":"Analog Devices AD7192 ADC device driver"},{"location":"devs/ADI_AD7291/","text":"AD7291 8-Channel, I2C, 12-Bit SAR ADC with Temperature Sensor Analog Devices AD7291 8-Channel I2C 12-Bit SAR ADC with Temperature Sensor https://www.analog.com/media/en/technical-documentation/data-sheets/ad7291.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7291 reg yes vref-supply The regulator supply for ADC reference voltage. Examples i2c { #address-cells = <1>; #size-cells = <0>; ad7291 : adc@0 { compatible = \"adi,ad7291\"; reg = <0>; vref-supply = <&adc_vref>; }; } ;","title":"ADI AD7291"},{"location":"devs/ADI_AD7291/#ad7291-8-channel-i2c-12-bit-sar-adc-with-temperature-sensor","text":"Analog Devices AD7291 8-Channel I2C 12-Bit SAR ADC with Temperature Sensor https://www.analog.com/media/en/technical-documentation/data-sheets/ad7291.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7291 reg yes vref-supply The regulator supply for ADC reference voltage. Examples i2c { #address-cells = <1>; #size-cells = <0>; ad7291 : adc@0 { compatible = \"adi,ad7291\"; reg = <0>; vref-supply = <&adc_vref>; }; } ;","title":"AD7291 8-Channel, I2C, 12-Bit SAR ADC with Temperature Sensor"},{"location":"devs/ADI_AD7292/","text":"Analog Devices AD7292 10-Bit Monitor and Control System Analog Devices AD7292 10-Bit Monitor and Control System with ADC, DACs, Temperature Sensor, and GPIOs Specifications about the part can be found at: https://www.analog.com/media/en/technical-documentation/data-sheets/ad7292.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7292 reg yes vref-supply The regulator supply for ADC and DAC reference voltage. spi-cpha bool yes spi-max-frequency bool #address-cells #size-cells Examples spi { #address-cells = <1>; #size-cells = <0>; ad7292 : adc@0 { compatible = \"adi,ad7292\"; reg = <0>; spi-max-frequency = <25000000>; vref-supply = <&adc_vref>; spi-cpha; #address-cells = <1>; #size-cells = <0>; channel@0 { reg = <0>; diff-channels = <0 1>; }; channel@2 { reg = <2>; }; channel@3 { reg = <3>; }; channel@4 { reg = <4>; }; channel@5 { reg = <5>; }; channel@6 { reg = <6>; }; channel@7 { reg = <7>; }; }; } ;","title":"ADI AD7292"},{"location":"devs/ADI_AD7292/#analog-devices-ad7292-10-bit-monitor-and-control-system","text":"Analog Devices AD7292 10-Bit Monitor and Control System with ADC, DACs, Temperature Sensor, and GPIOs Specifications about the part can be found at: https://www.analog.com/media/en/technical-documentation/data-sheets/ad7292.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7292 reg yes vref-supply The regulator supply for ADC and DAC reference voltage. spi-cpha bool yes spi-max-frequency bool #address-cells #size-cells Examples spi { #address-cells = <1>; #size-cells = <0>; ad7292 : adc@0 { compatible = \"adi,ad7292\"; reg = <0>; spi-max-frequency = <25000000>; vref-supply = <&adc_vref>; spi-cpha; #address-cells = <1>; #size-cells = <0>; channel@0 { reg = <0>; diff-channels = <0 1>; }; channel@2 { reg = <2>; }; channel@3 { reg = <3>; }; channel@4 { reg = <4>; }; channel@5 { reg = <5>; }; channel@6 { reg = <6>; }; channel@7 { reg = <7>; }; }; } ;","title":"Analog Devices AD7292 10-Bit Monitor and Control System"},{"location":"devs/ADI_AD7606/","text":"Analog Devices AD7606 Simultaneous Sampling ADC Analog Devices AD7606 Simultaneous Sampling ADC https://www.analog.com/media/en/technical-documentation/data-sheets/ad7606_7606-6_7606-4.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD7606B.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD7616.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7605-4 adi,ad7606-8 adi,ad7606-6 adi,ad7606-4 adi,ad7606b adi,ad7616 reg yes spi-cpha bool yes spi-cpol bool spi-max-frequency bool avcc-supply bool yes interrupts yes adi,conversion-start-gpios yes Must be the device tree identifier of the CONVST pin. This logic input is used to initiate conversions on the analog input channels. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. reset-gpios Must be the device tree identifier of the RESET pin. If specified, it will be asserted during driver probe. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. standby-gpios Must be the device tree identifier of the STBY pin. This pin is used to place the AD7606 into one of two power-down modes, Standby mode or Shutdown mode. As the line is active low, it should be marked GPIO_ACTIVE_LOW. adi,first-data-gpios Must be the device tree identifier of the FRSTDATA pin. The FRSTDATA output indicates when the first channel, V1, is being read back on either the parallel, byte or serial interface. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. adi,range-gpios Must be the device tree identifier of the RANGE pin. The polarity on this pin determines the input range of the analog input channels. If this pin is tied to a logic high, the analog input range is \u00b110V for all channels. If this pin is tied to a logic low, the analog input range is \u00b15V for all channels. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. adi,oversampling-ratio-gpios Must be the device tree identifier of the over-sampling mode pins. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. adi,sw-mode boolean Software mode of operation, so far available only for ad7616 and ad7606b. It is enabled when all three oversampling mode pins are connected to high level. The device is configured by the corresponding registers. If the adi,oversampling-ratio-gpios property is defined, then the driver will set the oversampling gpios to high. Otherwise, it is assumed that the pins are hardwired to VDD. Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi0 { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7606-8\"; reg = <0>; spi-max-frequency = <1000000>; spi-cpol; spi-cpha; avcc-supply = <&adc_vref>; interrupts = <25 IRQ_TYPE_EDGE_FALLING>; interrupt-parent = <&gpio>; adi,conversion-start-gpios = <&gpio 17 GPIO_ACTIVE_HIGH>; reset-gpios = <&gpio 27 GPIO_ACTIVE_HIGH>; adi,first-data-gpios = <&gpio 22 GPIO_ACTIVE_HIGH>; adi,oversampling-ratio-gpios = <&gpio 18 GPIO_ACTIVE_HIGH>, <&gpio 23 GPIO_ACTIVE_HIGH>, <&gpio 26 GPIO_ACTIVE_HIGH>; standby-gpios = <&gpio 24 GPIO_ACTIVE_LOW>; adi,sw-mode; }; }; Properties Name Type Required Info <tr> <td>compatible</td> <td>enum</td> <td>yes</td> <td>Options: <span class='enum-dt'>&nbspadi,ad7605-4&nbsp</span> <span class='enum-dt'>&nbspadi,ad7606-8&nbsp</span> <span class='enum-dt'>&nbspadi,ad7606-6&nbsp</span> <span class='enum-dt'>&nbspadi,ad7606-4&nbsp</span> <span class='enum-dt'>&nbspadi,ad7606b&nbsp</span> <span class='enum-dt'>&nbspadi,ad7616&nbsp</span> </td> </tr> <tr> <td>reg</td> <td></td> <td>yes</td> <td></td> </tr> <tr> <td>spi-cpha</td> <td>bool</td> <td>yes</td> <td></td> </tr> <tr> <td>spi-cpol</td> <td>bool</td> <td></td> <td></td> </tr> <tr> <td>spi-max-frequency</td> <td>bool</td> <td></td> <td></td> </tr> <tr> <td>avcc-supply</td> <td>bool</td> <td>yes</td> <td></td> </tr> <tr> <td>interrupts</td> <td></td> <td>yes</td> <td></td> </tr> <tr> <td>adi,conversion-start-gpios</td> <td></td> <td>yes</td> <td>Must be the device tree identifier of the CONVST pin. This logic input is used to initiate conversions on the analog input channels. As the line is active high, it should be marked GPIO_ACTIVE_HIGH.</td> </tr> <tr> <td>reset-gpios</td> <td></td> <td></td> <td>Must be the device tree identifier of the RESET pin. If specified, it will be asserted during driver probe. As the line is active high, it should be marked GPIO_ACTIVE_HIGH.</td> </tr> <tr> <td>standby-gpios</td> <td></td> <td></td> <td>Must be the device tree identifier of the STBY pin. This pin is used to place the AD7606 into one of two power-down modes, Standby mode or Shutdown mode. As the line is active low, it should be marked GPIO_ACTIVE_LOW.</td> </tr> <tr> <td>adi,first-data-gpios</td> <td></td> <td></td> <td>Must be the device tree identifier of the FRSTDATA pin. The FRSTDATA output indicates when the first channel, V1, is being read back on either the parallel, byte or serial interface. As the line is active high, it should be marked GPIO_ACTIVE_HIGH.</td> </tr> <tr> <td>adi,range-gpios</td> <td></td> <td></td> <td>Must be the device tree identifier of the RANGE pin. The polarity on this pin determines the input range of the analog input channels. If this pin is tied to a logic high, the analog input range is \u00b110V for all channels. If this pin is tied to a logic low, the analog input range is \u00b15V for all channels. As the line is active high, it should be marked GPIO_ACTIVE_HIGH.</td> </tr> <tr> <td>adi,oversampling-ratio-gpios</td> <td></td> <td></td> <td>Must be the device tree identifier of the over-sampling mode pins. As the line is active high, it should be marked GPIO_ACTIVE_HIGH.</td> </tr> <tr> <td>adi,sw-mode</td> <td>boolean</td> <td></td> <td>Software mode of operation, so far available only for ad7616 and ad7606b. It is enabled when all three oversampling mode pins are connected to high level. The device is configured by the corresponding registers. If the adi,oversampling-ratio-gpios property is defined, then the driver will set the oversampling gpios to high. Otherwise, it is assumed that the pins are hardwired to VDD.</td> </tr> Examples Example sysfs root:/> cd /sys/bus/iio/devices/ root:/sys/bus/iio/devices> ls iio:device4 iio:trigger0 root:/sys/bus/iio/devices> cd iio:device4 root:/sys/bus/iio/devices/iio:device4> ls -l drwxr-xr-x 2 root root 0 Jan 1 00 :00 buffer -r--r--r-- 1 root root 4096 Jan 1 00 :00 dev -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage0_calibbias -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage0_calibphase -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage0_calibscale -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage0_filter_high_pass_3db_frequency -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage0_test_mode -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage1_calibbias -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage1_calibphase -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage1_calibscale -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage1_filter_high_pass_3db_frequency -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage1_test_mode -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage_sampling_frequency -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage_scale -r--r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage_scale_available -r--r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage_test_mode_available -r--r--r-- 1 root root 4096 Jan 1 00 :00 name drwxr-xr-x 2 root root 0 Jan 1 00 :00 scan_elements lrwxrwxrwx 1 root root 0 Jan 1 00 :00 subsystem -> ../../../../bus/iio -rw-r--r-- 1 root root 4096 Jan 1 00 :00 uevent root:/sys/bus/iio/devices/iio:device4> libiio API ad9361-phy This is a device DEVICE ATTRIBUTES : ad9361-phy calib_mode str Set calibration mode calib_mode_available str NA dcxo_tune_coarse str NA dcxo_tune_coarse_available str NA dcxo_tune_fine str NA dcxo_tune_fine_available str NA ensm_mode str NA ensm_mode_available str NA filter_fir_config str NA gain_table_config str NA multichip_sync str NA rssi_gain_step_error str NA rx_path_rates str NA trx_rate_governor str NA trx_rate_governor_available str NA tx_path_rates str NA xo_correction str NA xo_correction_available str NA CHANNEL ATTRIBUTES : ad9361-phy external str altvoltage1, altvoltage0 NA fastlock_load str altvoltage1, altvoltage0 NA fastlock_recall str altvoltage1, altvoltage0 NA fastlock_save str altvoltage1, altvoltage0 NA fastlock_store str altvoltage1, altvoltage0 NA frequency str altvoltage1, altvoltage0 NA frequency_available str altvoltage1, altvoltage0 NA powerdown str altvoltage1, altvoltage0 NA bb_dc_offset_tracking_en str voltage0, voltage2 NA filter_fir_en str voltage0, voltage3, voltage2, voltage0, voltage2 NA gain_control_mode str voltage0 NA gain_control_mode_available str voltage0, voltage2 NA hardwaregain str voltage0, voltage0 NA hardwaregain_available str voltage0, voltage0 NA quadrature_tracking_en str voltage0, voltage2 NA rf_bandwidth str voltage0, voltage3, voltage2, voltage0, voltage2 NA rf_bandwidth_available str voltage0, voltage3, voltage2, voltage0, voltage2 NA rf_dc_offset_tracking_en str voltage0, voltage2 NA rf_port_select str voltage0, voltage0 NA rf_port_select_available str voltage0, voltage3, voltage2, voltage0, voltage2 NA rssi str voltage0, voltage0 NA sampling_frequency str voltage0, voltage3, voltage2, voltage0, voltage2 NA sampling_frequency_available str voltage0, voltage3, voltage2, voltage0, voltage2 NA raw str voltage3, voltage2, voltage2 NA scale str voltage3, voltage2, voltage2 NA input str temp0 NA offset str voltage2 NA voltage_filter_fir_en str out NA xadc This is a device DEVICE ATTRIBUTES : xadc sampling_frequency str NA CHANNEL ATTRIBUTES : xadc raw str voltage5, voltage0, voltage4, temp0, voltage7, voltage1, voltage2, voltage3, voltage8, voltage6 NA scale str voltage5, voltage0, voltage4, temp0, voltage7, voltage1, voltage2, voltage3, voltage8, voltage6 NA offset str temp0 NA CHANNEL ATTRIBUTES : cf-ad9361-dds-core-lpc calibphase str voltage0, voltage1 NA calibscale str voltage0, voltage1 NA sampling_frequency str voltage0, voltage1, altvoltage3, altvoltage1, altvoltage0, altvoltage2 NA sampling_frequency_available str voltage0, voltage1 NA frequency str altvoltage3, altvoltage1, altvoltage0, altvoltage2 NA phase str altvoltage3, altvoltage1, altvoltage0, altvoltage2 NA raw str altvoltage3, altvoltage1, altvoltage0, altvoltage2 NA scale str altvoltage3, altvoltage1, altvoltage0, altvoltage2 NA CHANNEL ATTRIBUTES : cf-ad9361-lpc calibbias str voltage0, voltage1 NA calibphase str voltage0, voltage1 NA calibscale str voltage0, voltage1 NA samples_pps str voltage0, voltage1 NA sampling_frequency str voltage0, voltage1 NA sampling_frequency_available str voltage0, voltage1 NA","title":"ADI AD7606"},{"location":"devs/ADI_AD7606/#analog-devices-ad7606-simultaneous-sampling-adc","text":"Analog Devices AD7606 Simultaneous Sampling ADC https://www.analog.com/media/en/technical-documentation/data-sheets/ad7606_7606-6_7606-4.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD7606B.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD7616.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7605-4 adi,ad7606-8 adi,ad7606-6 adi,ad7606-4 adi,ad7606b adi,ad7616 reg yes spi-cpha bool yes spi-cpol bool spi-max-frequency bool avcc-supply bool yes interrupts yes adi,conversion-start-gpios yes Must be the device tree identifier of the CONVST pin. This logic input is used to initiate conversions on the analog input channels. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. reset-gpios Must be the device tree identifier of the RESET pin. If specified, it will be asserted during driver probe. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. standby-gpios Must be the device tree identifier of the STBY pin. This pin is used to place the AD7606 into one of two power-down modes, Standby mode or Shutdown mode. As the line is active low, it should be marked GPIO_ACTIVE_LOW. adi,first-data-gpios Must be the device tree identifier of the FRSTDATA pin. The FRSTDATA output indicates when the first channel, V1, is being read back on either the parallel, byte or serial interface. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. adi,range-gpios Must be the device tree identifier of the RANGE pin. The polarity on this pin determines the input range of the analog input channels. If this pin is tied to a logic high, the analog input range is \u00b110V for all channels. If this pin is tied to a logic low, the analog input range is \u00b15V for all channels. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. adi,oversampling-ratio-gpios Must be the device tree identifier of the over-sampling mode pins. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. adi,sw-mode boolean Software mode of operation, so far available only for ad7616 and ad7606b. It is enabled when all three oversampling mode pins are connected to high level. The device is configured by the corresponding registers. If the adi,oversampling-ratio-gpios property is defined, then the driver will set the oversampling gpios to high. Otherwise, it is assumed that the pins are hardwired to VDD. Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi0 { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7606-8\"; reg = <0>; spi-max-frequency = <1000000>; spi-cpol; spi-cpha; avcc-supply = <&adc_vref>; interrupts = <25 IRQ_TYPE_EDGE_FALLING>; interrupt-parent = <&gpio>; adi,conversion-start-gpios = <&gpio 17 GPIO_ACTIVE_HIGH>; reset-gpios = <&gpio 27 GPIO_ACTIVE_HIGH>; adi,first-data-gpios = <&gpio 22 GPIO_ACTIVE_HIGH>; adi,oversampling-ratio-gpios = <&gpio 18 GPIO_ACTIVE_HIGH>, <&gpio 23 GPIO_ACTIVE_HIGH>, <&gpio 26 GPIO_ACTIVE_HIGH>; standby-gpios = <&gpio 24 GPIO_ACTIVE_LOW>; adi,sw-mode; }; }; Properties Name Type Required Info <tr> <td>compatible</td> <td>enum</td> <td>yes</td> <td>Options: <span class='enum-dt'>&nbspadi,ad7605-4&nbsp</span> <span class='enum-dt'>&nbspadi,ad7606-8&nbsp</span> <span class='enum-dt'>&nbspadi,ad7606-6&nbsp</span> <span class='enum-dt'>&nbspadi,ad7606-4&nbsp</span> <span class='enum-dt'>&nbspadi,ad7606b&nbsp</span> <span class='enum-dt'>&nbspadi,ad7616&nbsp</span> </td> </tr> <tr> <td>reg</td> <td></td> <td>yes</td> <td></td> </tr> <tr> <td>spi-cpha</td> <td>bool</td> <td>yes</td> <td></td> </tr> <tr> <td>spi-cpol</td> <td>bool</td> <td></td> <td></td> </tr> <tr> <td>spi-max-frequency</td> <td>bool</td> <td></td> <td></td> </tr> <tr> <td>avcc-supply</td> <td>bool</td> <td>yes</td> <td></td> </tr> <tr> <td>interrupts</td> <td></td> <td>yes</td> <td></td> </tr> <tr> <td>adi,conversion-start-gpios</td> <td></td> <td>yes</td> <td>Must be the device tree identifier of the CONVST pin. This logic input is used to initiate conversions on the analog input channels. As the line is active high, it should be marked GPIO_ACTIVE_HIGH.</td> </tr> <tr> <td>reset-gpios</td> <td></td> <td></td> <td>Must be the device tree identifier of the RESET pin. If specified, it will be asserted during driver probe. As the line is active high, it should be marked GPIO_ACTIVE_HIGH.</td> </tr> <tr> <td>standby-gpios</td> <td></td> <td></td> <td>Must be the device tree identifier of the STBY pin. This pin is used to place the AD7606 into one of two power-down modes, Standby mode or Shutdown mode. As the line is active low, it should be marked GPIO_ACTIVE_LOW.</td> </tr> <tr> <td>adi,first-data-gpios</td> <td></td> <td></td> <td>Must be the device tree identifier of the FRSTDATA pin. The FRSTDATA output indicates when the first channel, V1, is being read back on either the parallel, byte or serial interface. As the line is active high, it should be marked GPIO_ACTIVE_HIGH.</td> </tr> <tr> <td>adi,range-gpios</td> <td></td> <td></td> <td>Must be the device tree identifier of the RANGE pin. The polarity on this pin determines the input range of the analog input channels. If this pin is tied to a logic high, the analog input range is \u00b110V for all channels. If this pin is tied to a logic low, the analog input range is \u00b15V for all channels. As the line is active high, it should be marked GPIO_ACTIVE_HIGH.</td> </tr> <tr> <td>adi,oversampling-ratio-gpios</td> <td></td> <td></td> <td>Must be the device tree identifier of the over-sampling mode pins. As the line is active high, it should be marked GPIO_ACTIVE_HIGH.</td> </tr> <tr> <td>adi,sw-mode</td> <td>boolean</td> <td></td> <td>Software mode of operation, so far available only for ad7616 and ad7606b. It is enabled when all three oversampling mode pins are connected to high level. The device is configured by the corresponding registers. If the adi,oversampling-ratio-gpios property is defined, then the driver will set the oversampling gpios to high. Otherwise, it is assumed that the pins are hardwired to VDD.</td> </tr> Examples Example sysfs root:/> cd /sys/bus/iio/devices/ root:/sys/bus/iio/devices> ls iio:device4 iio:trigger0 root:/sys/bus/iio/devices> cd iio:device4 root:/sys/bus/iio/devices/iio:device4> ls -l drwxr-xr-x 2 root root 0 Jan 1 00 :00 buffer -r--r--r-- 1 root root 4096 Jan 1 00 :00 dev -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage0_calibbias -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage0_calibphase -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage0_calibscale -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage0_filter_high_pass_3db_frequency -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage0_test_mode -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage1_calibbias -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage1_calibphase -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage1_calibscale -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage1_filter_high_pass_3db_frequency -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage1_test_mode -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage_sampling_frequency -rw-r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage_scale -r--r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage_scale_available -r--r--r-- 1 root root 4096 Jan 1 00 :00 in_voltage_test_mode_available -r--r--r-- 1 root root 4096 Jan 1 00 :00 name drwxr-xr-x 2 root root 0 Jan 1 00 :00 scan_elements lrwxrwxrwx 1 root root 0 Jan 1 00 :00 subsystem -> ../../../../bus/iio -rw-r--r-- 1 root root 4096 Jan 1 00 :00 uevent root:/sys/bus/iio/devices/iio:device4> libiio API ad9361-phy This is a device DEVICE ATTRIBUTES : ad9361-phy calib_mode str Set calibration mode calib_mode_available str NA dcxo_tune_coarse str NA dcxo_tune_coarse_available str NA dcxo_tune_fine str NA dcxo_tune_fine_available str NA ensm_mode str NA ensm_mode_available str NA filter_fir_config str NA gain_table_config str NA multichip_sync str NA rssi_gain_step_error str NA rx_path_rates str NA trx_rate_governor str NA trx_rate_governor_available str NA tx_path_rates str NA xo_correction str NA xo_correction_available str NA CHANNEL ATTRIBUTES : ad9361-phy external str altvoltage1, altvoltage0 NA fastlock_load str altvoltage1, altvoltage0 NA fastlock_recall str altvoltage1, altvoltage0 NA fastlock_save str altvoltage1, altvoltage0 NA fastlock_store str altvoltage1, altvoltage0 NA frequency str altvoltage1, altvoltage0 NA frequency_available str altvoltage1, altvoltage0 NA powerdown str altvoltage1, altvoltage0 NA bb_dc_offset_tracking_en str voltage0, voltage2 NA filter_fir_en str voltage0, voltage3, voltage2, voltage0, voltage2 NA gain_control_mode str voltage0 NA gain_control_mode_available str voltage0, voltage2 NA hardwaregain str voltage0, voltage0 NA hardwaregain_available str voltage0, voltage0 NA quadrature_tracking_en str voltage0, voltage2 NA rf_bandwidth str voltage0, voltage3, voltage2, voltage0, voltage2 NA rf_bandwidth_available str voltage0, voltage3, voltage2, voltage0, voltage2 NA rf_dc_offset_tracking_en str voltage0, voltage2 NA rf_port_select str voltage0, voltage0 NA rf_port_select_available str voltage0, voltage3, voltage2, voltage0, voltage2 NA rssi str voltage0, voltage0 NA sampling_frequency str voltage0, voltage3, voltage2, voltage0, voltage2 NA sampling_frequency_available str voltage0, voltage3, voltage2, voltage0, voltage2 NA raw str voltage3, voltage2, voltage2 NA scale str voltage3, voltage2, voltage2 NA input str temp0 NA offset str voltage2 NA voltage_filter_fir_en str out NA xadc This is a device DEVICE ATTRIBUTES : xadc sampling_frequency str NA CHANNEL ATTRIBUTES : xadc raw str voltage5, voltage0, voltage4, temp0, voltage7, voltage1, voltage2, voltage3, voltage8, voltage6 NA scale str voltage5, voltage0, voltage4, temp0, voltage7, voltage1, voltage2, voltage3, voltage8, voltage6 NA offset str temp0 NA CHANNEL ATTRIBUTES : cf-ad9361-dds-core-lpc calibphase str voltage0, voltage1 NA calibscale str voltage0, voltage1 NA sampling_frequency str voltage0, voltage1, altvoltage3, altvoltage1, altvoltage0, altvoltage2 NA sampling_frequency_available str voltage0, voltage1 NA frequency str altvoltage3, altvoltage1, altvoltage0, altvoltage2 NA phase str altvoltage3, altvoltage1, altvoltage0, altvoltage2 NA raw str altvoltage3, altvoltage1, altvoltage0, altvoltage2 NA scale str altvoltage3, altvoltage1, altvoltage0, altvoltage2 NA CHANNEL ATTRIBUTES : cf-ad9361-lpc calibbias str voltage0, voltage1 NA calibphase str voltage0, voltage1 NA calibscale str voltage0, voltage1 NA samples_pps str voltage0, voltage1 NA sampling_frequency str voltage0, voltage1 NA sampling_frequency_available str voltage0, voltage1 NA","title":"Analog Devices AD7606 Simultaneous Sampling ADC"},{"location":"devs/ADI_AD7768-1/","text":"Analog Devices AD7768-1 ADC device driver Datasheet at: https://www.analog.com/media/en/technical-documentation/data-sheets/ad7768-1.pdf Properties Name Type Required Info compatible yes reg yes clocks yes clock-names yes interrupts vref-supply yes ADC reference voltage supply adi,sync-in-gpios yes Enables synchronization of multiple devices that require simultaneous sampling. A pulse is always required if the configuration is changed in any way, for example if the filter decimation rate changes. As the line is active low, it should be marked GPIO_ACTIVE_LOW. reset-gpios spi-max-frequency bool spi-cpol bool yes spi-cpha bool yes #io-channel-cells Examples #include <dt-bindings/interrupt-controller/irq.h> #include <dt-bindings/gpio/gpio.h> spi { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7768-1\"; reg = <0>; spi-max-frequency = <2000000>; spi-cpol; spi-cpha; vref-supply = <&adc_vref>; interrupts = <25 IRQ_TYPE_EDGE_RISING>; interrupt-parent = <&gpio>; adi,sync-in-gpios = <&gpio 22 GPIO_ACTIVE_LOW>; reset-gpios = <&gpio 27 GPIO_ACTIVE_LOW>; clocks = <&ad7768_mclk>; clock-names = \"mclk\"; }; };","title":"ADI AD7768 1"},{"location":"devs/ADI_AD7768-1/#analog-devices-ad7768-1-adc-device-driver","text":"Datasheet at: https://www.analog.com/media/en/technical-documentation/data-sheets/ad7768-1.pdf Properties Name Type Required Info compatible yes reg yes clocks yes clock-names yes interrupts vref-supply yes ADC reference voltage supply adi,sync-in-gpios yes Enables synchronization of multiple devices that require simultaneous sampling. A pulse is always required if the configuration is changed in any way, for example if the filter decimation rate changes. As the line is active low, it should be marked GPIO_ACTIVE_LOW. reset-gpios spi-max-frequency bool spi-cpol bool yes spi-cpha bool yes #io-channel-cells Examples #include <dt-bindings/interrupt-controller/irq.h> #include <dt-bindings/gpio/gpio.h> spi { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7768-1\"; reg = <0>; spi-max-frequency = <2000000>; spi-cpol; spi-cpha; vref-supply = <&adc_vref>; interrupts = <25 IRQ_TYPE_EDGE_RISING>; interrupt-parent = <&gpio>; adi,sync-in-gpios = <&gpio 22 GPIO_ACTIVE_LOW>; reset-gpios = <&gpio 27 GPIO_ACTIVE_LOW>; clocks = <&ad7768_mclk>; clock-names = \"mclk\"; }; };","title":"Analog Devices AD7768-1 ADC device driver"},{"location":"devs/ADI_AD7780/","text":"Analog Devices AD7170/AD7171/AD7780/AD7781 analog to digital converters The ad7780 is a sigma-delta analog to digital converter. This driver provides reading voltage values and status bits from both the ad778x and ad717x series. Its interface also allows writing on the FILTER and GAIN GPIO pins on the ad778x. Specifications on the converters can be found at: AD7170: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7170.pdf AD7171: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7171.pdf AD7780: https://www.analog.com/media/en/technical-documentation/data-sheets/ad7780.pdf AD7781: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7781.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7170 adi,ad7171 adi,ad7780 adi,ad7781 reg yes avdd-supply The regulator supply for the ADC reference voltage. powerdown-gpios Must be the device tree identifier of the PDRST pin. If specified, it will be asserted during driver probe. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. adi,gain-gpios Must be the device tree identifier of the GAIN pin. Only for the ad778x chips. If specified, it will be asserted during driver probe. As the line is active low, it should be marked GPIO_ACTIVE_LOW. adi,filter-gpios Must be the device tree identifier of the FILTER pin. Only for the ad778x chips. If specified, it will be asserted during driver probe. As the line is active low, it should be marked GPIO_ACTIVE_LOW. Examples #include <dt-bindings/gpio/gpio.h> spi0 { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7780\"; reg = <0>; avdd-supply = <&vdd_supply>; powerdown-gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>; adi,gain-gpios = <&gpio1 5 GPIO_ACTIVE_LOW>; adi,filter-gpios = <&gpio2 15 GPIO_ACTIVE_LOW>; }; };","title":"ADI AD7780"},{"location":"devs/ADI_AD7780/#analog-devices-ad7170ad7171ad7780ad7781-analog-to-digital-converters","text":"The ad7780 is a sigma-delta analog to digital converter. This driver provides reading voltage values and status bits from both the ad778x and ad717x series. Its interface also allows writing on the FILTER and GAIN GPIO pins on the ad778x. Specifications on the converters can be found at: AD7170: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7170.pdf AD7171: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7171.pdf AD7780: https://www.analog.com/media/en/technical-documentation/data-sheets/ad7780.pdf AD7781: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7781.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7170 adi,ad7171 adi,ad7780 adi,ad7781 reg yes avdd-supply The regulator supply for the ADC reference voltage. powerdown-gpios Must be the device tree identifier of the PDRST pin. If specified, it will be asserted during driver probe. As the line is active high, it should be marked GPIO_ACTIVE_HIGH. adi,gain-gpios Must be the device tree identifier of the GAIN pin. Only for the ad778x chips. If specified, it will be asserted during driver probe. As the line is active low, it should be marked GPIO_ACTIVE_LOW. adi,filter-gpios Must be the device tree identifier of the FILTER pin. Only for the ad778x chips. If specified, it will be asserted during driver probe. As the line is active low, it should be marked GPIO_ACTIVE_LOW. Examples #include <dt-bindings/gpio/gpio.h> spi0 { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7780\"; reg = <0>; avdd-supply = <&vdd_supply>; powerdown-gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>; adi,gain-gpios = <&gpio1 5 GPIO_ACTIVE_LOW>; adi,filter-gpios = <&gpio2 15 GPIO_ACTIVE_LOW>; }; };","title":"Analog Devices AD7170/AD7171/AD7780/AD7781 analog to digital converters"},{"location":"devs/ADI_AD7923/","text":"Analog Devices AD7923 and similars with 4 and 8 Channel ADCs. Analog Devices AD7904, AD7914, AD7923, AD7924 4 Channel ADCs, and AD7908, AD7918, AD7928 8 Channels ADCs. Specifications about the part can be found at: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7923.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD7904_7914_7924.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD7908_7918_7928.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7904 adi,ad7914 adi,ad7923 adi,ad7924 adi,ad7908 adi,ad7918 adi,ad7928 reg yes refin-supply The regulator supply for ADC reference voltage. #address-cells #size-cells spi-max-frequency bool Examples spi { #address-cells = <1>; #size-cells = <0>; ad7928 : adc@0 { compatible = \"adi,ad7928\"; reg = <0>; spi-max-frequency = <25000000>; refin-supply = <&adc_vref>; #address-cells = <1>; #size-cells = <0>; }; } ;","title":"ADI AD7923"},{"location":"devs/ADI_AD7923/#analog-devices-ad7923-and-similars-with-4-and-8-channel-adcs","text":"Analog Devices AD7904, AD7914, AD7923, AD7924 4 Channel ADCs, and AD7908, AD7918, AD7928 8 Channels ADCs. Specifications about the part can be found at: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7923.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD7904_7914_7924.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD7908_7918_7928.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7904 adi,ad7914 adi,ad7923 adi,ad7924 adi,ad7908 adi,ad7918 adi,ad7928 reg yes refin-supply The regulator supply for ADC reference voltage. #address-cells #size-cells spi-max-frequency bool Examples spi { #address-cells = <1>; #size-cells = <0>; ad7928 : adc@0 { compatible = \"adi,ad7928\"; reg = <0>; spi-max-frequency = <25000000>; refin-supply = <&adc_vref>; #address-cells = <1>; #size-cells = <0>; }; } ;","title":"Analog Devices AD7923 and similars with 4 and 8 Channel ADCs."},{"location":"devs/ADI_AD7949/","text":"Analog Devices AD7949/AD7682/AD7689 analog to digital converters Specifications on the converters can be found at: AD7949: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7949.pdf AD7682/AD7698: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7682_7689.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7682 adi,ad7689 adi,ad7949 reg yes vref-supply yes ADC reference voltage supply spi-max-frequency bool #io-channel-cells Examples spi { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7949\"; reg = <0>; vref-supply = <&vdd_supply>; }; };","title":"ADI AD7949"},{"location":"devs/ADI_AD7949/#analog-devices-ad7949ad7682ad7689-analog-to-digital-converters","text":"Specifications on the converters can be found at: AD7949: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7949.pdf AD7682/AD7698: https://www.analog.com/media/en/technical-documentation/data-sheets/AD7682_7689.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad7682 adi,ad7689 adi,ad7949 reg yes vref-supply yes ADC reference voltage supply spi-max-frequency bool #io-channel-cells Examples spi { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad7949\"; reg = <0>; vref-supply = <&vdd_supply>; }; };","title":"Analog Devices AD7949/AD7682/AD7689 analog to digital converters"},{"location":"devs/ADI_AD9083/","text":"Analog Devices AD9083 device driver Bindings for the Analog Devices AD9083 ADC device. Datasheet can be found here: https://www.analog.com/media/en/technical-documentation/data-sheets/ad9083.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad9083 reg yes jesd204-device boolean yes Device is added to the jesd204-fsm framework #jesd204-cells jesd204-top-device yes jesd204-link-ids yes jesd204-inputs yes JESD204-fsm devices phandles and specifiers (used to build the link topology) spi-max-frequency clocks yes clock-names yes AD9083 reference clock name adi,adc-frequency-hz ADC Sampling frequency of the device adi,vmax-microvolt Full scale voltage adi,fc-hz Cut-off frequency of low-pass filter adi,rterm-ohms enum ADC front end termination resistor. If property is not specified, would mean no resistor Options: 100 200 adi,hp-en boolean Enable/disable high performance adi,backoff The backoff in terms of noise terms of noise, 100 * dB adi,finmax-hz Maximum input frequency, should be set to fADC/20 adi,nco0_freq-hz NCO0 frequency adi,nco1_freq-hz NCO0 frequency adi,nco2_freq-hz NCO0 frequency adi,cic_decimation CIC decimation config 0 - Decimation by 4 1 - Decimation by 8 2 - Decimation by 16 adi,j_decimation enum J decimation config 0 - Bypass 1 - Decimation by 4 2 - Decimation by 8 3 - Decimation by 16 6 - Decimation by 12 7 - Decimation by 24 9 - Decimation by 10 10 - Decimation by 20 11 - Decimation by 40 14 - Decimation by 30 15 - Decimation by 60 Options: 0 1 2 3 6 7 9 10 11 14 15 adi,g_decimation G value for decimation in burst mode adi,h_decimation H value for decimation in burst mode adi,nco0_datapath_mode NCO data path 1 - ADC -> CIC -> output 2 - ADC -> CIC -> NCO -> J -> output 3 - ADC -> CIC -> J -> output 4 - ADC -> J -> output 5 - ADC -> CIC -> NCO -> G -> output 6 - ADC -> CIC -> NCO -> G -> H output adi,octets-per-frame Number of octets per frame (F) adi,frames-per-multiframe Number of frames per multi-frame (K) adi,converter-resolution Converter resolution (N) adi,bits-per-sample Number of bits per sample (N') adi,converters-per-device Number of converter per device (M) adi,control-bits-per-sample Number of control bits per conversion sample (CS) adi,lanes-per-device Number of lanes per link (L) adi,subclass The JESD204B sublcass Examples #include <dt-bindings/iio/adc/adi,ad9083.h> spi { #address-cells = <1>; #size-cells = <0>; adc0_ad9083 : ad9083@0 { compatible = \"adi,ad9083\"; reg = <0>; jesd204-device; #jesd204-cells = <2>; jesd204-top-device = <0>; jesd204-link-ids = <0>; jesd204-inputs = <&axi_ad9083_core_rx 0 0>; spi-max-frequency = <1000000>; clocks = <&ad9528 13>; clock-names = \"adc_ref_clk\"; adi,sampling-frequency-hz = /bits/ 64 <125000000>; /* adi_ad9083 config */ adi,vmax-microvolt = <1800>; adi,fc-hz = /bits/ 64 <800000000>; adi,rterm-ohms = <100>; adi,hp-en; adi,backoff = <0>; adi,finmax-hz = /bits/ 64 <100000000>; adi,nco0_freq-hz = /bits/ 64 <0>; adi,nco1_freq-hz = /bits/ 64 <0>; adi,nco2_freq-hz = /bits/ 64 <0>; adi,cic_decimation = /bits/ 8 <AD9083_CIC_DEC_4>; adi,j_decimation = /bits/ 8 <AD9083_J_DEC_4>; adi,g_decimation = /bits/ 8 <0>; adi,h_decimation = /bits/ 8 <0>; adi,nco0_datapath_mode = /bits/ 8 <AD9083_DATAPATH_ADC_CIC_J>; /* JESD204 parameters */ adi,octets-per-frame = <8>; adi,frames-per-multiframe = <32>; adi,converter-resolution = <16>; adi,bits-per-sample = <16>; adi,converters-per-device = <16>; adi,control-bits-per-sample = <0>; adi,lanes-per-device = <4>; adi,subclass = <0>; }; } ;","title":"ADI AD9083"},{"location":"devs/ADI_AD9083/#analog-devices-ad9083-device-driver","text":"Bindings for the Analog Devices AD9083 ADC device. Datasheet can be found here: https://www.analog.com/media/en/technical-documentation/data-sheets/ad9083.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad9083 reg yes jesd204-device boolean yes Device is added to the jesd204-fsm framework #jesd204-cells jesd204-top-device yes jesd204-link-ids yes jesd204-inputs yes JESD204-fsm devices phandles and specifiers (used to build the link topology) spi-max-frequency clocks yes clock-names yes AD9083 reference clock name adi,adc-frequency-hz ADC Sampling frequency of the device adi,vmax-microvolt Full scale voltage adi,fc-hz Cut-off frequency of low-pass filter adi,rterm-ohms enum ADC front end termination resistor. If property is not specified, would mean no resistor Options: 100 200 adi,hp-en boolean Enable/disable high performance adi,backoff The backoff in terms of noise terms of noise, 100 * dB adi,finmax-hz Maximum input frequency, should be set to fADC/20 adi,nco0_freq-hz NCO0 frequency adi,nco1_freq-hz NCO0 frequency adi,nco2_freq-hz NCO0 frequency adi,cic_decimation CIC decimation config 0 - Decimation by 4 1 - Decimation by 8 2 - Decimation by 16 adi,j_decimation enum J decimation config 0 - Bypass 1 - Decimation by 4 2 - Decimation by 8 3 - Decimation by 16 6 - Decimation by 12 7 - Decimation by 24 9 - Decimation by 10 10 - Decimation by 20 11 - Decimation by 40 14 - Decimation by 30 15 - Decimation by 60 Options: 0 1 2 3 6 7 9 10 11 14 15 adi,g_decimation G value for decimation in burst mode adi,h_decimation H value for decimation in burst mode adi,nco0_datapath_mode NCO data path 1 - ADC -> CIC -> output 2 - ADC -> CIC -> NCO -> J -> output 3 - ADC -> CIC -> J -> output 4 - ADC -> J -> output 5 - ADC -> CIC -> NCO -> G -> output 6 - ADC -> CIC -> NCO -> G -> H output adi,octets-per-frame Number of octets per frame (F) adi,frames-per-multiframe Number of frames per multi-frame (K) adi,converter-resolution Converter resolution (N) adi,bits-per-sample Number of bits per sample (N') adi,converters-per-device Number of converter per device (M) adi,control-bits-per-sample Number of control bits per conversion sample (CS) adi,lanes-per-device Number of lanes per link (L) adi,subclass The JESD204B sublcass Examples #include <dt-bindings/iio/adc/adi,ad9083.h> spi { #address-cells = <1>; #size-cells = <0>; adc0_ad9083 : ad9083@0 { compatible = \"adi,ad9083\"; reg = <0>; jesd204-device; #jesd204-cells = <2>; jesd204-top-device = <0>; jesd204-link-ids = <0>; jesd204-inputs = <&axi_ad9083_core_rx 0 0>; spi-max-frequency = <1000000>; clocks = <&ad9528 13>; clock-names = \"adc_ref_clk\"; adi,sampling-frequency-hz = /bits/ 64 <125000000>; /* adi_ad9083 config */ adi,vmax-microvolt = <1800>; adi,fc-hz = /bits/ 64 <800000000>; adi,rterm-ohms = <100>; adi,hp-en; adi,backoff = <0>; adi,finmax-hz = /bits/ 64 <100000000>; adi,nco0_freq-hz = /bits/ 64 <0>; adi,nco1_freq-hz = /bits/ 64 <0>; adi,nco2_freq-hz = /bits/ 64 <0>; adi,cic_decimation = /bits/ 8 <AD9083_CIC_DEC_4>; adi,j_decimation = /bits/ 8 <AD9083_J_DEC_4>; adi,g_decimation = /bits/ 8 <0>; adi,h_decimation = /bits/ 8 <0>; adi,nco0_datapath_mode = /bits/ 8 <AD9083_DATAPATH_ADC_CIC_J>; /* JESD204 parameters */ adi,octets-per-frame = <8>; adi,frames-per-multiframe = <32>; adi,converter-resolution = <16>; adi,bits-per-sample = <16>; adi,converters-per-device = <16>; adi,control-bits-per-sample = <0>; adi,lanes-per-device = <4>; adi,subclass = <0>; }; } ;","title":"Analog Devices AD9083 device driver"},{"location":"devs/ADI_AD9467/","text":"Analog Devices AD9467 and similar High-Speed ADCs The AD9467 and the parts similar with it, are high-speed analog-to-digital converters (ADCs), operating in the range of 100 to 500 mega samples per second (MSPS). Some parts support higher MSPS and some lower MSPS, suitable for the intended application of each part. All the parts support the register map described by Application Note AN-877 https://www.analog.com/media/en/technical-documentation/application-notes/AN-877.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD9265.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD9434.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD9467.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad9265 adi,ad9434 adi,ad9467 reg yes clocks yes clock-names yes powerdown-gpios Pin that controls the powerdown mode of the device. reset-gpios Reset pin for the device. Examples spi { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad9467\"; reg = <0>; clocks = <&adc_clk>; clock-names = \"adc-clk\"; }; };","title":"ADI AD9467"},{"location":"devs/ADI_AD9467/#analog-devices-ad9467-and-similar-high-speed-adcs","text":"The AD9467 and the parts similar with it, are high-speed analog-to-digital converters (ADCs), operating in the range of 100 to 500 mega samples per second (MSPS). Some parts support higher MSPS and some lower MSPS, suitable for the intended application of each part. All the parts support the register map described by Application Note AN-877 https://www.analog.com/media/en/technical-documentation/application-notes/AN-877.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD9265.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD9434.pdf https://www.analog.com/media/en/technical-documentation/data-sheets/AD9467.pdf Properties Name Type Required Info compatible enum yes Options: adi,ad9265 adi,ad9434 adi,ad9467 reg yes clocks yes clock-names yes powerdown-gpios Pin that controls the powerdown mode of the device. reset-gpios Reset pin for the device. Examples spi { #address-cells = <1>; #size-cells = <0>; adc@0 { compatible = \"adi,ad9467\"; reg = <0>; clocks = <&adc_clk>; clock-names = \"adc-clk\"; }; };","title":"Analog Devices AD9467 and similar High-Speed ADCs"},{"location":"devs/ADI_ADA4250/","text":"ADA4250 Programmable Gain Instrumentation Amplifier Precision Low Power, 110kHz, 26uA, Programmable Gain Instrumentation Amplifier Properties Name Type Required Info compatible enum yes Options: adi,ada4250 reg yes avdd-supply yes analog voltage regulator (see regulator/regulator.txt) adi,refbuf-enable boolean Enable internal buffer to drive the reference pin. Examples spi { #address-cells = <1>; #size-cells = <0>; status = \"okay\"; ada4250@0{ compatible = \"adi,ada4250\"; reg = <0>; avdd-supply = <&avdd>; }; };","title":"ADI ADA4250"},{"location":"devs/ADI_ADA4250/#ada4250-programmable-gain-instrumentation-amplifier","text":"Precision Low Power, 110kHz, 26uA, Programmable Gain Instrumentation Amplifier Properties Name Type Required Info compatible enum yes Options: adi,ada4250 reg yes avdd-supply yes analog voltage regulator (see regulator/regulator.txt) adi,refbuf-enable boolean Enable internal buffer to drive the reference pin. Examples spi { #address-cells = <1>; #size-cells = <0>; status = \"okay\"; ada4250@0{ compatible = \"adi,ada4250\"; reg = <0>; avdd-supply = <&avdd>; }; };","title":"ADA4250 Programmable Gain Instrumentation Amplifier"},{"location":"devs/ADI_ADAR1000/","text":"Analog Devices ADAR1000 X Band and KuBand Beamformer Analog Devices ADAR1000 4-channel, X and Ku frequency band, beamformer. https://www.analog.com/media/en/technical-documentation/data-sheets/ADAR1000.pdf Properties Name Type Required Info compatible enum yes Options: adi,adar1000 reg yes Examples adar1000@0 { compatible = \"adi,adar1000\"; reg = <0>; spi-max-frequency = <1000000>; #address-cells = <1>; #size-cells = <0>; dev@0 { reg = <0>; label = \"BEAM0\"; adi,phasetable-name = \"adar1000_std_phasetable\"; }; dev@1 { reg = <1>; label = \"BEAM1\"; }; dev@2 { reg = <2>; label = \"BEAM2\"; }; dev@3 { reg = <3>; label = \"BEAM3\"; }; };","title":"ADI ADAR1000"},{"location":"devs/ADI_ADAR1000/#analog-devices-adar1000-x-band-and-kuband-beamformer","text":"Analog Devices ADAR1000 4-channel, X and Ku frequency band, beamformer. https://www.analog.com/media/en/technical-documentation/data-sheets/ADAR1000.pdf Properties Name Type Required Info compatible enum yes Options: adi,adar1000 reg yes Examples adar1000@0 { compatible = \"adi,adar1000\"; reg = <0>; spi-max-frequency = <1000000>; #address-cells = <1>; #size-cells = <0>; dev@0 { reg = <0>; label = \"BEAM0\"; adi,phasetable-name = \"adar1000_std_phasetable\"; }; dev@1 { reg = <1>; label = \"BEAM1\"; }; dev@2 { reg = <2>; label = \"BEAM2\"; }; dev@3 { reg = <3>; label = \"BEAM3\"; }; };","title":"Analog Devices ADAR1000 X Band and KuBand Beamformer"},{"location":"devs/ADI_ADAR300X/","text":"Analog Devices ADAR300x Ka Band Beamformer Analog Devices ADAR300x receive/transmit chip, 2-Beam & 4-dual polarized elements, beamforming chip for polarized phased arrays Properties Name Type Required Info compatible enum yes Options: adi,adar3000 adi,adar3001 adi,adar3002 adi,adar3003 reg yes Examples adar3000@0 { compatible = \"adi,adar3000\"; reg = <0>; spi-max-frequency = <1000000>; #address-cells = <1>; #size-cells = <0>; dev@0 { reg = <0>; label = \"BEAM0\"; }; dev@1 { reg = <1>; label = \"BEAM1\"; }; dev@2 { reg = <2>; label = \"BEAM2\"; }; dev@3 { reg = <3>; label = \"BEAM3\"; }; };","title":"ADI ADAR300X"},{"location":"devs/ADI_ADAR300X/#analog-devices-adar300x-ka-band-beamformer","text":"Analog Devices ADAR300x receive/transmit chip, 2-Beam & 4-dual polarized elements, beamforming chip for polarized phased arrays Properties Name Type Required Info compatible enum yes Options: adi,adar3000 adi,adar3001 adi,adar3002 adi,adar3003 reg yes Examples adar3000@0 { compatible = \"adi,adar3000\"; reg = <0>; spi-max-frequency = <1000000>; #address-cells = <1>; #size-cells = <0>; dev@0 { reg = <0>; label = \"BEAM0\"; }; dev@1 { reg = <1>; label = \"BEAM1\"; }; dev@2 { reg = <2>; label = \"BEAM2\"; }; dev@3 { reg = <3>; label = \"BEAM3\"; }; };","title":"Analog Devices ADAR300x Ka Band Beamformer"},{"location":"devs/ADI_ADIS16240/","text":"ADIS16240 Programmable Impact Sensor and Recorder driver ADIS16240 Programmable Impact Sensor and Recorder driver that supports SPI interface. https://www.analog.com/en/products/adis16240.html Properties Name Type Required Info compatible enum yes Options: adi,adis16240 reg yes interrupts yes spi-max-frequency bool Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi0 { #address-cells = <1>; #size-cells = <0>; /* Example for a SPI device node */ accelerometer@0 { compatible = \"adi,adis16240\"; reg = <0>; spi-max-frequency = <2500000>; interrupt-parent = <&gpio0>; interrupts = <0 IRQ_TYPE_LEVEL_HIGH>; }; };","title":"ADI ADIS16240"},{"location":"devs/ADI_ADIS16240/#adis16240-programmable-impact-sensor-and-recorder-driver","text":"ADIS16240 Programmable Impact Sensor and Recorder driver that supports SPI interface. https://www.analog.com/en/products/adis16240.html Properties Name Type Required Info compatible enum yes Options: adi,adis16240 reg yes interrupts yes spi-max-frequency bool Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi0 { #address-cells = <1>; #size-cells = <0>; /* Example for a SPI device node */ accelerometer@0 { compatible = \"adi,adis16240\"; reg = <0>; spi-max-frequency = <2500000>; interrupt-parent = <&gpio0>; interrupts = <0 IRQ_TYPE_LEVEL_HIGH>; }; };","title":"ADIS16240 Programmable Impact Sensor and Recorder driver"},{"location":"devs/ADI_ADIS16460/","text":"Analog Devices ADIS16460 and similar IMUs Analog Devices ADIS16460 and similar IMUs https://www.analog.com/media/en/technical-documentation/data-sheets/ADIS16460.pdf Properties Name Type Required Info compatible enum yes Options: adi,adis16460 reg yes spi-cpha bool spi-cpol bool spi-max-frequency bool interrupts yes Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi0 { #address-cells = <1>; #size-cells = <0>; imu@0 { compatible = \"adi,adis16460\"; reg = <0>; spi-max-frequency = <5000000>; spi-cpol; spi-cpha; interrupt-parent = <&gpio0>; interrupts = <0 IRQ_TYPE_LEVEL_HIGH>; }; };","title":"ADI ADIS16460"},{"location":"devs/ADI_ADIS16460/#analog-devices-adis16460-and-similar-imus","text":"Analog Devices ADIS16460 and similar IMUs https://www.analog.com/media/en/technical-documentation/data-sheets/ADIS16460.pdf Properties Name Type Required Info compatible enum yes Options: adi,adis16460 reg yes spi-cpha bool spi-cpol bool spi-max-frequency bool interrupts yes Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi0 { #address-cells = <1>; #size-cells = <0>; imu@0 { compatible = \"adi,adis16460\"; reg = <0>; spi-max-frequency = <5000000>; spi-cpol; spi-cpha; interrupt-parent = <&gpio0>; interrupts = <0 IRQ_TYPE_LEVEL_HIGH>; }; };","title":"Analog Devices ADIS16460 and similar IMUs"},{"location":"devs/ADI_ADIS16475/","text":"Analog Devices ADIS16475 and similar IMUs Analog Devices ADIS16475 and similar IMUs https://www.analog.com/media/en/technical-documentation/data-sheets/ADIS16475.pdf Properties Name Type Required Info compatible enum yes Options: adi,adis16475-1 adi,adis16475-2 adi,adis16475-3 adi,adis16477-1 adi,adis16477-2 adi,adis16477-3 adi,adis16470 adi,adis16465-1 adi,adis16465-2 adi,adis16465-3 adi,adis16467-1 adi,adis16467-2 adi,adis16467-3 adi,adis16500 adi,adis16505-1 adi,adis16505-2 adi,adis16505-3 adi,adis16507-1 adi,adis16507-2 adi,adis16507-3 reg yes spi-cpha bool yes spi-cpol bool yes spi-max-frequency interrupts yes clocks reset-gpios Must be the device tree identifier of the RESET pin. If specified, it will be asserted during driver probe. As the line is active low, it should be marked GPIO_ACTIVE_LOW. adi,sync-mode Configures the device SYNC pin. The following modes are supported 0 - output_sync 1 - direct_sync 2 - scaled_sync 3 - pulse_sync adi,scaled-output-hz This property must be present if the clock mode is scaled-sync through clock-names property. In this mode, the input clock can have a range of 1Hz to 128HZ which must be scaled to originate an allowable sample rate. This property specifies that rate. Examples #include <dt-bindings/interrupt-controller/irq.h> spi { #address-cells = <1>; #size-cells = <0>; adis16475 : adis16475-3@0 { compatible = \"adi,adis16475-3\"; reg = <0>; spi-cpha; spi-cpol; spi-max-frequency = <2000000>; interrupts = <4 IRQ_TYPE_EDGE_RISING>; interrupt-parent = <&gpio>; }; } ;","title":"ADI ADIS16475"},{"location":"devs/ADI_ADIS16475/#analog-devices-adis16475-and-similar-imus","text":"Analog Devices ADIS16475 and similar IMUs https://www.analog.com/media/en/technical-documentation/data-sheets/ADIS16475.pdf Properties Name Type Required Info compatible enum yes Options: adi,adis16475-1 adi,adis16475-2 adi,adis16475-3 adi,adis16477-1 adi,adis16477-2 adi,adis16477-3 adi,adis16470 adi,adis16465-1 adi,adis16465-2 adi,adis16465-3 adi,adis16467-1 adi,adis16467-2 adi,adis16467-3 adi,adis16500 adi,adis16505-1 adi,adis16505-2 adi,adis16505-3 adi,adis16507-1 adi,adis16507-2 adi,adis16507-3 reg yes spi-cpha bool yes spi-cpol bool yes spi-max-frequency interrupts yes clocks reset-gpios Must be the device tree identifier of the RESET pin. If specified, it will be asserted during driver probe. As the line is active low, it should be marked GPIO_ACTIVE_LOW. adi,sync-mode Configures the device SYNC pin. The following modes are supported 0 - output_sync 1 - direct_sync 2 - scaled_sync 3 - pulse_sync adi,scaled-output-hz This property must be present if the clock mode is scaled-sync through clock-names property. In this mode, the input clock can have a range of 1Hz to 128HZ which must be scaled to originate an allowable sample rate. This property specifies that rate. Examples #include <dt-bindings/interrupt-controller/irq.h> spi { #address-cells = <1>; #size-cells = <0>; adis16475 : adis16475-3@0 { compatible = \"adi,adis16475-3\"; reg = <0>; spi-cpha; spi-cpol; spi-max-frequency = <2000000>; interrupts = <4 IRQ_TYPE_EDGE_RISING>; interrupt-parent = <&gpio>; }; } ;","title":"Analog Devices ADIS16475 and similar IMUs"},{"location":"devs/ADI_ADL5960/","text":"Analog Devices ADL5960 Vector Network Analyzer Front-End The ADL5960 is a wideband, front-end vector network analyzer that consists of a bidirectional bridge, downconverters, programmable IF amplifiers, and a configurable local oscillator (LO) interface. Properties Name Type Required Info compatible enum yes Options: adi,adl5960 reg yes spi-max-frequency clocks yes Definition of the external clock (see clock/clock-bindings.txt) clock-names yes lo_in-clock-scales The Common Clock Framework max rate is limited by MAX of unsigned long. For ADL5960 device this is a deficiency. If specified, this property allows arbitrary scales. The first element in the array should be the multiplier and the second element should be the divider. avcc-supply analog voltage regulator (see regulator/regulator.txt) #clock-cells Examples spi { adl5960-1@0 { compatible = \"adi,adl5960\"; reg = <0>; spi-max-frequency = <12500000>; /* Clocks */ clocks = <&adf5610>, <&ad9528 4>; clock-names = \"lo_in\", \"offs_in\"; lo_in-clock-scales = <1 10>; label = \"adl5960-1\"; }; };","title":"ADI ADL5960"},{"location":"devs/ADI_ADL5960/#analog-devices-adl5960-vector-network-analyzer-front-end","text":"The ADL5960 is a wideband, front-end vector network analyzer that consists of a bidirectional bridge, downconverters, programmable IF amplifiers, and a configurable local oscillator (LO) interface. Properties Name Type Required Info compatible enum yes Options: adi,adl5960 reg yes spi-max-frequency clocks yes Definition of the external clock (see clock/clock-bindings.txt) clock-names yes lo_in-clock-scales The Common Clock Framework max rate is limited by MAX of unsigned long. For ADL5960 device this is a deficiency. If specified, this property allows arbitrary scales. The first element in the array should be the multiplier and the second element should be the divider. avcc-supply analog voltage regulator (see regulator/regulator.txt) #clock-cells Examples spi { adl5960-1@0 { compatible = \"adi,adl5960\"; reg = <0>; spi-max-frequency = <12500000>; /* Clocks */ clocks = <&adf5610>, <&ad9528 4>; clock-names = \"lo_in\", \"offs_in\"; lo_in-clock-scales = <1 10>; label = \"adl5960-1\"; }; };","title":"Analog Devices ADL5960 Vector Network Analyzer Front-End"},{"location":"devs/ADI_ADMV1013/","text":"ADMV1013 Microwave Upconverter wideband, microwave upconverter optimized for point to point microwave radio designs operating in the 24 GHz to 44 GHz frequency range. Properties Name Type Required Info compatible enum yes Options: adi,admv1013 reg yes spi-max-frequency clocks yes Definition of the external clock (see clock/clock-bindings.txt) clock-names yes Must be \"lo_in\" clock-output-names clock-scales The Common Clock Framework max rate is limited by MAX of unsigned long. For ADMV1013 device this is a deficiency. If specified, this property allows arbitrary scales. The first element in the array should be the multiplier and the second element should be the divider. vcm-supply yes analog voltage regulator (see regulator/regulator.txt) adi,parity-en boolean Enable Parity for Write execution. adi,vga-pd boolean Power Down the VGA Circuit. adi,mixer-pd boolean Power Down the Mixer Circuit. adi,quad-pd boolean Power Down the Quad. adi,bg-pd boolean Power Down the Transmitter Band Gap. adi,mixer-if-en boolean Enable the IF Mode. adi,det-en boolean Enable the Envelope Detector. adi,quad-se-mode enum Switch Differential/SE Modes. Options: 6 9 12 #address-cells #size-cells #clock-cells Examples spi { #address-cells = <1>; #size-cells = <0>; admv1013@0{ compatible = \"adi,admv1013\"; reg = <0>; spi-max-frequency = <1000000>; clocks = <&admv1013_lo>; clock-scales = <1 5>; clock-names = \"lo_in\"; vcm-supply = <&vcm>; adi,quad-se-mode = <12>; adi,parity-en; adi,mixer-if-en; adi,det-en; }; };","title":"ADI ADMV1013"},{"location":"devs/ADI_ADMV1013/#admv1013-microwave-upconverter","text":"wideband, microwave upconverter optimized for point to point microwave radio designs operating in the 24 GHz to 44 GHz frequency range. Properties Name Type Required Info compatible enum yes Options: adi,admv1013 reg yes spi-max-frequency clocks yes Definition of the external clock (see clock/clock-bindings.txt) clock-names yes Must be \"lo_in\" clock-output-names clock-scales The Common Clock Framework max rate is limited by MAX of unsigned long. For ADMV1013 device this is a deficiency. If specified, this property allows arbitrary scales. The first element in the array should be the multiplier and the second element should be the divider. vcm-supply yes analog voltage regulator (see regulator/regulator.txt) adi,parity-en boolean Enable Parity for Write execution. adi,vga-pd boolean Power Down the VGA Circuit. adi,mixer-pd boolean Power Down the Mixer Circuit. adi,quad-pd boolean Power Down the Quad. adi,bg-pd boolean Power Down the Transmitter Band Gap. adi,mixer-if-en boolean Enable the IF Mode. adi,det-en boolean Enable the Envelope Detector. adi,quad-se-mode enum Switch Differential/SE Modes. Options: 6 9 12 #address-cells #size-cells #clock-cells Examples spi { #address-cells = <1>; #size-cells = <0>; admv1013@0{ compatible = \"adi,admv1013\"; reg = <0>; spi-max-frequency = <1000000>; clocks = <&admv1013_lo>; clock-scales = <1 5>; clock-names = \"lo_in\"; vcm-supply = <&vcm>; adi,quad-se-mode = <12>; adi,parity-en; adi,mixer-if-en; adi,det-en; }; };","title":"ADMV1013 Microwave Upconverter"},{"location":"devs/ADI_ADMV1014/","text":"ADMV1014 Microwave Downconverter wideband, microwave downconverter optimized for point to point microwave radio designs operating in the 24 GHz to 44 GHz frequency range. Properties Name Type Required Info compatible enum yes Options: adi,admv1014 reg yes spi-max-frequency clocks yes Definition of the external clock (see clock/clock-bindings.txt) clock-names yes Must be \"lo_in\" clock-output-names clock-scales The Common Clock Framework max rate is limited by MAX of unsigned long. For ADMV1014 device this is a deficiency. If specified, this property allows arbitrary scales. The first element in the array should be the multiplier and the second element should be the divider. vcm-supply yes analog voltage regulator (see regulator/regulator.txt) adi,parity-en boolean Enable Parity for Write execution. adi,ibias-pd boolean Power Down the Rx IBIAS. adi,if-amp-pd boolean Power Down the IF Amp. adi,quad-bg-pd boolean Power Down the Quadrupler Band Gap. adi,bb-amp-pd boolean Power Down the Baseband Amp. adi,quad-ibias-pd boolean Power Down the Quadrupler Bias Current. adi,det-en boolean Digital Rx Detector Enable. adi,bg-pd boolean Power Down the Rx BG. adi,p1db-comp enum Turn on bits to optimize P1dB. Options: 0 3 adi,quad-se-mode enum Switch Differential/SE Modes. Options: 6 9 12 adi,det-prog enum Digital Rx Detector Program. Options: 0 1 2 4 8 16 32 64 adi,bb-amp-gain-ctrl enum Baseband Amp Gain control. Options: 0 1 2 3 #address-cells #size-cells #clock-cells Examples spi { #address-cells = <1>; #size-cells = <0>; admv1014@0{ compatible = \"adi,admv1014\"; reg = <0>; spi-max-frequency = <1000000>; clocks = <&admv1014_lo>; clock-names = \"lo_in\"; clock-scales = <1 5>; vcm-supply = <&vcm>; adi,quad-se-mode = <12>; adi,parity-en; adi,det-en; adi,p1db-comp = <3>; adi,det-prog = <0>; adi,bb-amp-gain-ctrl = <0>; }; };","title":"ADI ADMV1014"},{"location":"devs/ADI_ADMV1014/#admv1014-microwave-downconverter","text":"wideband, microwave downconverter optimized for point to point microwave radio designs operating in the 24 GHz to 44 GHz frequency range. Properties Name Type Required Info compatible enum yes Options: adi,admv1014 reg yes spi-max-frequency clocks yes Definition of the external clock (see clock/clock-bindings.txt) clock-names yes Must be \"lo_in\" clock-output-names clock-scales The Common Clock Framework max rate is limited by MAX of unsigned long. For ADMV1014 device this is a deficiency. If specified, this property allows arbitrary scales. The first element in the array should be the multiplier and the second element should be the divider. vcm-supply yes analog voltage regulator (see regulator/regulator.txt) adi,parity-en boolean Enable Parity for Write execution. adi,ibias-pd boolean Power Down the Rx IBIAS. adi,if-amp-pd boolean Power Down the IF Amp. adi,quad-bg-pd boolean Power Down the Quadrupler Band Gap. adi,bb-amp-pd boolean Power Down the Baseband Amp. adi,quad-ibias-pd boolean Power Down the Quadrupler Bias Current. adi,det-en boolean Digital Rx Detector Enable. adi,bg-pd boolean Power Down the Rx BG. adi,p1db-comp enum Turn on bits to optimize P1dB. Options: 0 3 adi,quad-se-mode enum Switch Differential/SE Modes. Options: 6 9 12 adi,det-prog enum Digital Rx Detector Program. Options: 0 1 2 4 8 16 32 64 adi,bb-amp-gain-ctrl enum Baseband Amp Gain control. Options: 0 1 2 3 #address-cells #size-cells #clock-cells Examples spi { #address-cells = <1>; #size-cells = <0>; admv1014@0{ compatible = \"adi,admv1014\"; reg = <0>; spi-max-frequency = <1000000>; clocks = <&admv1014_lo>; clock-names = \"lo_in\"; clock-scales = <1 5>; vcm-supply = <&vcm>; adi,quad-se-mode = <12>; adi,parity-en; adi,det-en; adi,p1db-comp = <3>; adi,det-prog = <0>; adi,bb-amp-gain-ctrl = <0>; }; };","title":"ADMV1014 Microwave Downconverter"},{"location":"devs/ADI_ADMV8818/","text":"ADMV8818 Digitally Tunable, High-Pass and Low-Pass Filter Fully monolithic microwave integrated circuit (MMIC) that features a digitally selectable frequency of operation. The device features four independently controlled high-pass filters (HPFs) and four independently controlled low-pass filters (LPFs) that span the 2 GHz to 18 GHz frequency range. https://www.analog.com/en/products/admv8818.html Properties Name Type Required Info compatible enum yes Options: adi,admv8818 reg yes spi-max-frequency clocks yes Definition of the external clock. clock-names yes clock-output-names clock-scales The Common Clock Framework max rate is limited by MAX of unsigned long. For ADMV8818 device this is a deficiency. If specified, this property allows arbitrary scales. The first element in the array should be the multiplier and the second element should be the divider. #clock-cells adi,bw-hz Allows the user to increase the Bandpass Filter (BPF) bandwidth in Hz. Normally when invoked by the clk notifier, the driver sets the HPF cutoff close below the frequency and the LPF cutoff close above the frequency, and thus creating a BPF. Examples spi { #address-cells = <1>; #size-cells = <0>; admv8818@0 { compatible = \"adi,admv8818\"; reg = <0>; spi-max-frequency = <10000000>; clocks = <&admv8818_rfin>; clock-scales = <1 5>; clock-names = \"rf_in\"; adi,bw-hz = /bits/ 64 <600000000>; }; };","title":"ADI ADMV8818"},{"location":"devs/ADI_ADMV8818/#admv8818-digitally-tunable-high-pass-and-low-pass-filter","text":"Fully monolithic microwave integrated circuit (MMIC) that features a digitally selectable frequency of operation. The device features four independently controlled high-pass filters (HPFs) and four independently controlled low-pass filters (LPFs) that span the 2 GHz to 18 GHz frequency range. https://www.analog.com/en/products/admv8818.html Properties Name Type Required Info compatible enum yes Options: adi,admv8818 reg yes spi-max-frequency clocks yes Definition of the external clock. clock-names yes clock-output-names clock-scales The Common Clock Framework max rate is limited by MAX of unsigned long. For ADMV8818 device this is a deficiency. If specified, this property allows arbitrary scales. The first element in the array should be the multiplier and the second element should be the divider. #clock-cells adi,bw-hz Allows the user to increase the Bandpass Filter (BPF) bandwidth in Hz. Normally when invoked by the clk notifier, the driver sets the HPF cutoff close below the frequency and the LPF cutoff close above the frequency, and thus creating a BPF. Examples spi { #address-cells = <1>; #size-cells = <0>; admv8818@0 { compatible = \"adi,admv8818\"; reg = <0>; spi-max-frequency = <10000000>; clocks = <&admv8818_rfin>; clock-scales = <1 5>; clock-names = \"rf_in\"; adi,bw-hz = /bits/ 64 <600000000>; }; };","title":"ADMV8818 Digitally Tunable, High-Pass and Low-Pass Filter"},{"location":"devs/ADI_ADRF6780/","text":"ADRF6780 Microwave Upconverter Wideband, microwave upconverter optimized for point to point microwave radio designs operating in the 5.9 GHz to 23.6 GHz frequency range. https://www.analog.com/en/products/adrf6780.html Properties Name Type Required Info compatible enum yes Options: adi,adrf6780 reg yes spi-max-frequency clocks yes Definition of the external clock. clock-names yes clock-output-names adi,vga-buff-en boolean RF Variable Gain Amplifier Buffer Enable. Gain is controlled by the voltage on the VATT pin. adi,lo-buff-en boolean Local Oscillator Amplifier Enable. Disable to put the part in a power down state. adi,if-mode-en boolean Intermediate Frequency Mode Enable. Either IF Mode or I/Q Mode can be enabled at a time. adi,iq-mode-en boolean I/Q Mode Enable. Either IF Mode or I/Q Mode can be enabled at a time. adi,lo-x2-en boolean Double the Local Oscillator output frequency from the Local Oscillator Input Frequency. Either LOx1 or LOx2 can be enabled at a time. adi,lo-ppf-en boolean Local Oscillator input frequency equal to the Local Oscillator output frequency (LO x1). Either LOx1 or LOx2 can be enabled at a time. adi,lo-en boolean Enable additional cirtuitry in the LO chain. Disable to put the part in a power down state. adi,uc-bias-en boolean Enable all bias circuitry thourghout the entire part. Disable to put the part in a power down state. adi,lo-sideband boolean Switch to the Lower LO Sideband. By default the Upper LO sideband is enabled. adi,vdet-out-en boolean VDET Output Select Enable. Expose the RF detector output to the VDET external pin. #clock-cells Examples spi { #address-cells = <1>; #size-cells = <0>; adrf6780@0 { compatible = \"adi,adrf6780\"; reg = <0>; spi-max-frequency = <1000000>; clocks = <&adrf6780_lo>; clock-names = \"lo_in\"; }; };","title":"ADI ADRF6780"},{"location":"devs/ADI_ADRF6780/#adrf6780-microwave-upconverter","text":"Wideband, microwave upconverter optimized for point to point microwave radio designs operating in the 5.9 GHz to 23.6 GHz frequency range. https://www.analog.com/en/products/adrf6780.html Properties Name Type Required Info compatible enum yes Options: adi,adrf6780 reg yes spi-max-frequency clocks yes Definition of the external clock. clock-names yes clock-output-names adi,vga-buff-en boolean RF Variable Gain Amplifier Buffer Enable. Gain is controlled by the voltage on the VATT pin. adi,lo-buff-en boolean Local Oscillator Amplifier Enable. Disable to put the part in a power down state. adi,if-mode-en boolean Intermediate Frequency Mode Enable. Either IF Mode or I/Q Mode can be enabled at a time. adi,iq-mode-en boolean I/Q Mode Enable. Either IF Mode or I/Q Mode can be enabled at a time. adi,lo-x2-en boolean Double the Local Oscillator output frequency from the Local Oscillator Input Frequency. Either LOx1 or LOx2 can be enabled at a time. adi,lo-ppf-en boolean Local Oscillator input frequency equal to the Local Oscillator output frequency (LO x1). Either LOx1 or LOx2 can be enabled at a time. adi,lo-en boolean Enable additional cirtuitry in the LO chain. Disable to put the part in a power down state. adi,uc-bias-en boolean Enable all bias circuitry thourghout the entire part. Disable to put the part in a power down state. adi,lo-sideband boolean Switch to the Lower LO Sideband. By default the Upper LO sideband is enabled. adi,vdet-out-en boolean VDET Output Select Enable. Expose the RF detector output to the VDET external pin. #clock-cells Examples spi { #address-cells = <1>; #size-cells = <0>; adrf6780@0 { compatible = \"adi,adrf6780\"; reg = <0>; spi-max-frequency = <1000000>; clocks = <&adrf6780_lo>; clock-names = \"lo_in\"; }; };","title":"ADRF6780 Microwave Upconverter"},{"location":"devs/ADI_ADXL345/","text":"Analog Devices ADXL345/ADXL375 3-Axis Digital Accelerometers Analog Devices ADXL345/ADXL375 3-Axis Digital Accelerometers that supports both I2C & SPI interfaces. https://www.analog.com/en/products/mems/accelerometers/adxl345.html https://www.analog.com/en/products/sensors-mems/accelerometers/adxl375.html Properties Name Type Required Info compatible yes reg yes spi-cpha bool spi-cpol bool spi-max-frequency bool interrupts yes Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> i2c0 { #address-cells = <1>; #size-cells = <0>; /* Example for a I2C device node */ accelerometer@2a { compatible = \"adi,adxl345\"; reg = <0x53>; interrupt-parent = <&gpio0>; interrupts = <0 IRQ_TYPE_LEVEL_HIGH>; }; }; #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi0 { #address-cells = <1>; #size-cells = <0>; /* Example for a SPI device node */ accelerometer@0 { compatible = \"adi,adxl345\"; reg = <0>; spi-max-frequency = <5000000>; spi-cpol; spi-cpha; interrupt-parent = <&gpio0>; interrupts = <0 IRQ_TYPE_LEVEL_HIGH>; }; };","title":"ADI ADXL345"},{"location":"devs/ADI_ADXL345/#analog-devices-adxl345adxl375-3-axis-digital-accelerometers","text":"Analog Devices ADXL345/ADXL375 3-Axis Digital Accelerometers that supports both I2C & SPI interfaces. https://www.analog.com/en/products/mems/accelerometers/adxl345.html https://www.analog.com/en/products/sensors-mems/accelerometers/adxl375.html Properties Name Type Required Info compatible yes reg yes spi-cpha bool spi-cpol bool spi-max-frequency bool interrupts yes Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> i2c0 { #address-cells = <1>; #size-cells = <0>; /* Example for a I2C device node */ accelerometer@2a { compatible = \"adi,adxl345\"; reg = <0x53>; interrupt-parent = <&gpio0>; interrupts = <0 IRQ_TYPE_LEVEL_HIGH>; }; }; #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi0 { #address-cells = <1>; #size-cells = <0>; /* Example for a SPI device node */ accelerometer@0 { compatible = \"adi,adxl345\"; reg = <0>; spi-max-frequency = <5000000>; spi-cpol; spi-cpha; interrupt-parent = <&gpio0>; interrupts = <0 IRQ_TYPE_LEVEL_HIGH>; }; };","title":"Analog Devices ADXL345/ADXL375 3-Axis Digital Accelerometers"},{"location":"devs/ADI_ADXL355/","text":"Analog Devices ADXL355 3-Axis, Low noise MEMS Accelerometer Analog Devices ADXL355 3-Axis, Low noise MEMS Accelerometer that supports both I2C & SPI interfaces https://www.analog.com/en/products/adxl355.html Properties Name Type Required Info compatible enum yes Options: adi,adxl355 reg yes interrupts Type for DRDY should be IRQ_TYPE_EDGE_RISING. Three configurable interrupt lines exist. interrupt-names Specify which interrupt line is in use. vdd-supply Regulator that provides power to the sensor vddio-supply Regulator that provides power to the bus spi-max-frequency bool Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> i2c { #address-cells = <1>; #size-cells = <0>; /* Example for a I2C device node */ accelerometer@1d { compatible = \"adi,adxl355\"; reg = <0x1d>; interrupt-parent = <&gpio>; interrupts = <25 IRQ_TYPE_EDGE_RISING>; interrupt-names = \"DRDY\"; }; }; #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi { #address-cells = <1>; #size-cells = <0>; accelerometer@0 { compatible = \"adi,adxl355\"; reg = <0>; spi-max-frequency = <1000000>; interrupt-parent = <&gpio>; interrupts = <25 IRQ_TYPE_EDGE_RISING>; interrupt-names = \"DRDY\"; }; };","title":"ADI ADXL355"},{"location":"devs/ADI_ADXL355/#analog-devices-adxl355-3-axis-low-noise-mems-accelerometer","text":"Analog Devices ADXL355 3-Axis, Low noise MEMS Accelerometer that supports both I2C & SPI interfaces https://www.analog.com/en/products/adxl355.html Properties Name Type Required Info compatible enum yes Options: adi,adxl355 reg yes interrupts Type for DRDY should be IRQ_TYPE_EDGE_RISING. Three configurable interrupt lines exist. interrupt-names Specify which interrupt line is in use. vdd-supply Regulator that provides power to the sensor vddio-supply Regulator that provides power to the bus spi-max-frequency bool Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> i2c { #address-cells = <1>; #size-cells = <0>; /* Example for a I2C device node */ accelerometer@1d { compatible = \"adi,adxl355\"; reg = <0x1d>; interrupt-parent = <&gpio>; interrupts = <25 IRQ_TYPE_EDGE_RISING>; interrupt-names = \"DRDY\"; }; }; #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi { #address-cells = <1>; #size-cells = <0>; accelerometer@0 { compatible = \"adi,adxl355\"; reg = <0>; spi-max-frequency = <1000000>; interrupt-parent = <&gpio>; interrupts = <25 IRQ_TYPE_EDGE_RISING>; interrupt-names = \"DRDY\"; }; };","title":"Analog Devices ADXL355 3-Axis, Low noise MEMS Accelerometer"},{"location":"devs/ADI_ADXL372/","text":"Analog Devices ADXL372 3-Axis, +/-(200g) Digital Accelerometer Analog Devices ADXL372 3-Axis, +/-(200g) Digital Accelerometer that supports both I2C & SPI interfaces https://www.analog.com/en/products/adxl372.html Properties Name Type Required Info compatible enum yes Options: adi,adxl372 reg yes interrupts yes spi-max-frequency bool Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> i2c0 { #address-cells = <1>; #size-cells = <0>; /* Example for a I2C device node */ accelerometer@53 { compatible = \"adi,adxl372\"; reg = <0x53>; interrupt-parent = <&gpio>; interrupts = <25 IRQ_TYPE_EDGE_FALLING>; }; }; #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi0 { #address-cells = <1>; #size-cells = <0>; accelerometer@0 { compatible = \"adi,adxl372\"; reg = <0>; spi-max-frequency = <1000000>; interrupt-parent = <&gpio>; interrupts = <25 IRQ_TYPE_EDGE_FALLING>; }; };","title":"ADI ADXL372"},{"location":"devs/ADI_ADXL372/#analog-devices-adxl372-3-axis-200g-digital-accelerometer","text":"Analog Devices ADXL372 3-Axis, +/-(200g) Digital Accelerometer that supports both I2C & SPI interfaces https://www.analog.com/en/products/adxl372.html Properties Name Type Required Info compatible enum yes Options: adi,adxl372 reg yes interrupts yes spi-max-frequency bool Examples #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> i2c0 { #address-cells = <1>; #size-cells = <0>; /* Example for a I2C device node */ accelerometer@53 { compatible = \"adi,adxl372\"; reg = <0x53>; interrupt-parent = <&gpio>; interrupts = <25 IRQ_TYPE_EDGE_FALLING>; }; }; #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> spi0 { #address-cells = <1>; #size-cells = <0>; accelerometer@0 { compatible = \"adi,adxl372\"; reg = <0>; spi-max-frequency = <1000000>; interrupt-parent = <&gpio>; interrupts = <25 IRQ_TYPE_EDGE_FALLING>; }; };","title":"Analog Devices ADXL372 3-Axis, +/-(200g) Digital Accelerometer"},{"location":"devs/ADI_ADXRS290/","text":"Analog Devices ADXRS290 Dual-Axis MEMS Gyroscope Bindings for the Analog Devices ADXRS290 dual-axis MEMS gyroscope device. https://www.analog.com/media/en/technical-documentation/data-sheets/ADXRS290.pdf Properties Name Type Required Info compatible yes reg yes spi-max-frequency yes spi-cpol bool yes spi-cpha bool yes interrupts Examples #include <dt-bindings/interrupt-controller/irq.h> spi { #address-cells = <1>; #size-cells = <0>; gyro@0 { compatible = \"adi,adxrs290\"; reg = <0>; spi-max-frequency = <5000000>; spi-cpol; spi-cpha; interrupt-parent = <&gpio>; interrupts = <25 IRQ_TYPE_EDGE_RISING>; }; };","title":"ADI ADXRS290"},{"location":"devs/ADI_ADXRS290/#analog-devices-adxrs290-dual-axis-mems-gyroscope","text":"Bindings for the Analog Devices ADXRS290 dual-axis MEMS gyroscope device. https://www.analog.com/media/en/technical-documentation/data-sheets/ADXRS290.pdf Properties Name Type Required Info compatible yes reg yes spi-max-frequency yes spi-cpol bool yes spi-cpha bool yes interrupts Examples #include <dt-bindings/interrupt-controller/irq.h> spi { #address-cells = <1>; #size-cells = <0>; gyro@0 { compatible = \"adi,adxrs290\"; reg = <0>; spi-max-frequency = <5000000>; spi-cpol; spi-cpha; interrupt-parent = <&gpio>; interrupts = <25 IRQ_TYPE_EDGE_RISING>; }; };","title":"Analog Devices ADXRS290 Dual-Axis MEMS Gyroscope"},{"location":"devs/ADI_AXI-ADC/","text":"Analog Devices AXI ADC IP core Analog Devices Generic AXI ADC IP core for interfacing an ADC device with a high speed serial (JESD204B/C) or source synchronous parallel interface (LVDS/CMOS). Usually, some other interface type (i.e SPI) is used as a control interface for the actual ADC, while this IP core will interface to the data-lines of the ADC and handle the streaming of data into memory via DMA. https://wiki.analog.com/resources/fpga/docs/axi_adc_ip Properties Name Type Required Info compatible enum yes Options: adi,axi-adc-10.0.a reg yes dmas yes dma-names adi,adc-dev yes A reference to a the actual ADC to which this FPGA ADC interfaces to. Examples axi-adc@44a00000 { compatible = \"adi,axi-adc-10.0.a\"; reg = <0x44a00000 0x10000>; dmas = <&rx_dma 0>; dma-names = \"rx\"; adi,adc-dev = <&spi_adc>; };","title":"ADI AXI ADC"},{"location":"devs/ADI_AXI-ADC/#analog-devices-axi-adc-ip-core","text":"Analog Devices Generic AXI ADC IP core for interfacing an ADC device with a high speed serial (JESD204B/C) or source synchronous parallel interface (LVDS/CMOS). Usually, some other interface type (i.e SPI) is used as a control interface for the actual ADC, while this IP core will interface to the data-lines of the ADC and handle the streaming of data into memory via DMA. https://wiki.analog.com/resources/fpga/docs/axi_adc_ip Properties Name Type Required Info compatible enum yes Options: adi,axi-adc-10.0.a reg yes dmas yes dma-names adi,adc-dev yes A reference to a the actual ADC to which this FPGA ADC interfaces to. Examples axi-adc@44a00000 { compatible = \"adi,axi-adc-10.0.a\"; reg = <0x44a00000 0x10000>; dmas = <&rx_dma 0>; dma-names = \"rx\"; adi,adc-dev = <&spi_adc>; };","title":"Analog Devices AXI ADC IP core"},{"location":"devs/ADI_AXI-PULSE-CAPTURE/","text":"Analog Devices AXI Pulse Capture Device Tree Bindings Analog Devices AXI Pulse Capture IP Core This core controls the state of a laser driver and a pulse generator signal. Properties Name Type Required Info compatible enum yes Options: adi,axi-pulse-capture-1.00.a reg yes interrupts yes clocks yes Examples fpga_axi : fpga-axi@0 { #address-cells = <0x1>; #size-cells = <0x1>; axi_pulse_capture : axi-pulse-capture@7c700000 { compatible = \"adi,axi-pulse-capture-1.00.a\"; reg = <0x7c700000 0x10000>; clocks = <&clkc 17>; interrupts = <0 52 0>; }; } ;","title":"ADI AXI PULSE CAPTURE"},{"location":"devs/ADI_AXI-PULSE-CAPTURE/#analog-devices-axi-pulse-capture-device-tree-bindings","text":"Analog Devices AXI Pulse Capture IP Core This core controls the state of a laser driver and a pulse generator signal. Properties Name Type Required Info compatible enum yes Options: adi,axi-pulse-capture-1.00.a reg yes interrupts yes clocks yes Examples fpga_axi : fpga-axi@0 { #address-cells = <0x1>; #size-cells = <0x1>; axi_pulse_capture : axi-pulse-capture@7c700000 { compatible = \"adi,axi-pulse-capture-1.00.a\"; reg = <0x7c700000 0x10000>; clocks = <&clkc 17>; interrupts = <0 52 0>; }; } ;","title":"Analog Devices AXI Pulse Capture Device Tree Bindings"},{"location":"devs/ADI_HMC425A/","text":"HMC425A 6-bit Digital Step Attenuator Digital Step Attenuator IIO device with gpio interface. HMC425A 0.5 dB LSB GaAs MMIC 6-BIT DIGITAL POSITIVE CONTROL ATTENUATOR, 2.2 - 8.0 GHz https://www.analog.com/media/en/technical-documentation/data-sheets/hmc425A.pdf Properties Name Type Required Info compatible enum yes Options: adi,hmc425a vcc-supply bool ctrl-gpios yes Must contain an array of 6 GPIO specifiers, referring to the GPIO pins connected to the control pins V1-V6. Examples #include <dt-bindings/gpio/gpio.h> gpio_hmc425a : hmc425a { compatible = \"adi,hmc425a\"; ctrl-gpios = <&gpio 40 GPIO_ACTIVE_HIGH>, <&gpio 39 GPIO_ACTIVE_HIGH>, <&gpio 38 GPIO_ACTIVE_HIGH>, <&gpio 37 GPIO_ACTIVE_HIGH>, <&gpio 36 GPIO_ACTIVE_HIGH>, <&gpio 35 GPIO_ACTIVE_HIGH>; vcc-supply = <&foo>; } ;","title":"ADI HMC425A"},{"location":"devs/ADI_HMC425A/#hmc425a-6-bit-digital-step-attenuator","text":"Digital Step Attenuator IIO device with gpio interface. HMC425A 0.5 dB LSB GaAs MMIC 6-BIT DIGITAL POSITIVE CONTROL ATTENUATOR, 2.2 - 8.0 GHz https://www.analog.com/media/en/technical-documentation/data-sheets/hmc425A.pdf Properties Name Type Required Info compatible enum yes Options: adi,hmc425a vcc-supply bool ctrl-gpios yes Must contain an array of 6 GPIO specifiers, referring to the GPIO pins connected to the control pins V1-V6. Examples #include <dt-bindings/gpio/gpio.h> gpio_hmc425a : hmc425a { compatible = \"adi,hmc425a\"; ctrl-gpios = <&gpio 40 GPIO_ACTIVE_HIGH>, <&gpio 39 GPIO_ACTIVE_HIGH>, <&gpio 38 GPIO_ACTIVE_HIGH>, <&gpio 37 GPIO_ACTIVE_HIGH>, <&gpio 36 GPIO_ACTIVE_HIGH>, <&gpio 35 GPIO_ACTIVE_HIGH>; vcc-supply = <&foo>; } ;","title":"HMC425A 6-bit Digital Step Attenuator"},{"location":"devs/ADI_LTC2308/","text":"Linear Technology LTC2308 ADC device driver The LTC \u00ae 2308 is a low noise, 500ksps, 8-channel, 12-bit ADC Properties Name Type Required Info compatible enum yes Options: adi,ltc2308 reg cnv-gpios yes Conversion start pin, used to trigger a transfer sequence Examples ltc2308 : adc@0 { compatible = \"adi,ltc2308\"; reg = <0>; #address-cells = <1>; #size-cells = <0>; spi-max-frequency = <40000000>; cnv-gpios = <&gpio 1 GPIO_ACTIVE_HIGH>; channel@0 { reg = <0>; }; channel@1 { reg = <1>; bipolar; }; channel@2 { diff-channels = <2 3>; }; channel@3 { diff-channels = <5 4>; bipolar; }; } ;","title":"ADI LTC2308"},{"location":"devs/ADI_LTC2308/#linear-technology-ltc2308-adc-device-driver","text":"The LTC \u00ae 2308 is a low noise, 500ksps, 8-channel, 12-bit ADC Properties Name Type Required Info compatible enum yes Options: adi,ltc2308 reg cnv-gpios yes Conversion start pin, used to trigger a transfer sequence Examples ltc2308 : adc@0 { compatible = \"adi,ltc2308\"; reg = <0>; #address-cells = <1>; #size-cells = <0>; spi-max-frequency = <40000000>; cnv-gpios = <&gpio 1 GPIO_ACTIVE_HIGH>; channel@0 { reg = <0>; }; channel@1 { reg = <1>; bipolar; }; channel@2 { diff-channels = <2 3>; }; channel@3 { diff-channels = <5 4>; bipolar; }; } ;","title":"Linear Technology LTC2308 ADC device driver"},{"location":"devs/ADI_LTC2471/","text":"Analog Devices LTC2471 16-bit I2C Sigma-Delta ADC Analog Devices LTC2471 (single-ended) and LTC2473 (differential) 16-bit I2C Sigma-Delta ADC with selectable 208/833sps output rate. https://www.analog.com/media/en/technical-documentation/data-sheets/24713fb.pdf Analog Devices LTC2461 (single-ended) and LTC2463 (differential) 16-bit I2C Sigma-Delta ADC with 60sps output rate. https://www.analog.com/media/en/technical-documentation/data-sheets/24613fa.pdf Properties Name Type Required Info compatible enum yes Options: adi,ltc2471 adi,ltc2473 adi,ltc2461 adi,ltc2463 reg yes Examples i2c0 { ltc2461@14 { compatible = \"ltc2461\"; reg = <0x14>; }; }; i2c0 { ltc2473@54 { compatible = \"ltc2473\"; reg = <0x54>; }; };","title":"ADI LTC2471"},{"location":"devs/ADI_LTC2471/#analog-devices-ltc2471-16-bit-i2c-sigma-delta-adc","text":"Analog Devices LTC2471 (single-ended) and LTC2473 (differential) 16-bit I2C Sigma-Delta ADC with selectable 208/833sps output rate. https://www.analog.com/media/en/technical-documentation/data-sheets/24713fb.pdf Analog Devices LTC2461 (single-ended) and LTC2463 (differential) 16-bit I2C Sigma-Delta ADC with 60sps output rate. https://www.analog.com/media/en/technical-documentation/data-sheets/24613fa.pdf Properties Name Type Required Info compatible enum yes Options: adi,ltc2471 adi,ltc2473 adi,ltc2461 adi,ltc2463 reg yes Examples i2c0 { ltc2461@14 { compatible = \"ltc2461\"; reg = <0x14>; }; }; i2c0 { ltc2473@54 { compatible = \"ltc2473\"; reg = <0x54>; }; };","title":"Analog Devices LTC2471 16-bit I2C Sigma-Delta ADC"},{"location":"devs/ADI_LTC2983/","text":"Analog Devices LTC2983 Multi-sensor Temperature system Analog Devices LTC2983 Multi-Sensor Digital Temperature Measurement System https://www.analog.com/media/en/technical-documentation/data-sheets/2983fc.pdf Properties Name Type Required Info compatible enum yes Options: adi,ltc2983 reg yes interrupts yes adi,mux-delay-config-us The LTC2983 performs 2 or 3 internal conversion cycles per temperature result. Each conversion cycle is performed with different excitation and input multiplexer configurations. Prior to each conversion, these excitation circuits and input switch configurations are changed and an internal 1ms delay ensures settling prior to the conversion cycle in most cases. An extra delay can be configured using this property. The value is rounded to nearest 100us. adi,filter-notch-freq Set's the default setting of the digital filter. The default is simultaneous 50/60Hz rejection. 0 - 50/60Hz rejection 1 - 60Hz rejection 2 - 50Hz rejection #address-cells #size-cells Examples #include <dt-bindings/interrupt-controller/irq.h> spi { #address-cells = <1>; #size-cells = <0>; sensor_ltc2983 : ltc2983@0 { compatible = \"adi,ltc2983\"; reg = <0>; #address-cells = <1>; #size-cells = <0>; interrupts = <20 IRQ_TYPE_EDGE_RISING>; interrupt-parent = <&gpio>; thermocouple@18 { reg = <18>; adi,sensor-type = <8>; //Type B adi,sensor-oc-current-microamp = <10>; adi,cold-junction-handle = <&diode5>; }; diode5 : diode@5 { reg = <5>; adi,sensor-type = <28>; }; rsense2 : rsense@2 { reg = <2>; adi,sensor-type = <29>; adi,rsense-val-milli-ohms = <1200000>; //1.2Kohms }; rtd@14 { reg = <14>; adi,sensor-type = <15>; //PT1000 /*2-wire, internal gnd, no current rotation*/ adi,number-of-wires = <2>; adi,rsense-share; adi,excitation-current-microamp = <500>; adi,rsense-handle = <&rsense2>; }; adc@10 { reg = <10>; adi,sensor-type = <30>; adi,single-ended; }; thermistor@12 { reg = <12>; adi,sensor-type = <26>; //Steinhart adi,rsense-handle = <&rsense2>; adi,custom-steinhart = <0x00F371EC 0x12345678 0x2C0F8733 0x10018C66 0xA0FEACCD 0x90021D99>; //6 entries }; thermocouple@20 { reg = <20>; adi,sensor-type = <9>; //custom thermocouple adi,single-ended; adi,custom-thermocouple = /bits/ 64 <(-50220000) 0>, <(-30200000) 99100000>, <(-5300000) 135400000>, <0 273150000>, <40200000 361200000>, <55300000 522100000>, <88300000 720300000>, <132200000 811200000>, <188700000 922500000>, <460400000 1000000000>; //10 pairs }; }; } ;","title":"ADI LTC2983"},{"location":"devs/ADI_LTC2983/#analog-devices-ltc2983-multi-sensor-temperature-system","text":"Analog Devices LTC2983 Multi-Sensor Digital Temperature Measurement System https://www.analog.com/media/en/technical-documentation/data-sheets/2983fc.pdf Properties Name Type Required Info compatible enum yes Options: adi,ltc2983 reg yes interrupts yes adi,mux-delay-config-us The LTC2983 performs 2 or 3 internal conversion cycles per temperature result. Each conversion cycle is performed with different excitation and input multiplexer configurations. Prior to each conversion, these excitation circuits and input switch configurations are changed and an internal 1ms delay ensures settling prior to the conversion cycle in most cases. An extra delay can be configured using this property. The value is rounded to nearest 100us. adi,filter-notch-freq Set's the default setting of the digital filter. The default is simultaneous 50/60Hz rejection. 0 - 50/60Hz rejection 1 - 60Hz rejection 2 - 50Hz rejection #address-cells #size-cells Examples #include <dt-bindings/interrupt-controller/irq.h> spi { #address-cells = <1>; #size-cells = <0>; sensor_ltc2983 : ltc2983@0 { compatible = \"adi,ltc2983\"; reg = <0>; #address-cells = <1>; #size-cells = <0>; interrupts = <20 IRQ_TYPE_EDGE_RISING>; interrupt-parent = <&gpio>; thermocouple@18 { reg = <18>; adi,sensor-type = <8>; //Type B adi,sensor-oc-current-microamp = <10>; adi,cold-junction-handle = <&diode5>; }; diode5 : diode@5 { reg = <5>; adi,sensor-type = <28>; }; rsense2 : rsense@2 { reg = <2>; adi,sensor-type = <29>; adi,rsense-val-milli-ohms = <1200000>; //1.2Kohms }; rtd@14 { reg = <14>; adi,sensor-type = <15>; //PT1000 /*2-wire, internal gnd, no current rotation*/ adi,number-of-wires = <2>; adi,rsense-share; adi,excitation-current-microamp = <500>; adi,rsense-handle = <&rsense2>; }; adc@10 { reg = <10>; adi,sensor-type = <30>; adi,single-ended; }; thermistor@12 { reg = <12>; adi,sensor-type = <26>; //Steinhart adi,rsense-handle = <&rsense2>; adi,custom-steinhart = <0x00F371EC 0x12345678 0x2C0F8733 0x10018C66 0xA0FEACCD 0x90021D99>; //6 entries }; thermocouple@20 { reg = <20>; adi,sensor-type = <9>; //custom thermocouple adi,single-ended; adi,custom-thermocouple = /bits/ 64 <(-50220000) 0>, <(-30200000) 99100000>, <(-5300000) 135400000>, <0 273150000>, <40200000 361200000>, <55300000 522100000>, <88300000 720300000>, <132200000 811200000>, <188700000 922500000>, <460400000 1000000000>; //10 pairs }; }; } ;","title":"Analog Devices LTC2983 Multi-sensor Temperature system"},{"location":"devs/ADI_LTC6952/","text":"Analog Devices LTC6952 ultralow jitter, JESD204B/C clock generation IC. Analog Devices LTC6952 ultralow jitter, JESD204B/C clock generation IC. https://www.analog.com/media/en/technical-documentation/data-sheets/ltc6952.pdf Properties Name Type Required Info compatible enum yes Options: adi,ltc6952 reg yes clock-output-names yes Clock output signal names indexed by the first cell in the clock specifier (see clock/clock-bindings.txt) adi,vco-frequency-hz VCO input frequency. This is fed to the internal distribution path and feedback dividers. adi,ref-frequency-hz Reference input frequency. This is fed in the reference divider. Examples ltc6952@0 { compatible = \"adi,ltc6952\"; reg = <0>; #address-cells = <1>; #size-cells = <0>; spi-max-frequency = <10000000>; clock-output-names = \"ltc6952_out0\", \"ltc6952_out1\", \"ltc6952_out2\", \"ltc6952_out3\", \"ltc6952_out4\", \"ltc6952_out5\", \"ltc6952_out6\", \"ltc6952_out7\", \"ltc6952_out8\", \"ltc6952_out9\", \"ltc6952_out10\"; #clock-cells = <1>; adi,vco-frequency-hz = <4000000000>; adi,ref-frequency-hz = <100000000>; ltc6952_c0 : channel@0 { reg = <0>; adi,extended-name = \"REF_CLK\"; adi,divider = <10>; adi,digital-delay = <100>; adi,analog-delay = <0>; }; ltc6952_c1 : channel@1 { reg = <1>; adi,extended-name = \"TEST_CLK\"; adi,divider = <10>; }; } ;","title":"ADI LTC6952"},{"location":"devs/ADI_LTC6952/#analog-devices-ltc6952-ultralow-jitter-jesd204bc-clock-generation-ic","text":"Analog Devices LTC6952 ultralow jitter, JESD204B/C clock generation IC. https://www.analog.com/media/en/technical-documentation/data-sheets/ltc6952.pdf Properties Name Type Required Info compatible enum yes Options: adi,ltc6952 reg yes clock-output-names yes Clock output signal names indexed by the first cell in the clock specifier (see clock/clock-bindings.txt) adi,vco-frequency-hz VCO input frequency. This is fed to the internal distribution path and feedback dividers. adi,ref-frequency-hz Reference input frequency. This is fed in the reference divider. Examples ltc6952@0 { compatible = \"adi,ltc6952\"; reg = <0>; #address-cells = <1>; #size-cells = <0>; spi-max-frequency = <10000000>; clock-output-names = \"ltc6952_out0\", \"ltc6952_out1\", \"ltc6952_out2\", \"ltc6952_out3\", \"ltc6952_out4\", \"ltc6952_out5\", \"ltc6952_out6\", \"ltc6952_out7\", \"ltc6952_out8\", \"ltc6952_out9\", \"ltc6952_out10\"; #clock-cells = <1>; adi,vco-frequency-hz = <4000000000>; adi,ref-frequency-hz = <100000000>; ltc6952_c0 : channel@0 { reg = <0>; adi,extended-name = \"REF_CLK\"; adi,divider = <10>; adi,digital-delay = <100>; adi,analog-delay = <0>; }; ltc6952_c1 : channel@1 { reg = <1>; adi,extended-name = \"TEST_CLK\"; adi,divider = <10>; }; } ;","title":"Analog Devices LTC6952 ultralow jitter, JESD204B/C clock generation IC."}]}