====== ADAQ8092 14-Bit, 105 MSPS, μModule Linux device driver ======

The ADAQ8092 is a 14-bit, 105 MSPS, high-speed dual-channel data acquisition (DAQ) μModule solution. The device incorporates signal conditioning, an analog-to-digital (ADC) driver, a voltage reference, and an ADC in a single package via system in package (SiP) technology. μModule solutions simplify the development of high-speed data acquisition systems by transferring the design
burden, component selection, optimization, and layout from the designer to the device. The ADAQ8092 enables a 6× footprint reduction.

===== Supported Devices =====

  * [[adi>ADAQ8092]]

===== Evaluation Boards =====

  * [[adi>EVAL-ADAQ8092|EVAL-ADAQ8092]]

===== Description =====

This is a Linux industrial I/O ([[software:linux:docs:iio:iio|IIO]]) subsystem driver, targeting RF Transceivers.
The industrial I/O subsystem provides a unified framework for drivers for many different types of converters and sensors using a number of different physical interfaces (i2c, spi, etc).
See [[software:linux:docs:iio:iio|IIO]] for more information.

====== Source Code ======

===== Status =====

^ Source ^ Mainlined? ^
| [[linux.github>master?drivers/iio/adc/adaq8092.c|git]] | [[linux.github>master?drivers/iio/adc/adaq8092.c|No]] |

===== Files =====

^ Function ^ File ^
| driver  | [[linux.github>master?drivers/iio/adc/adaq8092.c | drivers/iio/adc/adaq8092.c]] |

==== Related Device Drivers ====

^ Function ^ File ^
| driver  | [[linux.github>master?drivers/iio/adc/cf_axi_adc_core.c | drivers/iio/adc/cf_axi_adc_core.c]] |
| include | [[linux.github>master?drivers/iio/adc/cf_axi_adc.h | drivers/iio/adc/cf_axi_adc.h]] |


====== Example Linux Device-Tree Initialization ======

The ADAQ8092 driver is a spi-bus driver and can currently only be instantiated via device tree.

Required devicetree properties:
  * compatible: Should always be "adaq8092"
  * reg: SPI slave select number

^ Function ^ File ^
| EVAL-ADAQ8092 Device Tree  | [[linux.github>master?arch/arm/boot/dts/zynq-zed-adv7511-adaq8092.dts
| zynq-zed-adv7511-adaq8092.dts]] |

====== Enabling Linux driver support ======

Configure kernel with "make menuconfig" (alternatively use "make xconfig" or
"make qconfig")

<WRAP round help>
The ADAQ8092 driver depends on **SPI**
</WRAP>

====== Adding Linux driver support ======

Configure kernel with "make menuconfig" (alternatively use "make xconfig" or
"make qconfig")

<code>
Linux Kernel Configuration
	Device Drivers  --->
	<*>     Industrial I/O support --->
	    --- Industrial I/O support
	    -*-   Enable ring buffer support within IIO
	    -*-     Industrial I/O lock free software ring
	    -*-   Enable triggered sampling support

	          *** Analog to digital converters ***
	    [--snip--]

		<*>   Analog Devices ADAQ8092 uModule Data Acquisition Module

	    [--snip--]
</code>

====== Hardware configuration ======


====== Driver testing / API ======

{{page>software:linux:docs:iio:iio_snippets#iio device files&noheader&firstseconly&noeditbtn}}


<WRAP box bggreen><wrap info>This specifies any shell prompt running on the target</wrap>
<xterm>
root:/> **cd /sys/bus/iio/devices/**
root:/sys/bus/iio/devices> ls
iio:device0  iio:device1

root:/sys/bus/iio/devices> **cd iio:device1**

root:/sys/bus/iio/devices/iio:device1# ls -l
drwxr-xr-x 5 root root    0 Jan 22 08:19 .
drwxr-xr-x 4 root root    0 Jan 22 08:19 ..
drwxr-xr-x 2 root root    0 Jan 22 08:19 buffer
-r--r--r-- 1 root root 4096 Jan 22 08:19 dev
-rw-r--r-- 1 root root 4096 Jan 22 08:19 sampling frequency
-rw-r--r-- 1 root root 4096 Jan 22 08:19 in_voltage0_label
-rw-r--r-- 1 root root 4096 Jan 22 08:19 in_voltage1_label
-rw-r--r-- 1 root root 4096 Jan 22 08:19 sampling frequency
-r--r--r-- 1 root root 4096 Jan 22 08:19 name
drwxr-xr-x 2 root root    0 Jan 22 08:19 power
drwxr-xr-x 2 root root    0 Jan 22 08:19 scan_elements
lrwxrwxrwx 1 root root    0 Jan 22 08:19 subsystem -> ../../../../../bus/iio
-rw-r--r-- 1 root root 4096 Jan 22 08:19 uevent

root:/sys/bus/iio/devices/iio:device1#
</xterm></WRAP>

===== Show device name =====


<WRAP box bggreen><wrap info>This specifies any shell prompt running on the target</wrap>
<xterm>
root:/sys/bus/iio/devices/iio:device1> **cat name**
**adaq8092**
</xterm></WRAP>

=====  ADC sampling frequency (sampling_frequency) =====

Read only attribute which returns the ADC sampling rate in Hz. 

<WRAP box bggreen><wrap info>This specifies any shell prompt running on the target</wrap>
<xterm>
root@analog:/sys/bus/iio/devices/iio:device1# **cat sampling_frequency**
**105000000**
root@analog:/sys/bus/iio/devices/iio:device1# **echo 200000000 > sampling_frequency**
-bash: echo: write error: Invalid argument
</xterm></WRAP>


====== More Information ======

{{page>software:linux:docs:iio:iio_snippets#iio pointers&noheader&firstseconly&noeditbtn}}
